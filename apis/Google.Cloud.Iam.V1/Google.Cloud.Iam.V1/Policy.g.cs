// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/iam/v1/policy.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.Iam.V1 {

  /// <summary>Holder for reflection information generated from google/iam/v1/policy.proto</summary>
  public static partial class PolicyReflection {

    #region Descriptor
    /// <summary>File descriptor for google/iam/v1/policy.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PolicyReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chpnb29nbGUvaWFtL3YxL3BvbGljeS5wcm90bxINZ29vZ2xlLmlhbS52MRoW",
            "Z29vZ2xlL3R5cGUvZXhwci5wcm90bxocZ29vZ2xlL2FwaS9hbm5vdGF0aW9u",
            "cy5wcm90byJRCgZQb2xpY3kSDwoHdmVyc2lvbhgBIAEoBRIoCghiaW5kaW5n",
            "cxgEIAMoCzIWLmdvb2dsZS5pYW0udjEuQmluZGluZxIMCgRldGFnGAMgASgM",
            "Ik4KB0JpbmRpbmcSDAoEcm9sZRgBIAEoCRIPCgdtZW1iZXJzGAIgAygJEiQK",
            "CWNvbmRpdGlvbhgDIAEoCzIRLmdvb2dsZS50eXBlLkV4cHIigAEKC1BvbGlj",
            "eURlbHRhEjMKDmJpbmRpbmdfZGVsdGFzGAEgAygLMhsuZ29vZ2xlLmlhbS52",
            "MS5CaW5kaW5nRGVsdGESPAoTYXVkaXRfY29uZmlnX2RlbHRhcxgCIAMoCzIf",
            "Lmdvb2dsZS5pYW0udjEuQXVkaXRDb25maWdEZWx0YSK9AQoMQmluZGluZ0Rl",
            "bHRhEjIKBmFjdGlvbhgBIAEoDjIiLmdvb2dsZS5pYW0udjEuQmluZGluZ0Rl",
            "bHRhLkFjdGlvbhIMCgRyb2xlGAIgASgJEg4KBm1lbWJlchgDIAEoCRIkCglj",
            "b25kaXRpb24YBCABKAsyES5nb29nbGUudHlwZS5FeHByIjUKBkFjdGlvbhIW",
            "ChJBQ1RJT05fVU5TUEVDSUZJRUQQABIHCgNBREQQARIKCgZSRU1PVkUQAiK9",
            "AQoQQXVkaXRDb25maWdEZWx0YRI2CgZhY3Rpb24YASABKA4yJi5nb29nbGUu",
            "aWFtLnYxLkF1ZGl0Q29uZmlnRGVsdGEuQWN0aW9uEg8KB3NlcnZpY2UYAiAB",
            "KAkSFwoPZXhlbXB0ZWRfbWVtYmVyGAMgASgJEhAKCGxvZ190eXBlGAQgASgJ",
            "IjUKBkFjdGlvbhIWChJBQ1RJT05fVU5TUEVDSUZJRUQQABIHCgNBREQQARIK",
            "CgZSRU1PVkUQAkKDAQoRY29tLmdvb2dsZS5pYW0udjFCC1BvbGljeVByb3Rv",
            "UAFaMGdvb2dsZS5nb2xhbmcub3JnL2dlbnByb3RvL2dvb2dsZWFwaXMvaWFt",
            "L3YxO2lhbfgBAaoCE0dvb2dsZS5DbG91ZC5JYW0uVjHKAhNHb29nbGVcQ2xv",
            "dWRcSWFtXFYxYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Type.ExprReflection.Descriptor, global::Google.Api.AnnotationsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Iam.V1.Policy), global::Google.Cloud.Iam.V1.Policy.Parser, new[]{ "Version", "Bindings", "Etag" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Iam.V1.Binding), global::Google.Cloud.Iam.V1.Binding.Parser, new[]{ "Role", "Members", "Condition" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Iam.V1.PolicyDelta), global::Google.Cloud.Iam.V1.PolicyDelta.Parser, new[]{ "BindingDeltas", "AuditConfigDeltas" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Iam.V1.BindingDelta), global::Google.Cloud.Iam.V1.BindingDelta.Parser, new[]{ "Action", "Role", "Member", "Condition" }, null, new[]{ typeof(global::Google.Cloud.Iam.V1.BindingDelta.Types.Action) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Iam.V1.AuditConfigDelta), global::Google.Cloud.Iam.V1.AuditConfigDelta.Parser, new[]{ "Action", "Service", "ExemptedMember", "LogType" }, null, new[]{ typeof(global::Google.Cloud.Iam.V1.AuditConfigDelta.Types.Action) }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Defines an Identity and Access Management (IAM) policy. It is used to
  /// specify access control policies for Cloud Platform resources.
  ///
  /// A `Policy` is a collection of `bindings`. A `binding` binds one or more
  /// `members` to a single `role`. Members can be user accounts, service accounts,
  /// Google groups, and domains (such as G Suite). A `role` is a named list of
  /// permissions (defined by IAM or configured by users). A `binding` can
  /// optionally specify a `condition`, which is a logic expression that further
  /// constrains the role binding based on attributes about the request and/or
  /// target resource.
  ///
  /// **JSON Example**
  ///
  ///     {
  ///       "bindings": [
  ///         {
  ///           "role": "roles/resourcemanager.organizationAdmin",
  ///           "members": [
  ///             "user:mike@example.com",
  ///             "group:admins@example.com",
  ///             "domain:google.com",
  ///             "serviceAccount:my-project-id@appspot.gserviceaccount.com"
  ///           ]
  ///         },
  ///         {
  ///           "role": "roles/resourcemanager.organizationViewer",
  ///           "members": ["user:eve@example.com"],
  ///           "condition": {
  ///             "title": "expirable access",
  ///             "description": "Does not grant access after Sep 2020",
  ///             "expression": "request.time &lt;
  ///             timestamp('2020-10-01T00:00:00.000Z')",
  ///           }
  ///         }
  ///       ]
  ///     }
  ///
  /// **YAML Example**
  ///
  ///     bindings:
  ///     - members:
  ///       - user:mike@example.com
  ///       - group:admins@example.com
  ///       - domain:google.com
  ///       - serviceAccount:my-project-id@appspot.gserviceaccount.com
  ///       role: roles/resourcemanager.organizationAdmin
  ///     - members:
  ///       - user:eve@example.com
  ///       role: roles/resourcemanager.organizationViewer
  ///       condition:
  ///         title: expirable access
  ///         description: Does not grant access after Sep 2020
  ///         expression: request.time &lt; timestamp('2020-10-01T00:00:00.000Z')
  ///
  /// For a description of IAM and its features, see the
  /// [IAM developer's guide](https://cloud.google.com/iam/docs).
  /// </summary>
  public sealed partial class Policy : pb::IMessage<Policy>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Policy> _parser = new pb::MessageParser<Policy>(() => new Policy());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Policy> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Iam.V1.PolicyReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Policy() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Policy(Policy other) : this() {
      version_ = other.version_;
      bindings_ = other.bindings_.Clone();
      etag_ = other.etag_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Policy Clone() {
      return new Policy(this);
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 1;
    private int version_;
    /// <summary>
    /// Specifies the format of the policy.
    ///
    /// Valid values are 0, 1, and 3. Requests specifying an invalid value will be
    /// rejected.
    ///
    /// Operations affecting conditional bindings must specify version 3. This can
    /// be either setting a conditional policy, modifying a conditional binding,
    /// or removing a binding (conditional or unconditional) from the stored
    /// conditional policy.
    /// Operations on non-conditional policies may specify any valid value or
    /// leave the field unset.
    ///
    /// If no etag is provided in the call to `setIamPolicy`, version compliance
    /// checks against the stored policy is skipped.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Version {
      get { return version_; }
      set {
        version_ = value;
      }
    }

    /// <summary>Field number for the "bindings" field.</summary>
    public const int BindingsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Google.Cloud.Iam.V1.Binding> _repeated_bindings_codec
        = pb::FieldCodec.ForMessage(34, global::Google.Cloud.Iam.V1.Binding.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Iam.V1.Binding> bindings_ = new pbc::RepeatedField<global::Google.Cloud.Iam.V1.Binding>();
    /// <summary>
    /// Associates a list of `members` to a `role`. Optionally may specify a
    /// `condition` that determines when binding is in effect.
    /// `bindings` with no members will result in an error.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Iam.V1.Binding> Bindings {
      get { return bindings_; }
    }

    /// <summary>Field number for the "etag" field.</summary>
    public const int EtagFieldNumber = 3;
    private pb::ByteString etag_ = pb::ByteString.Empty;
    /// <summary>
    /// `etag` is used for optimistic concurrency control as a way to help
    /// prevent simultaneous updates of a policy from overwriting each other.
    /// It is strongly suggested that systems make use of the `etag` in the
    /// read-modify-write cycle to perform policy updates in order to avoid race
    /// conditions: An `etag` is returned in the response to `getIamPolicy`, and
    /// systems are expected to put that etag in the request to `setIamPolicy` to
    /// ensure that their change will be applied to the same version of the policy.
    ///
    /// If no `etag` is provided in the call to `setIamPolicy`, then the existing
    /// policy is overwritten. Due to blind-set semantics of an etag-less policy,
    /// 'setIamPolicy' will not fail even if the incoming policy version does not
    /// meet the requirements for modifying the stored policy.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Etag {
      get { return etag_; }
      set {
        etag_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Policy);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Policy other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Version != other.Version) return false;
      if(!bindings_.Equals(other.bindings_)) return false;
      if (Etag != other.Etag) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Version != 0) hash ^= Version.GetHashCode();
      hash ^= bindings_.GetHashCode();
      if (Etag.Length != 0) hash ^= Etag.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Version != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Version);
      }
      if (Etag.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Etag);
      }
      bindings_.WriteTo(output, _repeated_bindings_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Version != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Version);
      }
      if (Etag.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Etag);
      }
      bindings_.WriteTo(ref output, _repeated_bindings_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Version != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Version);
      }
      size += bindings_.CalculateSize(_repeated_bindings_codec);
      if (Etag.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Etag);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Policy other) {
      if (other == null) {
        return;
      }
      if (other.Version != 0) {
        Version = other.Version;
      }
      bindings_.Add(other.bindings_);
      if (other.Etag.Length != 0) {
        Etag = other.Etag;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Version = input.ReadInt32();
            break;
          }
          case 26: {
            Etag = input.ReadBytes();
            break;
          }
          case 34: {
            bindings_.AddEntriesFrom(input, _repeated_bindings_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Version = input.ReadInt32();
            break;
          }
          case 26: {
            Etag = input.ReadBytes();
            break;
          }
          case 34: {
            bindings_.AddEntriesFrom(ref input, _repeated_bindings_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Associates `members` with a `role`.
  /// </summary>
  public sealed partial class Binding : pb::IMessage<Binding>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Binding> _parser = new pb::MessageParser<Binding>(() => new Binding());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Binding> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Iam.V1.PolicyReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Binding() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Binding(Binding other) : this() {
      role_ = other.role_;
      members_ = other.members_.Clone();
      condition_ = other.condition_ != null ? other.condition_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Binding Clone() {
      return new Binding(this);
    }

    /// <summary>Field number for the "role" field.</summary>
    public const int RoleFieldNumber = 1;
    private string role_ = "";
    /// <summary>
    /// Role that is assigned to `members`.
    /// For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Role {
      get { return role_; }
      set {
        role_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "members" field.</summary>
    public const int MembersFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_members_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> members_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Specifies the identities requesting access for a Cloud Platform resource.
    /// `members` can have the following values:
    ///
    /// * `allUsers`: A special identifier that represents anyone who is
    ///    on the internet; with or without a Google account.
    ///
    /// * `allAuthenticatedUsers`: A special identifier that represents anyone
    ///    who is authenticated with a Google account or a service account.
    ///
    /// * `user:{emailid}`: An email address that represents a specific Google
    ///    account. For example, `alice@example.com` .
    ///
    /// * `serviceAccount:{emailid}`: An email address that represents a service
    ///    account. For example, `my-other-app@appspot.gserviceaccount.com`.
    ///
    /// * `group:{emailid}`: An email address that represents a Google group.
    ///    For example, `admins@example.com`.
    ///
    /// * `domain:{domain}`: The G Suite domain (primary) that represents all the
    ///    users of that domain. For example, `google.com` or `example.com`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Members {
      get { return members_; }
    }

    /// <summary>Field number for the "condition" field.</summary>
    public const int ConditionFieldNumber = 3;
    private global::Google.Type.Expr condition_;
    /// <summary>
    /// The condition that is associated with this binding.
    /// NOTE: An unsatisfied condition will not allow user access via current
    /// binding. Different bindings, including their conditions, are examined
    /// independently.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Type.Expr Condition {
      get { return condition_; }
      set {
        condition_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Binding);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Binding other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Role != other.Role) return false;
      if(!members_.Equals(other.members_)) return false;
      if (!object.Equals(Condition, other.Condition)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Role.Length != 0) hash ^= Role.GetHashCode();
      hash ^= members_.GetHashCode();
      if (condition_ != null) hash ^= Condition.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Role.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Role);
      }
      members_.WriteTo(output, _repeated_members_codec);
      if (condition_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Condition);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Role.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Role);
      }
      members_.WriteTo(ref output, _repeated_members_codec);
      if (condition_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Condition);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Role.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Role);
      }
      size += members_.CalculateSize(_repeated_members_codec);
      if (condition_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Condition);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Binding other) {
      if (other == null) {
        return;
      }
      if (other.Role.Length != 0) {
        Role = other.Role;
      }
      members_.Add(other.members_);
      if (other.condition_ != null) {
        if (condition_ == null) {
          Condition = new global::Google.Type.Expr();
        }
        Condition.MergeFrom(other.Condition);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Role = input.ReadString();
            break;
          }
          case 18: {
            members_.AddEntriesFrom(input, _repeated_members_codec);
            break;
          }
          case 26: {
            if (condition_ == null) {
              Condition = new global::Google.Type.Expr();
            }
            input.ReadMessage(Condition);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Role = input.ReadString();
            break;
          }
          case 18: {
            members_.AddEntriesFrom(ref input, _repeated_members_codec);
            break;
          }
          case 26: {
            if (condition_ == null) {
              Condition = new global::Google.Type.Expr();
            }
            input.ReadMessage(Condition);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The difference delta between two policies.
  /// </summary>
  public sealed partial class PolicyDelta : pb::IMessage<PolicyDelta>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PolicyDelta> _parser = new pb::MessageParser<PolicyDelta>(() => new PolicyDelta());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PolicyDelta> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Iam.V1.PolicyReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PolicyDelta() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PolicyDelta(PolicyDelta other) : this() {
      bindingDeltas_ = other.bindingDeltas_.Clone();
      auditConfigDeltas_ = other.auditConfigDeltas_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PolicyDelta Clone() {
      return new PolicyDelta(this);
    }

    /// <summary>Field number for the "binding_deltas" field.</summary>
    public const int BindingDeltasFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.Iam.V1.BindingDelta> _repeated_bindingDeltas_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.Iam.V1.BindingDelta.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Iam.V1.BindingDelta> bindingDeltas_ = new pbc::RepeatedField<global::Google.Cloud.Iam.V1.BindingDelta>();
    /// <summary>
    /// The delta for Bindings between two policies.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Iam.V1.BindingDelta> BindingDeltas {
      get { return bindingDeltas_; }
    }

    /// <summary>Field number for the "audit_config_deltas" field.</summary>
    public const int AuditConfigDeltasFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Google.Cloud.Iam.V1.AuditConfigDelta> _repeated_auditConfigDeltas_codec
        = pb::FieldCodec.ForMessage(18, global::Google.Cloud.Iam.V1.AuditConfigDelta.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Iam.V1.AuditConfigDelta> auditConfigDeltas_ = new pbc::RepeatedField<global::Google.Cloud.Iam.V1.AuditConfigDelta>();
    /// <summary>
    /// The delta for AuditConfigs between two policies.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Iam.V1.AuditConfigDelta> AuditConfigDeltas {
      get { return auditConfigDeltas_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PolicyDelta);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PolicyDelta other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!bindingDeltas_.Equals(other.bindingDeltas_)) return false;
      if(!auditConfigDeltas_.Equals(other.auditConfigDeltas_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= bindingDeltas_.GetHashCode();
      hash ^= auditConfigDeltas_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      bindingDeltas_.WriteTo(output, _repeated_bindingDeltas_codec);
      auditConfigDeltas_.WriteTo(output, _repeated_auditConfigDeltas_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      bindingDeltas_.WriteTo(ref output, _repeated_bindingDeltas_codec);
      auditConfigDeltas_.WriteTo(ref output, _repeated_auditConfigDeltas_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += bindingDeltas_.CalculateSize(_repeated_bindingDeltas_codec);
      size += auditConfigDeltas_.CalculateSize(_repeated_auditConfigDeltas_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PolicyDelta other) {
      if (other == null) {
        return;
      }
      bindingDeltas_.Add(other.bindingDeltas_);
      auditConfigDeltas_.Add(other.auditConfigDeltas_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            bindingDeltas_.AddEntriesFrom(input, _repeated_bindingDeltas_codec);
            break;
          }
          case 18: {
            auditConfigDeltas_.AddEntriesFrom(input, _repeated_auditConfigDeltas_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            bindingDeltas_.AddEntriesFrom(ref input, _repeated_bindingDeltas_codec);
            break;
          }
          case 18: {
            auditConfigDeltas_.AddEntriesFrom(ref input, _repeated_auditConfigDeltas_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// One delta entry for Binding. Each individual change (only one member in each
  /// entry) to a binding will be a separate entry.
  /// </summary>
  public sealed partial class BindingDelta : pb::IMessage<BindingDelta>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BindingDelta> _parser = new pb::MessageParser<BindingDelta>(() => new BindingDelta());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BindingDelta> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Iam.V1.PolicyReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BindingDelta() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BindingDelta(BindingDelta other) : this() {
      action_ = other.action_;
      role_ = other.role_;
      member_ = other.member_;
      condition_ = other.condition_ != null ? other.condition_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BindingDelta Clone() {
      return new BindingDelta(this);
    }

    /// <summary>Field number for the "action" field.</summary>
    public const int ActionFieldNumber = 1;
    private global::Google.Cloud.Iam.V1.BindingDelta.Types.Action action_ = global::Google.Cloud.Iam.V1.BindingDelta.Types.Action.Unspecified;
    /// <summary>
    /// The action that was performed on a Binding.
    /// Required
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Iam.V1.BindingDelta.Types.Action Action {
      get { return action_; }
      set {
        action_ = value;
      }
    }

    /// <summary>Field number for the "role" field.</summary>
    public const int RoleFieldNumber = 2;
    private string role_ = "";
    /// <summary>
    /// Role that is assigned to `members`.
    /// For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
    /// Required
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Role {
      get { return role_; }
      set {
        role_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "member" field.</summary>
    public const int MemberFieldNumber = 3;
    private string member_ = "";
    /// <summary>
    /// A single identity requesting access for a Cloud Platform resource.
    /// Follows the same format of Binding.members.
    /// Required
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Member {
      get { return member_; }
      set {
        member_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "condition" field.</summary>
    public const int ConditionFieldNumber = 4;
    private global::Google.Type.Expr condition_;
    /// <summary>
    /// The condition that is associated with this binding.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Type.Expr Condition {
      get { return condition_; }
      set {
        condition_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BindingDelta);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BindingDelta other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Action != other.Action) return false;
      if (Role != other.Role) return false;
      if (Member != other.Member) return false;
      if (!object.Equals(Condition, other.Condition)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Action != global::Google.Cloud.Iam.V1.BindingDelta.Types.Action.Unspecified) hash ^= Action.GetHashCode();
      if (Role.Length != 0) hash ^= Role.GetHashCode();
      if (Member.Length != 0) hash ^= Member.GetHashCode();
      if (condition_ != null) hash ^= Condition.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Action != global::Google.Cloud.Iam.V1.BindingDelta.Types.Action.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Action);
      }
      if (Role.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Role);
      }
      if (Member.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Member);
      }
      if (condition_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Condition);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Action != global::Google.Cloud.Iam.V1.BindingDelta.Types.Action.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Action);
      }
      if (Role.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Role);
      }
      if (Member.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Member);
      }
      if (condition_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Condition);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Action != global::Google.Cloud.Iam.V1.BindingDelta.Types.Action.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Action);
      }
      if (Role.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Role);
      }
      if (Member.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Member);
      }
      if (condition_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Condition);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BindingDelta other) {
      if (other == null) {
        return;
      }
      if (other.Action != global::Google.Cloud.Iam.V1.BindingDelta.Types.Action.Unspecified) {
        Action = other.Action;
      }
      if (other.Role.Length != 0) {
        Role = other.Role;
      }
      if (other.Member.Length != 0) {
        Member = other.Member;
      }
      if (other.condition_ != null) {
        if (condition_ == null) {
          Condition = new global::Google.Type.Expr();
        }
        Condition.MergeFrom(other.Condition);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Action = (global::Google.Cloud.Iam.V1.BindingDelta.Types.Action) input.ReadEnum();
            break;
          }
          case 18: {
            Role = input.ReadString();
            break;
          }
          case 26: {
            Member = input.ReadString();
            break;
          }
          case 34: {
            if (condition_ == null) {
              Condition = new global::Google.Type.Expr();
            }
            input.ReadMessage(Condition);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Action = (global::Google.Cloud.Iam.V1.BindingDelta.Types.Action) input.ReadEnum();
            break;
          }
          case 18: {
            Role = input.ReadString();
            break;
          }
          case 26: {
            Member = input.ReadString();
            break;
          }
          case 34: {
            if (condition_ == null) {
              Condition = new global::Google.Type.Expr();
            }
            input.ReadMessage(Condition);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the BindingDelta message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// The type of action performed on a Binding in a policy.
      /// </summary>
      public enum Action {
        /// <summary>
        /// Unspecified.
        /// </summary>
        [pbr::OriginalName("ACTION_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Addition of a Binding.
        /// </summary>
        [pbr::OriginalName("ADD")] Add = 1,
        /// <summary>
        /// Removal of a Binding.
        /// </summary>
        [pbr::OriginalName("REMOVE")] Remove = 2,
      }

    }
    #endregion

  }

  /// <summary>
  /// One delta entry for AuditConfig. Each individual change (only one
  /// exempted_member in each entry) to a AuditConfig will be a separate entry.
  /// </summary>
  public sealed partial class AuditConfigDelta : pb::IMessage<AuditConfigDelta>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AuditConfigDelta> _parser = new pb::MessageParser<AuditConfigDelta>(() => new AuditConfigDelta());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AuditConfigDelta> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Iam.V1.PolicyReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AuditConfigDelta() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AuditConfigDelta(AuditConfigDelta other) : this() {
      action_ = other.action_;
      service_ = other.service_;
      exemptedMember_ = other.exemptedMember_;
      logType_ = other.logType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AuditConfigDelta Clone() {
      return new AuditConfigDelta(this);
    }

    /// <summary>Field number for the "action" field.</summary>
    public const int ActionFieldNumber = 1;
    private global::Google.Cloud.Iam.V1.AuditConfigDelta.Types.Action action_ = global::Google.Cloud.Iam.V1.AuditConfigDelta.Types.Action.Unspecified;
    /// <summary>
    /// The action that was performed on an audit configuration in a policy.
    /// Required
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Iam.V1.AuditConfigDelta.Types.Action Action {
      get { return action_; }
      set {
        action_ = value;
      }
    }

    /// <summary>Field number for the "service" field.</summary>
    public const int ServiceFieldNumber = 2;
    private string service_ = "";
    /// <summary>
    /// Specifies a service that was configured for Cloud Audit Logging.
    /// For example, `storage.googleapis.com`, `cloudsql.googleapis.com`.
    /// `allServices` is a special value that covers all services.
    /// Required
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Service {
      get { return service_; }
      set {
        service_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "exempted_member" field.</summary>
    public const int ExemptedMemberFieldNumber = 3;
    private string exemptedMember_ = "";
    /// <summary>
    /// A single identity that is exempted from "data access" audit
    /// logging for the `service` specified above.
    /// Follows the same format of Binding.members.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ExemptedMember {
      get { return exemptedMember_; }
      set {
        exemptedMember_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "log_type" field.</summary>
    public const int LogTypeFieldNumber = 4;
    private string logType_ = "";
    /// <summary>
    /// Specifies the log_type that was be enabled. ADMIN_ACTIVITY is always
    /// enabled, and cannot be configured.
    /// Required
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LogType {
      get { return logType_; }
      set {
        logType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AuditConfigDelta);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AuditConfigDelta other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Action != other.Action) return false;
      if (Service != other.Service) return false;
      if (ExemptedMember != other.ExemptedMember) return false;
      if (LogType != other.LogType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Action != global::Google.Cloud.Iam.V1.AuditConfigDelta.Types.Action.Unspecified) hash ^= Action.GetHashCode();
      if (Service.Length != 0) hash ^= Service.GetHashCode();
      if (ExemptedMember.Length != 0) hash ^= ExemptedMember.GetHashCode();
      if (LogType.Length != 0) hash ^= LogType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Action != global::Google.Cloud.Iam.V1.AuditConfigDelta.Types.Action.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Action);
      }
      if (Service.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Service);
      }
      if (ExemptedMember.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ExemptedMember);
      }
      if (LogType.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(LogType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Action != global::Google.Cloud.Iam.V1.AuditConfigDelta.Types.Action.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Action);
      }
      if (Service.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Service);
      }
      if (ExemptedMember.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ExemptedMember);
      }
      if (LogType.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(LogType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Action != global::Google.Cloud.Iam.V1.AuditConfigDelta.Types.Action.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Action);
      }
      if (Service.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Service);
      }
      if (ExemptedMember.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExemptedMember);
      }
      if (LogType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LogType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AuditConfigDelta other) {
      if (other == null) {
        return;
      }
      if (other.Action != global::Google.Cloud.Iam.V1.AuditConfigDelta.Types.Action.Unspecified) {
        Action = other.Action;
      }
      if (other.Service.Length != 0) {
        Service = other.Service;
      }
      if (other.ExemptedMember.Length != 0) {
        ExemptedMember = other.ExemptedMember;
      }
      if (other.LogType.Length != 0) {
        LogType = other.LogType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Action = (global::Google.Cloud.Iam.V1.AuditConfigDelta.Types.Action) input.ReadEnum();
            break;
          }
          case 18: {
            Service = input.ReadString();
            break;
          }
          case 26: {
            ExemptedMember = input.ReadString();
            break;
          }
          case 34: {
            LogType = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Action = (global::Google.Cloud.Iam.V1.AuditConfigDelta.Types.Action) input.ReadEnum();
            break;
          }
          case 18: {
            Service = input.ReadString();
            break;
          }
          case 26: {
            ExemptedMember = input.ReadString();
            break;
          }
          case 34: {
            LogType = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the AuditConfigDelta message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// The type of action performed on an audit configuration in a policy.
      /// </summary>
      public enum Action {
        /// <summary>
        /// Unspecified.
        /// </summary>
        [pbr::OriginalName("ACTION_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Addition of an audit configuration.
        /// </summary>
        [pbr::OriginalName("ADD")] Add = 1,
        /// <summary>
        /// Removal of an audit configuration.
        /// </summary>
        [pbr::OriginalName("REMOVE")] Remove = 2,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
