// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: bigtable/v2/proto/google/cloud/conformance/bigtable/v2/tests.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.Bigtable.V2.Tests.Conformance {

  /// <summary>Holder for reflection information generated from bigtable/v2/proto/google/cloud/conformance/bigtable/v2/tests.proto</summary>
  public static partial class TestsReflection {

    #region Descriptor
    /// <summary>File descriptor for bigtable/v2/proto/google/cloud/conformance/bigtable/v2/tests.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TestsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CkJiaWd0YWJsZS92Mi9wcm90by9nb29nbGUvY2xvdWQvY29uZm9ybWFuY2Uv",
            "YmlndGFibGUvdjIvdGVzdHMucHJvdG8SJGdvb2dsZS5jbG91ZC5jb25mb3Jt",
            "YW5jZS5iaWd0YWJsZS52MhohZ29vZ2xlL2JpZ3RhYmxlL3YyL2JpZ3RhYmxl",
            "LnByb3RvIlcKCFRlc3RGaWxlEksKD3JlYWRfcm93c190ZXN0cxgBIAMoCzIy",
            "Lmdvb2dsZS5jbG91ZC5jb25mb3JtYW5jZS5iaWd0YWJsZS52Mi5SZWFkUm93",
            "c1Rlc3QiugIKDFJlYWRSb3dzVGVzdBITCgtkZXNjcmlwdGlvbhgBIAEoCRI+",
            "CgZjaHVua3MYAiADKAsyLi5nb29nbGUuYmlndGFibGUudjIuUmVhZFJvd3NS",
            "ZXNwb25zZS5DZWxsQ2h1bmsSSgoHcmVzdWx0cxgDIAMoCzI5Lmdvb2dsZS5j",
            "bG91ZC5jb25mb3JtYW5jZS5iaWd0YWJsZS52Mi5SZWFkUm93c1Rlc3QuUmVz",
            "dWx0GogBCgZSZXN1bHQSDwoHcm93X2tleRgBIAEoCRITCgtmYW1pbHlfbmFt",
            "ZRgCIAEoCRIRCglxdWFsaWZpZXIYAyABKAkSGAoQdGltZXN0YW1wX21pY3Jv",
            "cxgEIAEoAxINCgV2YWx1ZRgFIAEoCRINCgVsYWJlbBgGIAEoCRINCgVlcnJv",
            "chgHIAEoCEJnCihjb20uZ29vZ2xlLmNsb3VkLmNvbmZvcm1hbmNlLmJpZ3Rh",
            "YmxlLnYyQg5UZXN0RGVmaW5pdGlvbqoCKkdvb2dsZS5DbG91ZC5CaWd0YWJs",
            "ZS5WMi5UZXN0cy5Db25mb3JtYW5jZWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Cloud.Bigtable.V2.BigtableReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Bigtable.V2.Tests.Conformance.TestFile), global::Google.Cloud.Bigtable.V2.Tests.Conformance.TestFile.Parser, new[]{ "ReadRowsTests" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Bigtable.V2.Tests.Conformance.ReadRowsTest), global::Google.Cloud.Bigtable.V2.Tests.Conformance.ReadRowsTest.Parser, new[]{ "Description", "Chunks", "Results" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Bigtable.V2.Tests.Conformance.ReadRowsTest.Types.Result), global::Google.Cloud.Bigtable.V2.Tests.Conformance.ReadRowsTest.Types.Result.Parser, new[]{ "RowKey", "FamilyName", "Qualifier", "TimestampMicros", "Value", "Label", "Error" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class TestFile : pb::IMessage<TestFile>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TestFile> _parser = new pb::MessageParser<TestFile>(() => new TestFile());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TestFile> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Bigtable.V2.Tests.Conformance.TestsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestFile() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestFile(TestFile other) : this() {
      readRowsTests_ = other.readRowsTests_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestFile Clone() {
      return new TestFile(this);
    }

    /// <summary>Field number for the "read_rows_tests" field.</summary>
    public const int ReadRowsTestsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.Bigtable.V2.Tests.Conformance.ReadRowsTest> _repeated_readRowsTests_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.Bigtable.V2.Tests.Conformance.ReadRowsTest.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Bigtable.V2.Tests.Conformance.ReadRowsTest> readRowsTests_ = new pbc::RepeatedField<global::Google.Cloud.Bigtable.V2.Tests.Conformance.ReadRowsTest>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Bigtable.V2.Tests.Conformance.ReadRowsTest> ReadRowsTests {
      get { return readRowsTests_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TestFile);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TestFile other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!readRowsTests_.Equals(other.readRowsTests_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= readRowsTests_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      readRowsTests_.WriteTo(output, _repeated_readRowsTests_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      readRowsTests_.WriteTo(ref output, _repeated_readRowsTests_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += readRowsTests_.CalculateSize(_repeated_readRowsTests_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TestFile other) {
      if (other == null) {
        return;
      }
      readRowsTests_.Add(other.readRowsTests_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            readRowsTests_.AddEntriesFrom(input, _repeated_readRowsTests_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            readRowsTests_.AddEntriesFrom(ref input, _repeated_readRowsTests_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ReadRowsTest : pb::IMessage<ReadRowsTest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReadRowsTest> _parser = new pb::MessageParser<ReadRowsTest>(() => new ReadRowsTest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReadRowsTest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Bigtable.V2.Tests.Conformance.TestsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadRowsTest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadRowsTest(ReadRowsTest other) : this() {
      description_ = other.description_;
      chunks_ = other.chunks_.Clone();
      results_ = other.results_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadRowsTest Clone() {
      return new ReadRowsTest(this);
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 1;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "chunks" field.</summary>
    public const int ChunksFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Google.Cloud.Bigtable.V2.ReadRowsResponse.Types.CellChunk> _repeated_chunks_codec
        = pb::FieldCodec.ForMessage(18, global::Google.Cloud.Bigtable.V2.ReadRowsResponse.Types.CellChunk.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Bigtable.V2.ReadRowsResponse.Types.CellChunk> chunks_ = new pbc::RepeatedField<global::Google.Cloud.Bigtable.V2.ReadRowsResponse.Types.CellChunk>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Bigtable.V2.ReadRowsResponse.Types.CellChunk> Chunks {
      get { return chunks_; }
    }

    /// <summary>Field number for the "results" field.</summary>
    public const int ResultsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Google.Cloud.Bigtable.V2.Tests.Conformance.ReadRowsTest.Types.Result> _repeated_results_codec
        = pb::FieldCodec.ForMessage(26, global::Google.Cloud.Bigtable.V2.Tests.Conformance.ReadRowsTest.Types.Result.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Bigtable.V2.Tests.Conformance.ReadRowsTest.Types.Result> results_ = new pbc::RepeatedField<global::Google.Cloud.Bigtable.V2.Tests.Conformance.ReadRowsTest.Types.Result>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Bigtable.V2.Tests.Conformance.ReadRowsTest.Types.Result> Results {
      get { return results_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReadRowsTest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReadRowsTest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Description != other.Description) return false;
      if(!chunks_.Equals(other.chunks_)) return false;
      if(!results_.Equals(other.results_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      hash ^= chunks_.GetHashCode();
      hash ^= results_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Description.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Description);
      }
      chunks_.WriteTo(output, _repeated_chunks_codec);
      results_.WriteTo(output, _repeated_results_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Description.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Description);
      }
      chunks_.WriteTo(ref output, _repeated_chunks_codec);
      results_.WriteTo(ref output, _repeated_results_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      size += chunks_.CalculateSize(_repeated_chunks_codec);
      size += results_.CalculateSize(_repeated_results_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReadRowsTest other) {
      if (other == null) {
        return;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      chunks_.Add(other.chunks_);
      results_.Add(other.results_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Description = input.ReadString();
            break;
          }
          case 18: {
            chunks_.AddEntriesFrom(input, _repeated_chunks_codec);
            break;
          }
          case 26: {
            results_.AddEntriesFrom(input, _repeated_results_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Description = input.ReadString();
            break;
          }
          case 18: {
            chunks_.AddEntriesFrom(ref input, _repeated_chunks_codec);
            break;
          }
          case 26: {
            results_.AddEntriesFrom(ref input, _repeated_results_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ReadRowsTest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Expected results of reading the row.
      /// Only the last result can be an error.
      /// </summary>
      public sealed partial class Result : pb::IMessage<Result>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Result> _parser = new pb::MessageParser<Result>(() => new Result());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Result> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Bigtable.V2.Tests.Conformance.ReadRowsTest.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Result() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Result(Result other) : this() {
          rowKey_ = other.rowKey_;
          familyName_ = other.familyName_;
          qualifier_ = other.qualifier_;
          timestampMicros_ = other.timestampMicros_;
          value_ = other.value_;
          label_ = other.label_;
          error_ = other.error_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Result Clone() {
          return new Result(this);
        }

        /// <summary>Field number for the "row_key" field.</summary>
        public const int RowKeyFieldNumber = 1;
        private string rowKey_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string RowKey {
          get { return rowKey_; }
          set {
            rowKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "family_name" field.</summary>
        public const int FamilyNameFieldNumber = 2;
        private string familyName_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string FamilyName {
          get { return familyName_; }
          set {
            familyName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "qualifier" field.</summary>
        public const int QualifierFieldNumber = 3;
        private string qualifier_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Qualifier {
          get { return qualifier_; }
          set {
            qualifier_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "timestamp_micros" field.</summary>
        public const int TimestampMicrosFieldNumber = 4;
        private long timestampMicros_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long TimestampMicros {
          get { return timestampMicros_; }
          set {
            timestampMicros_ = value;
          }
        }

        /// <summary>Field number for the "value" field.</summary>
        public const int ValueFieldNumber = 5;
        private string value_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Value {
          get { return value_; }
          set {
            value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "label" field.</summary>
        public const int LabelFieldNumber = 6;
        private string label_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Label {
          get { return label_; }
          set {
            label_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "error" field.</summary>
        public const int ErrorFieldNumber = 7;
        private bool error_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Error {
          get { return error_; }
          set {
            error_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Result);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Result other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (RowKey != other.RowKey) return false;
          if (FamilyName != other.FamilyName) return false;
          if (Qualifier != other.Qualifier) return false;
          if (TimestampMicros != other.TimestampMicros) return false;
          if (Value != other.Value) return false;
          if (Label != other.Label) return false;
          if (Error != other.Error) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (RowKey.Length != 0) hash ^= RowKey.GetHashCode();
          if (FamilyName.Length != 0) hash ^= FamilyName.GetHashCode();
          if (Qualifier.Length != 0) hash ^= Qualifier.GetHashCode();
          if (TimestampMicros != 0L) hash ^= TimestampMicros.GetHashCode();
          if (Value.Length != 0) hash ^= Value.GetHashCode();
          if (Label.Length != 0) hash ^= Label.GetHashCode();
          if (Error != false) hash ^= Error.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (RowKey.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(RowKey);
          }
          if (FamilyName.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(FamilyName);
          }
          if (Qualifier.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(Qualifier);
          }
          if (TimestampMicros != 0L) {
            output.WriteRawTag(32);
            output.WriteInt64(TimestampMicros);
          }
          if (Value.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(Value);
          }
          if (Label.Length != 0) {
            output.WriteRawTag(50);
            output.WriteString(Label);
          }
          if (Error != false) {
            output.WriteRawTag(56);
            output.WriteBool(Error);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (RowKey.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(RowKey);
          }
          if (FamilyName.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(FamilyName);
          }
          if (Qualifier.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(Qualifier);
          }
          if (TimestampMicros != 0L) {
            output.WriteRawTag(32);
            output.WriteInt64(TimestampMicros);
          }
          if (Value.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(Value);
          }
          if (Label.Length != 0) {
            output.WriteRawTag(50);
            output.WriteString(Label);
          }
          if (Error != false) {
            output.WriteRawTag(56);
            output.WriteBool(Error);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (RowKey.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(RowKey);
          }
          if (FamilyName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(FamilyName);
          }
          if (Qualifier.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Qualifier);
          }
          if (TimestampMicros != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(TimestampMicros);
          }
          if (Value.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
          }
          if (Label.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Label);
          }
          if (Error != false) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Result other) {
          if (other == null) {
            return;
          }
          if (other.RowKey.Length != 0) {
            RowKey = other.RowKey;
          }
          if (other.FamilyName.Length != 0) {
            FamilyName = other.FamilyName;
          }
          if (other.Qualifier.Length != 0) {
            Qualifier = other.Qualifier;
          }
          if (other.TimestampMicros != 0L) {
            TimestampMicros = other.TimestampMicros;
          }
          if (other.Value.Length != 0) {
            Value = other.Value;
          }
          if (other.Label.Length != 0) {
            Label = other.Label;
          }
          if (other.Error != false) {
            Error = other.Error;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                RowKey = input.ReadString();
                break;
              }
              case 18: {
                FamilyName = input.ReadString();
                break;
              }
              case 26: {
                Qualifier = input.ReadString();
                break;
              }
              case 32: {
                TimestampMicros = input.ReadInt64();
                break;
              }
              case 42: {
                Value = input.ReadString();
                break;
              }
              case 50: {
                Label = input.ReadString();
                break;
              }
              case 56: {
                Error = input.ReadBool();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                RowKey = input.ReadString();
                break;
              }
              case 18: {
                FamilyName = input.ReadString();
                break;
              }
              case 26: {
                Qualifier = input.ReadString();
                break;
              }
              case 32: {
                TimestampMicros = input.ReadInt64();
                break;
              }
              case 42: {
                Value = input.ReadString();
                break;
              }
              case 50: {
                Label = input.ReadString();
                break;
              }
              case 56: {
                Error = input.ReadBool();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
