// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/bigtable/admin/v2/bigtable_table_admin.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.Bigtable.Admin.V2 {

  /// <summary>Holder for reflection information generated from google/bigtable/admin/v2/bigtable_table_admin.proto</summary>
  public static partial class BigtableTableAdminReflection {

    #region Descriptor
    /// <summary>File descriptor for google/bigtable/admin/v2/bigtable_table_admin.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BigtableTableAdminReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjNnb29nbGUvYmlndGFibGUvYWRtaW4vdjIvYmlndGFibGVfdGFibGVfYWRt",
            "aW4ucHJvdG8SGGdvb2dsZS5iaWd0YWJsZS5hZG1pbi52MhocZ29vZ2xlL2Fw",
            "aS9hbm5vdGF0aW9ucy5wcm90bxokZ29vZ2xlL2JpZ3RhYmxlL2FkbWluL3Yy",
            "L3RhYmxlLnByb3RvGh5nb29nbGUvaWFtL3YxL2lhbV9wb2xpY3kucHJvdG8a",
            "Gmdvb2dsZS9pYW0vdjEvcG9saWN5LnByb3RvGiNnb29nbGUvbG9uZ3J1bm5p",
            "bmcvb3BlcmF0aW9ucy5wcm90bxoeZ29vZ2xlL3Byb3RvYnVmL2R1cmF0aW9u",
            "LnByb3RvGhtnb29nbGUvcHJvdG9idWYvZW1wdHkucHJvdG8aH2dvb2dsZS9w",
            "cm90b2J1Zi90aW1lc3RhbXAucHJvdG8iyAEKEkNyZWF0ZVRhYmxlUmVxdWVz",
            "dBIOCgZwYXJlbnQYASABKAkSEAoIdGFibGVfaWQYAiABKAkSLgoFdGFibGUY",
            "AyABKAsyHy5nb29nbGUuYmlndGFibGUuYWRtaW4udjIuVGFibGUSSgoOaW5p",
            "dGlhbF9zcGxpdHMYBCADKAsyMi5nb29nbGUuYmlndGFibGUuYWRtaW4udjIu",
            "Q3JlYXRlVGFibGVSZXF1ZXN0LlNwbGl0GhQKBVNwbGl0EgsKA2tleRgBIAEo",
            "DCJbCh5DcmVhdGVUYWJsZUZyb21TbmFwc2hvdFJlcXVlc3QSDgoGcGFyZW50",
            "GAEgASgJEhAKCHRhYmxlX2lkGAIgASgJEhcKD3NvdXJjZV9zbmFwc2hvdBgD",
            "IAEoCSJtChNEcm9wUm93UmFuZ2VSZXF1ZXN0EgwKBG5hbWUYASABKAkSGAoO",
            "cm93X2tleV9wcmVmaXgYAiABKAxIABIkChpkZWxldGVfYWxsX2RhdGFfZnJv",
            "bV90YWJsZRgDIAEoCEgAQggKBnRhcmdldCJ+ChFMaXN0VGFibGVzUmVxdWVz",
            "dBIOCgZwYXJlbnQYASABKAkSMgoEdmlldxgCIAEoDjIkLmdvb2dsZS5iaWd0",
            "YWJsZS5hZG1pbi52Mi5UYWJsZS5WaWV3EhEKCXBhZ2Vfc2l6ZRgEIAEoBRIS",
            "CgpwYWdlX3Rva2VuGAMgASgJIl4KEkxpc3RUYWJsZXNSZXNwb25zZRIvCgZ0",
            "YWJsZXMYASADKAsyHy5nb29nbGUuYmlndGFibGUuYWRtaW4udjIuVGFibGUS",
            "FwoPbmV4dF9wYWdlX3Rva2VuGAIgASgJIlMKD0dldFRhYmxlUmVxdWVzdBIM",
            "CgRuYW1lGAEgASgJEjIKBHZpZXcYAiABKA4yJC5nb29nbGUuYmlndGFibGUu",
            "YWRtaW4udjIuVGFibGUuVmlldyIiChJEZWxldGVUYWJsZVJlcXVlc3QSDAoE",
            "bmFtZRgBIAEoCSKuAgobTW9kaWZ5Q29sdW1uRmFtaWxpZXNSZXF1ZXN0EgwK",
            "BG5hbWUYASABKAkSWQoNbW9kaWZpY2F0aW9ucxgCIAMoCzJCLmdvb2dsZS5i",
            "aWd0YWJsZS5hZG1pbi52Mi5Nb2RpZnlDb2x1bW5GYW1pbGllc1JlcXVlc3Qu",
            "TW9kaWZpY2F0aW9uGqUBCgxNb2RpZmljYXRpb24SCgoCaWQYASABKAkSOAoG",
            "Y3JlYXRlGAIgASgLMiYuZ29vZ2xlLmJpZ3RhYmxlLmFkbWluLnYyLkNvbHVt",
            "bkZhbWlseUgAEjgKBnVwZGF0ZRgDIAEoCzImLmdvb2dsZS5iaWd0YWJsZS5h",
            "ZG1pbi52Mi5Db2x1bW5GYW1pbHlIABIOCgRkcm9wGAQgASgISABCBQoDbW9k",
            "Ii8KH0dlbmVyYXRlQ29uc2lzdGVuY3lUb2tlblJlcXVlc3QSDAoEbmFtZRgB",
            "IAEoCSI9CiBHZW5lcmF0ZUNvbnNpc3RlbmN5VG9rZW5SZXNwb25zZRIZChFj",
            "b25zaXN0ZW5jeV90b2tlbhgBIAEoCSJCChdDaGVja0NvbnNpc3RlbmN5UmVx",
            "dWVzdBIMCgRuYW1lGAEgASgJEhkKEWNvbnNpc3RlbmN5X3Rva2VuGAIgASgJ",
            "Ii4KGENoZWNrQ29uc2lzdGVuY3lSZXNwb25zZRISCgpjb25zaXN0ZW50GAEg",
            "ASgIIocBChRTbmFwc2hvdFRhYmxlUmVxdWVzdBIMCgRuYW1lGAEgASgJEg8K",
            "B2NsdXN0ZXIYAiABKAkSEwoLc25hcHNob3RfaWQYAyABKAkSJgoDdHRsGAQg",
            "ASgLMhkuZ29vZ2xlLnByb3RvYnVmLkR1cmF0aW9uEhMKC2Rlc2NyaXB0aW9u",
            "GAUgASgJIiIKEkdldFNuYXBzaG90UmVxdWVzdBIMCgRuYW1lGAEgASgJIk0K",
            "FExpc3RTbmFwc2hvdHNSZXF1ZXN0Eg4KBnBhcmVudBgBIAEoCRIRCglwYWdl",
            "X3NpemUYAiABKAUSEgoKcGFnZV90b2tlbhgDIAEoCSJnChVMaXN0U25hcHNo",
            "b3RzUmVzcG9uc2USNQoJc25hcHNob3RzGAEgAygLMiIuZ29vZ2xlLmJpZ3Rh",
            "YmxlLmFkbWluLnYyLlNuYXBzaG90EhcKD25leHRfcGFnZV90b2tlbhgCIAEo",
            "CSIlChVEZWxldGVTbmFwc2hvdFJlcXVlc3QSDAoEbmFtZRgBIAEoCSLEAQoV",
            "U25hcHNob3RUYWJsZU1ldGFkYXRhEkgKEG9yaWdpbmFsX3JlcXVlc3QYASAB",
            "KAsyLi5nb29nbGUuYmlndGFibGUuYWRtaW4udjIuU25hcHNob3RUYWJsZVJl",
            "cXVlc3QSMAoMcmVxdWVzdF90aW1lGAIgASgLMhouZ29vZ2xlLnByb3RvYnVm",
            "LlRpbWVzdGFtcBIvCgtmaW5pc2hfdGltZRgDIAEoCzIaLmdvb2dsZS5wcm90",
            "b2J1Zi5UaW1lc3RhbXAi2AEKH0NyZWF0ZVRhYmxlRnJvbVNuYXBzaG90TWV0",
            "YWRhdGESUgoQb3JpZ2luYWxfcmVxdWVzdBgBIAEoCzI4Lmdvb2dsZS5iaWd0",
            "YWJsZS5hZG1pbi52Mi5DcmVhdGVUYWJsZUZyb21TbmFwc2hvdFJlcXVlc3QS",
            "MAoMcmVxdWVzdF90aW1lGAIgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVz",
            "dGFtcBIvCgtmaW5pc2hfdGltZRgDIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5U",
            "aW1lc3RhbXAymRUKEkJpZ3RhYmxlVGFibGVBZG1pbhKTAQoLQ3JlYXRlVGFi",
            "bGUSLC5nb29nbGUuYmlndGFibGUuYWRtaW4udjIuQ3JlYXRlVGFibGVSZXF1",
            "ZXN0Gh8uZ29vZ2xlLmJpZ3RhYmxlLmFkbWluLnYyLlRhYmxlIjWC0+STAi8i",
            "Ki92Mi97cGFyZW50PXByb2plY3RzLyovaW5zdGFuY2VzLyp9L3RhYmxlczoB",
            "KhK8AQoXQ3JlYXRlVGFibGVGcm9tU25hcHNob3QSOC5nb29nbGUuYmlndGFi",
            "bGUuYWRtaW4udjIuQ3JlYXRlVGFibGVGcm9tU25hcHNob3RSZXF1ZXN0Gh0u",
            "Z29vZ2xlLmxvbmdydW5uaW5nLk9wZXJhdGlvbiJIgtPkkwJCIj0vdjIve3Bh",
            "cmVudD1wcm9qZWN0cy8qL2luc3RhbmNlcy8qfS90YWJsZXM6Y3JlYXRlRnJv",
            "bVNuYXBzaG90OgEqEpsBCgpMaXN0VGFibGVzEisuZ29vZ2xlLmJpZ3RhYmxl",
            "LmFkbWluLnYyLkxpc3RUYWJsZXNSZXF1ZXN0GiwuZ29vZ2xlLmJpZ3RhYmxl",
            "LmFkbWluLnYyLkxpc3RUYWJsZXNSZXNwb25zZSIygtPkkwIsEiovdjIve3Bh",
            "cmVudD1wcm9qZWN0cy8qL2luc3RhbmNlcy8qfS90YWJsZXMSigEKCEdldFRh",
            "YmxlEikuZ29vZ2xlLmJpZ3RhYmxlLmFkbWluLnYyLkdldFRhYmxlUmVxdWVz",
            "dBofLmdvb2dsZS5iaWd0YWJsZS5hZG1pbi52Mi5UYWJsZSIygtPkkwIsEiov",
            "djIve25hbWU9cHJvamVjdHMvKi9pbnN0YW5jZXMvKi90YWJsZXMvKn0ShwEK",
            "C0RlbGV0ZVRhYmxlEiwuZ29vZ2xlLmJpZ3RhYmxlLmFkbWluLnYyLkRlbGV0",
            "ZVRhYmxlUmVxdWVzdBoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eSIygtPkkwIs",
            "KiovdjIve25hbWU9cHJvamVjdHMvKi9pbnN0YW5jZXMvKi90YWJsZXMvKn0S",
            "ugEKFE1vZGlmeUNvbHVtbkZhbWlsaWVzEjUuZ29vZ2xlLmJpZ3RhYmxlLmFk",
            "bWluLnYyLk1vZGlmeUNvbHVtbkZhbWlsaWVzUmVxdWVzdBofLmdvb2dsZS5i",
            "aWd0YWJsZS5hZG1pbi52Mi5UYWJsZSJKgtPkkwJEIj8vdjIve25hbWU9cHJv",
            "amVjdHMvKi9pbnN0YW5jZXMvKi90YWJsZXMvKn06bW9kaWZ5Q29sdW1uRmFt",
            "aWxpZXM6ASoSmQEKDERyb3BSb3dSYW5nZRItLmdvb2dsZS5iaWd0YWJsZS5h",
            "ZG1pbi52Mi5Ecm9wUm93UmFuZ2VSZXF1ZXN0GhYuZ29vZ2xlLnByb3RvYnVm",
            "LkVtcHR5IkKC0+STAjwiNy92Mi97bmFtZT1wcm9qZWN0cy8qL2luc3RhbmNl",
            "cy8qL3RhYmxlcy8qfTpkcm9wUm93UmFuZ2U6ASoS4QEKGEdlbmVyYXRlQ29u",
            "c2lzdGVuY3lUb2tlbhI5Lmdvb2dsZS5iaWd0YWJsZS5hZG1pbi52Mi5HZW5l",
            "cmF0ZUNvbnNpc3RlbmN5VG9rZW5SZXF1ZXN0GjouZ29vZ2xlLmJpZ3RhYmxl",
            "LmFkbWluLnYyLkdlbmVyYXRlQ29uc2lzdGVuY3lUb2tlblJlc3BvbnNlIk6C",
            "0+STAkgiQy92Mi97bmFtZT1wcm9qZWN0cy8qL2luc3RhbmNlcy8qL3RhYmxl",
            "cy8qfTpnZW5lcmF0ZUNvbnNpc3RlbmN5VG9rZW46ASoSwQEKEENoZWNrQ29u",
            "c2lzdGVuY3kSMS5nb29nbGUuYmlndGFibGUuYWRtaW4udjIuQ2hlY2tDb25z",
            "aXN0ZW5jeVJlcXVlc3QaMi5nb29nbGUuYmlndGFibGUuYWRtaW4udjIuQ2hl",
            "Y2tDb25zaXN0ZW5jeVJlc3BvbnNlIkaC0+STAkAiOy92Mi97bmFtZT1wcm9q",
            "ZWN0cy8qL2luc3RhbmNlcy8qL3RhYmxlcy8qfTpjaGVja0NvbnNpc3RlbmN5",
            "OgEqEp4BCg1TbmFwc2hvdFRhYmxlEi4uZ29vZ2xlLmJpZ3RhYmxlLmFkbWlu",
            "LnYyLlNuYXBzaG90VGFibGVSZXF1ZXN0Gh0uZ29vZ2xlLmxvbmdydW5uaW5n",
            "Lk9wZXJhdGlvbiI+gtPkkwI4IjMvdjIve25hbWU9cHJvamVjdHMvKi9pbnN0",
            "YW5jZXMvKi90YWJsZXMvKn06c25hcHNob3Q6ASoSoQEKC0dldFNuYXBzaG90",
            "EiwuZ29vZ2xlLmJpZ3RhYmxlLmFkbWluLnYyLkdldFNuYXBzaG90UmVxdWVz",
            "dBoiLmdvb2dsZS5iaWd0YWJsZS5hZG1pbi52Mi5TbmFwc2hvdCJAgtPkkwI6",
            "EjgvdjIve25hbWU9cHJvamVjdHMvKi9pbnN0YW5jZXMvKi9jbHVzdGVycy8q",
            "L3NuYXBzaG90cy8qfRKyAQoNTGlzdFNuYXBzaG90cxIuLmdvb2dsZS5iaWd0",
            "YWJsZS5hZG1pbi52Mi5MaXN0U25hcHNob3RzUmVxdWVzdBovLmdvb2dsZS5i",
            "aWd0YWJsZS5hZG1pbi52Mi5MaXN0U25hcHNob3RzUmVzcG9uc2UiQILT5JMC",
            "OhI4L3YyL3twYXJlbnQ9cHJvamVjdHMvKi9pbnN0YW5jZXMvKi9jbHVzdGVy",
            "cy8qfS9zbmFwc2hvdHMSmwEKDkRlbGV0ZVNuYXBzaG90Ei8uZ29vZ2xlLmJp",
            "Z3RhYmxlLmFkbWluLnYyLkRlbGV0ZVNuYXBzaG90UmVxdWVzdBoWLmdvb2ds",
            "ZS5wcm90b2J1Zi5FbXB0eSJAgtPkkwI6KjgvdjIve25hbWU9cHJvamVjdHMv",
            "Ki9pbnN0YW5jZXMvKi9jbHVzdGVycy8qL3NuYXBzaG90cy8qfRKRAQoMR2V0",
            "SWFtUG9saWN5EiIuZ29vZ2xlLmlhbS52MS5HZXRJYW1Qb2xpY3lSZXF1ZXN0",
            "GhUuZ29vZ2xlLmlhbS52MS5Qb2xpY3kiRoLT5JMCQCI7L3YyL3tyZXNvdXJj",
            "ZT1wcm9qZWN0cy8qL2luc3RhbmNlcy8qL3RhYmxlcy8qfTpnZXRJYW1Qb2xp",
            "Y3k6ASoSkQEKDFNldElhbVBvbGljeRIiLmdvb2dsZS5pYW0udjEuU2V0SWFt",
            "UG9saWN5UmVxdWVzdBoVLmdvb2dsZS5pYW0udjEuUG9saWN5IkaC0+STAkAi",
            "Oy92Mi97cmVzb3VyY2U9cHJvamVjdHMvKi9pbnN0YW5jZXMvKi90YWJsZXMv",
            "Kn06c2V0SWFtUG9saWN5OgEqErcBChJUZXN0SWFtUGVybWlzc2lvbnMSKC5n",
            "b29nbGUuaWFtLnYxLlRlc3RJYW1QZXJtaXNzaW9uc1JlcXVlc3QaKS5nb29n",
            "bGUuaWFtLnYxLlRlc3RJYW1QZXJtaXNzaW9uc1Jlc3BvbnNlIkyC0+STAkYi",
            "QS92Mi97cmVzb3VyY2U9cHJvamVjdHMvKi9pbnN0YW5jZXMvKi90YWJsZXMv",
            "Kn06dGVzdElhbVBlcm1pc3Npb25zOgEqQroBChxjb20uZ29vZ2xlLmJpZ3Rh",
            "YmxlLmFkbWluLnYyQhdCaWd0YWJsZVRhYmxlQWRtaW5Qcm90b1ABWj1nb29n",
            "bGUuZ29sYW5nLm9yZy9nZW5wcm90by9nb29nbGVhcGlzL2JpZ3RhYmxlL2Fk",
            "bWluL3YyO2FkbWluqgIeR29vZ2xlLkNsb3VkLkJpZ3RhYmxlLkFkbWluLlYy",
            "ygIeR29vZ2xlXENsb3VkXEJpZ3RhYmxlXEFkbWluXFYyYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.AnnotationsReflection.Descriptor, global::Google.Cloud.Bigtable.Admin.V2.TableReflection.Descriptor, global::Google.Cloud.Iam.V1.IamPolicyReflection.Descriptor, global::Google.Cloud.Iam.V1.PolicyReflection.Descriptor, global::Google.LongRunning.OperationsReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.DurationReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Bigtable.Admin.V2.CreateTableRequest), global::Google.Cloud.Bigtable.Admin.V2.CreateTableRequest.Parser, new[]{ "Parent", "TableId", "Table", "InitialSplits" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Bigtable.Admin.V2.CreateTableRequest.Types.Split), global::Google.Cloud.Bigtable.Admin.V2.CreateTableRequest.Types.Split.Parser, new[]{ "Key" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Bigtable.Admin.V2.CreateTableFromSnapshotRequest), global::Google.Cloud.Bigtable.Admin.V2.CreateTableFromSnapshotRequest.Parser, new[]{ "Parent", "TableId", "SourceSnapshot" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Bigtable.Admin.V2.DropRowRangeRequest), global::Google.Cloud.Bigtable.Admin.V2.DropRowRangeRequest.Parser, new[]{ "Name", "RowKeyPrefix", "DeleteAllDataFromTable" }, new[]{ "Target" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Bigtable.Admin.V2.ListTablesRequest), global::Google.Cloud.Bigtable.Admin.V2.ListTablesRequest.Parser, new[]{ "Parent", "View", "PageSize", "PageToken" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Bigtable.Admin.V2.ListTablesResponse), global::Google.Cloud.Bigtable.Admin.V2.ListTablesResponse.Parser, new[]{ "Tables", "NextPageToken" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Bigtable.Admin.V2.GetTableRequest), global::Google.Cloud.Bigtable.Admin.V2.GetTableRequest.Parser, new[]{ "Name", "View" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Bigtable.Admin.V2.DeleteTableRequest), global::Google.Cloud.Bigtable.Admin.V2.DeleteTableRequest.Parser, new[]{ "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Bigtable.Admin.V2.ModifyColumnFamiliesRequest), global::Google.Cloud.Bigtable.Admin.V2.ModifyColumnFamiliesRequest.Parser, new[]{ "Name", "Modifications" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Bigtable.Admin.V2.ModifyColumnFamiliesRequest.Types.Modification), global::Google.Cloud.Bigtable.Admin.V2.ModifyColumnFamiliesRequest.Types.Modification.Parser, new[]{ "Id", "Create", "Update", "Drop" }, new[]{ "Mod" }, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Bigtable.Admin.V2.GenerateConsistencyTokenRequest), global::Google.Cloud.Bigtable.Admin.V2.GenerateConsistencyTokenRequest.Parser, new[]{ "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Bigtable.Admin.V2.GenerateConsistencyTokenResponse), global::Google.Cloud.Bigtable.Admin.V2.GenerateConsistencyTokenResponse.Parser, new[]{ "ConsistencyToken" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Bigtable.Admin.V2.CheckConsistencyRequest), global::Google.Cloud.Bigtable.Admin.V2.CheckConsistencyRequest.Parser, new[]{ "Name", "ConsistencyToken" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Bigtable.Admin.V2.CheckConsistencyResponse), global::Google.Cloud.Bigtable.Admin.V2.CheckConsistencyResponse.Parser, new[]{ "Consistent" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Bigtable.Admin.V2.SnapshotTableRequest), global::Google.Cloud.Bigtable.Admin.V2.SnapshotTableRequest.Parser, new[]{ "Name", "Cluster", "SnapshotId", "Ttl", "Description" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Bigtable.Admin.V2.GetSnapshotRequest), global::Google.Cloud.Bigtable.Admin.V2.GetSnapshotRequest.Parser, new[]{ "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Bigtable.Admin.V2.ListSnapshotsRequest), global::Google.Cloud.Bigtable.Admin.V2.ListSnapshotsRequest.Parser, new[]{ "Parent", "PageSize", "PageToken" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Bigtable.Admin.V2.ListSnapshotsResponse), global::Google.Cloud.Bigtable.Admin.V2.ListSnapshotsResponse.Parser, new[]{ "Snapshots", "NextPageToken" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Bigtable.Admin.V2.DeleteSnapshotRequest), global::Google.Cloud.Bigtable.Admin.V2.DeleteSnapshotRequest.Parser, new[]{ "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Bigtable.Admin.V2.SnapshotTableMetadata), global::Google.Cloud.Bigtable.Admin.V2.SnapshotTableMetadata.Parser, new[]{ "OriginalRequest", "RequestTime", "FinishTime" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Bigtable.Admin.V2.CreateTableFromSnapshotMetadata), global::Google.Cloud.Bigtable.Admin.V2.CreateTableFromSnapshotMetadata.Parser, new[]{ "OriginalRequest", "RequestTime", "FinishTime" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Request message for
  /// [google.bigtable.admin.v2.BigtableTableAdmin.CreateTable][google.bigtable.admin.v2.BigtableTableAdmin.CreateTable]
  /// </summary>
  public sealed partial class CreateTableRequest : pb::IMessage<CreateTableRequest> {
    private static readonly pb::MessageParser<CreateTableRequest> _parser = new pb::MessageParser<CreateTableRequest>(() => new CreateTableRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateTableRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Bigtable.Admin.V2.BigtableTableAdminReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateTableRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateTableRequest(CreateTableRequest other) : this() {
      parent_ = other.parent_;
      tableId_ = other.tableId_;
      table_ = other.table_ != null ? other.table_.Clone() : null;
      initialSplits_ = other.initialSplits_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateTableRequest Clone() {
      return new CreateTableRequest(this);
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 1;
    private string parent_ = "";
    /// <summary>
    /// The unique name of the instance in which to create the table.
    /// Values are of the form `projects/&lt;project>/instances/&lt;instance>`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "table_id" field.</summary>
    public const int TableIdFieldNumber = 2;
    private string tableId_ = "";
    /// <summary>
    /// The name by which the new table should be referred to within the parent
    /// instance, e.g., `foobar` rather than `&lt;parent>/tables/foobar`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TableId {
      get { return tableId_; }
      set {
        tableId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "table" field.</summary>
    public const int TableFieldNumber = 3;
    private global::Google.Cloud.Bigtable.Admin.V2.Table table_;
    /// <summary>
    /// The Table to create.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Bigtable.Admin.V2.Table Table {
      get { return table_; }
      set {
        table_ = value;
      }
    }

    /// <summary>Field number for the "initial_splits" field.</summary>
    public const int InitialSplitsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Google.Cloud.Bigtable.Admin.V2.CreateTableRequest.Types.Split> _repeated_initialSplits_codec
        = pb::FieldCodec.ForMessage(34, global::Google.Cloud.Bigtable.Admin.V2.CreateTableRequest.Types.Split.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Bigtable.Admin.V2.CreateTableRequest.Types.Split> initialSplits_ = new pbc::RepeatedField<global::Google.Cloud.Bigtable.Admin.V2.CreateTableRequest.Types.Split>();
    /// <summary>
    /// The optional list of row keys that will be used to initially split the
    /// table into several tablets (tablets are similar to HBase regions).
    /// Given two split keys, `s1` and `s2`, three tablets will be created,
    /// spanning the key ranges: `[, s1), [s1, s2), [s2, )`.
    ///
    /// Example:
    ///
    /// * Row keys := `["a", "apple", "custom", "customer_1", "customer_2",`
    ///                `"other", "zz"]`
    /// * initial_split_keys := `["apple", "customer_1", "customer_2", "other"]`
    /// * Key assignment:
    ///     - Tablet 1 `[, apple)                => {"a"}.`
    ///     - Tablet 2 `[apple, customer_1)      => {"apple", "custom"}.`
    ///     - Tablet 3 `[customer_1, customer_2) => {"customer_1"}.`
    ///     - Tablet 4 `[customer_2, other)      => {"customer_2"}.`
    ///     - Tablet 5 `[other, )                => {"other", "zz"}.`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Bigtable.Admin.V2.CreateTableRequest.Types.Split> InitialSplits {
      get { return initialSplits_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateTableRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateTableRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Parent != other.Parent) return false;
      if (TableId != other.TableId) return false;
      if (!object.Equals(Table, other.Table)) return false;
      if(!initialSplits_.Equals(other.initialSplits_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (TableId.Length != 0) hash ^= TableId.GetHashCode();
      if (table_ != null) hash ^= Table.GetHashCode();
      hash ^= initialSplits_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (TableId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TableId);
      }
      if (table_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Table);
      }
      initialSplits_.WriteTo(output, _repeated_initialSplits_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (TableId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TableId);
      }
      if (table_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Table);
      }
      size += initialSplits_.CalculateSize(_repeated_initialSplits_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateTableRequest other) {
      if (other == null) {
        return;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      if (other.TableId.Length != 0) {
        TableId = other.TableId;
      }
      if (other.table_ != null) {
        if (table_ == null) {
          Table = new global::Google.Cloud.Bigtable.Admin.V2.Table();
        }
        Table.MergeFrom(other.Table);
      }
      initialSplits_.Add(other.initialSplits_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            TableId = input.ReadString();
            break;
          }
          case 26: {
            if (table_ == null) {
              Table = new global::Google.Cloud.Bigtable.Admin.V2.Table();
            }
            input.ReadMessage(Table);
            break;
          }
          case 34: {
            initialSplits_.AddEntriesFrom(input, _repeated_initialSplits_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the CreateTableRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// An initial split point for a newly created table.
      /// </summary>
      public sealed partial class Split : pb::IMessage<Split> {
        private static readonly pb::MessageParser<Split> _parser = new pb::MessageParser<Split>(() => new Split());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Split> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Bigtable.Admin.V2.CreateTableRequest.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Split() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Split(Split other) : this() {
          key_ = other.key_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Split Clone() {
          return new Split(this);
        }

        /// <summary>Field number for the "key" field.</summary>
        public const int KeyFieldNumber = 1;
        private pb::ByteString key_ = pb::ByteString.Empty;
        /// <summary>
        /// Row key to use as an initial tablet boundary.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString Key {
          get { return key_; }
          set {
            key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Split);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Split other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Key != other.Key) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Key.Length != 0) hash ^= Key.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Key.Length != 0) {
            output.WriteRawTag(10);
            output.WriteBytes(Key);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Key.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(Key);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Split other) {
          if (other == null) {
            return;
          }
          if (other.Key.Length != 0) {
            Key = other.Key;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Key = input.ReadBytes();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  /// <summary>
  /// Request message for
  /// [google.bigtable.admin.v2.BigtableTableAdmin.CreateTableFromSnapshot][google.bigtable.admin.v2.BigtableTableAdmin.CreateTableFromSnapshot]
  ///
  /// Note: This is a private alpha release of Cloud Bigtable snapshots. This
  /// feature is not currently available to most Cloud Bigtable customers. This
  /// feature might be changed in backward-incompatible ways and is not recommended
  /// for production use. It is not subject to any SLA or deprecation policy.
  /// </summary>
  public sealed partial class CreateTableFromSnapshotRequest : pb::IMessage<CreateTableFromSnapshotRequest> {
    private static readonly pb::MessageParser<CreateTableFromSnapshotRequest> _parser = new pb::MessageParser<CreateTableFromSnapshotRequest>(() => new CreateTableFromSnapshotRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateTableFromSnapshotRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Bigtable.Admin.V2.BigtableTableAdminReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateTableFromSnapshotRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateTableFromSnapshotRequest(CreateTableFromSnapshotRequest other) : this() {
      parent_ = other.parent_;
      tableId_ = other.tableId_;
      sourceSnapshot_ = other.sourceSnapshot_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateTableFromSnapshotRequest Clone() {
      return new CreateTableFromSnapshotRequest(this);
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 1;
    private string parent_ = "";
    /// <summary>
    /// The unique name of the instance in which to create the table.
    /// Values are of the form `projects/&lt;project>/instances/&lt;instance>`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "table_id" field.</summary>
    public const int TableIdFieldNumber = 2;
    private string tableId_ = "";
    /// <summary>
    /// The name by which the new table should be referred to within the parent
    /// instance, e.g., `foobar` rather than `&lt;parent>/tables/foobar`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TableId {
      get { return tableId_; }
      set {
        tableId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "source_snapshot" field.</summary>
    public const int SourceSnapshotFieldNumber = 3;
    private string sourceSnapshot_ = "";
    /// <summary>
    /// The unique name of the snapshot from which to restore the table. The
    /// snapshot and the table must be in the same instance.
    /// Values are of the form
    /// `projects/&lt;project>/instances/&lt;instance>/clusters/&lt;cluster>/snapshots/&lt;snapshot>`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SourceSnapshot {
      get { return sourceSnapshot_; }
      set {
        sourceSnapshot_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateTableFromSnapshotRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateTableFromSnapshotRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Parent != other.Parent) return false;
      if (TableId != other.TableId) return false;
      if (SourceSnapshot != other.SourceSnapshot) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (TableId.Length != 0) hash ^= TableId.GetHashCode();
      if (SourceSnapshot.Length != 0) hash ^= SourceSnapshot.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (TableId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TableId);
      }
      if (SourceSnapshot.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(SourceSnapshot);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (TableId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TableId);
      }
      if (SourceSnapshot.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SourceSnapshot);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateTableFromSnapshotRequest other) {
      if (other == null) {
        return;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      if (other.TableId.Length != 0) {
        TableId = other.TableId;
      }
      if (other.SourceSnapshot.Length != 0) {
        SourceSnapshot = other.SourceSnapshot;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            TableId = input.ReadString();
            break;
          }
          case 26: {
            SourceSnapshot = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Request message for
  /// [google.bigtable.admin.v2.BigtableTableAdmin.DropRowRange][google.bigtable.admin.v2.BigtableTableAdmin.DropRowRange]
  /// </summary>
  public sealed partial class DropRowRangeRequest : pb::IMessage<DropRowRangeRequest> {
    private static readonly pb::MessageParser<DropRowRangeRequest> _parser = new pb::MessageParser<DropRowRangeRequest>(() => new DropRowRangeRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DropRowRangeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Bigtable.Admin.V2.BigtableTableAdminReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DropRowRangeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DropRowRangeRequest(DropRowRangeRequest other) : this() {
      name_ = other.name_;
      switch (other.TargetCase) {
        case TargetOneofCase.RowKeyPrefix:
          RowKeyPrefix = other.RowKeyPrefix;
          break;
        case TargetOneofCase.DeleteAllDataFromTable:
          DeleteAllDataFromTable = other.DeleteAllDataFromTable;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DropRowRangeRequest Clone() {
      return new DropRowRangeRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// The unique name of the table on which to drop a range of rows.
    /// Values are of the form
    /// `projects/&lt;project>/instances/&lt;instance>/tables/&lt;table>`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "row_key_prefix" field.</summary>
    public const int RowKeyPrefixFieldNumber = 2;
    /// <summary>
    /// Delete all rows that start with this row key prefix. Prefix cannot be
    /// zero length.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString RowKeyPrefix {
      get { return targetCase_ == TargetOneofCase.RowKeyPrefix ? (pb::ByteString) target_ : pb::ByteString.Empty; }
      set {
        target_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        targetCase_ = TargetOneofCase.RowKeyPrefix;
      }
    }

    /// <summary>Field number for the "delete_all_data_from_table" field.</summary>
    public const int DeleteAllDataFromTableFieldNumber = 3;
    /// <summary>
    /// Delete all rows in the table. Setting this to false is a no-op.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool DeleteAllDataFromTable {
      get { return targetCase_ == TargetOneofCase.DeleteAllDataFromTable ? (bool) target_ : false; }
      set {
        target_ = value;
        targetCase_ = TargetOneofCase.DeleteAllDataFromTable;
      }
    }

    private object target_;
    /// <summary>Enum of possible cases for the "target" oneof.</summary>
    public enum TargetOneofCase {
      None = 0,
      RowKeyPrefix = 2,
      DeleteAllDataFromTable = 3,
    }
    private TargetOneofCase targetCase_ = TargetOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TargetOneofCase TargetCase {
      get { return targetCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTarget() {
      targetCase_ = TargetOneofCase.None;
      target_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DropRowRangeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DropRowRangeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (RowKeyPrefix != other.RowKeyPrefix) return false;
      if (DeleteAllDataFromTable != other.DeleteAllDataFromTable) return false;
      if (TargetCase != other.TargetCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (targetCase_ == TargetOneofCase.RowKeyPrefix) hash ^= RowKeyPrefix.GetHashCode();
      if (targetCase_ == TargetOneofCase.DeleteAllDataFromTable) hash ^= DeleteAllDataFromTable.GetHashCode();
      hash ^= (int) targetCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (targetCase_ == TargetOneofCase.RowKeyPrefix) {
        output.WriteRawTag(18);
        output.WriteBytes(RowKeyPrefix);
      }
      if (targetCase_ == TargetOneofCase.DeleteAllDataFromTable) {
        output.WriteRawTag(24);
        output.WriteBool(DeleteAllDataFromTable);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (targetCase_ == TargetOneofCase.RowKeyPrefix) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(RowKeyPrefix);
      }
      if (targetCase_ == TargetOneofCase.DeleteAllDataFromTable) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DropRowRangeRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      switch (other.TargetCase) {
        case TargetOneofCase.RowKeyPrefix:
          RowKeyPrefix = other.RowKeyPrefix;
          break;
        case TargetOneofCase.DeleteAllDataFromTable:
          DeleteAllDataFromTable = other.DeleteAllDataFromTable;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            RowKeyPrefix = input.ReadBytes();
            break;
          }
          case 24: {
            DeleteAllDataFromTable = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Request message for
  /// [google.bigtable.admin.v2.BigtableTableAdmin.ListTables][google.bigtable.admin.v2.BigtableTableAdmin.ListTables]
  /// </summary>
  public sealed partial class ListTablesRequest : pb::IMessage<ListTablesRequest> {
    private static readonly pb::MessageParser<ListTablesRequest> _parser = new pb::MessageParser<ListTablesRequest>(() => new ListTablesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListTablesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Bigtable.Admin.V2.BigtableTableAdminReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListTablesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListTablesRequest(ListTablesRequest other) : this() {
      parent_ = other.parent_;
      view_ = other.view_;
      pageSize_ = other.pageSize_;
      pageToken_ = other.pageToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListTablesRequest Clone() {
      return new ListTablesRequest(this);
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 1;
    private string parent_ = "";
    /// <summary>
    /// The unique name of the instance for which tables should be listed.
    /// Values are of the form `projects/&lt;project>/instances/&lt;instance>`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "view" field.</summary>
    public const int ViewFieldNumber = 2;
    private global::Google.Cloud.Bigtable.Admin.V2.Table.Types.View view_ = 0;
    /// <summary>
    /// The view to be applied to the returned tables' fields.
    /// Defaults to `NAME_ONLY` if unspecified; no others are currently supported.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Bigtable.Admin.V2.Table.Types.View View {
      get { return view_; }
      set {
        view_ = value;
      }
    }

    /// <summary>Field number for the "page_size" field.</summary>
    public const int PageSizeFieldNumber = 4;
    private int pageSize_;
    /// <summary>
    /// Maximum number of results per page.
    /// CURRENTLY UNIMPLEMENTED AND IGNORED.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PageSize {
      get { return pageSize_; }
      set {
        pageSize_ = value;
      }
    }

    /// <summary>Field number for the "page_token" field.</summary>
    public const int PageTokenFieldNumber = 3;
    private string pageToken_ = "";
    /// <summary>
    /// The value of `next_page_token` returned by a previous call.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PageToken {
      get { return pageToken_; }
      set {
        pageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListTablesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListTablesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Parent != other.Parent) return false;
      if (View != other.View) return false;
      if (PageSize != other.PageSize) return false;
      if (PageToken != other.PageToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (View != 0) hash ^= View.GetHashCode();
      if (PageSize != 0) hash ^= PageSize.GetHashCode();
      if (PageToken.Length != 0) hash ^= PageToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (View != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) View);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PageToken);
      }
      if (PageSize != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(PageSize);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (View != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) View);
      }
      if (PageSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PageSize);
      }
      if (PageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PageToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListTablesRequest other) {
      if (other == null) {
        return;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      if (other.View != 0) {
        View = other.View;
      }
      if (other.PageSize != 0) {
        PageSize = other.PageSize;
      }
      if (other.PageToken.Length != 0) {
        PageToken = other.PageToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 16: {
            View = (global::Google.Cloud.Bigtable.Admin.V2.Table.Types.View) input.ReadEnum();
            break;
          }
          case 26: {
            PageToken = input.ReadString();
            break;
          }
          case 32: {
            PageSize = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Response message for
  /// [google.bigtable.admin.v2.BigtableTableAdmin.ListTables][google.bigtable.admin.v2.BigtableTableAdmin.ListTables]
  /// </summary>
  public sealed partial class ListTablesResponse : pb::IMessage<ListTablesResponse> {
    private static readonly pb::MessageParser<ListTablesResponse> _parser = new pb::MessageParser<ListTablesResponse>(() => new ListTablesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListTablesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Bigtable.Admin.V2.BigtableTableAdminReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListTablesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListTablesResponse(ListTablesResponse other) : this() {
      tables_ = other.tables_.Clone();
      nextPageToken_ = other.nextPageToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListTablesResponse Clone() {
      return new ListTablesResponse(this);
    }

    /// <summary>Field number for the "tables" field.</summary>
    public const int TablesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.Bigtable.Admin.V2.Table> _repeated_tables_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.Bigtable.Admin.V2.Table.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Bigtable.Admin.V2.Table> tables_ = new pbc::RepeatedField<global::Google.Cloud.Bigtable.Admin.V2.Table>();
    /// <summary>
    /// The tables present in the requested instance.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Bigtable.Admin.V2.Table> Tables {
      get { return tables_; }
    }

    /// <summary>Field number for the "next_page_token" field.</summary>
    public const int NextPageTokenFieldNumber = 2;
    private string nextPageToken_ = "";
    /// <summary>
    /// Set if not all tables could be returned in a single response.
    /// Pass this value to `page_token` in another request to get the next
    /// page of results.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NextPageToken {
      get { return nextPageToken_; }
      set {
        nextPageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListTablesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListTablesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!tables_.Equals(other.tables_)) return false;
      if (NextPageToken != other.NextPageToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= tables_.GetHashCode();
      if (NextPageToken.Length != 0) hash ^= NextPageToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      tables_.WriteTo(output, _repeated_tables_codec);
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextPageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += tables_.CalculateSize(_repeated_tables_codec);
      if (NextPageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextPageToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListTablesResponse other) {
      if (other == null) {
        return;
      }
      tables_.Add(other.tables_);
      if (other.NextPageToken.Length != 0) {
        NextPageToken = other.NextPageToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            tables_.AddEntriesFrom(input, _repeated_tables_codec);
            break;
          }
          case 18: {
            NextPageToken = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Request message for
  /// [google.bigtable.admin.v2.BigtableTableAdmin.GetTable][google.bigtable.admin.v2.BigtableTableAdmin.GetTable]
  /// </summary>
  public sealed partial class GetTableRequest : pb::IMessage<GetTableRequest> {
    private static readonly pb::MessageParser<GetTableRequest> _parser = new pb::MessageParser<GetTableRequest>(() => new GetTableRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetTableRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Bigtable.Admin.V2.BigtableTableAdminReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTableRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTableRequest(GetTableRequest other) : this() {
      name_ = other.name_;
      view_ = other.view_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTableRequest Clone() {
      return new GetTableRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// The unique name of the requested table.
    /// Values are of the form
    /// `projects/&lt;project>/instances/&lt;instance>/tables/&lt;table>`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "view" field.</summary>
    public const int ViewFieldNumber = 2;
    private global::Google.Cloud.Bigtable.Admin.V2.Table.Types.View view_ = 0;
    /// <summary>
    /// The view to be applied to the returned table's fields.
    /// Defaults to `SCHEMA_VIEW` if unspecified.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Bigtable.Admin.V2.Table.Types.View View {
      get { return view_; }
      set {
        view_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetTableRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetTableRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (View != other.View) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (View != 0) hash ^= View.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (View != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) View);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (View != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) View);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetTableRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.View != 0) {
        View = other.View;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            View = (global::Google.Cloud.Bigtable.Admin.V2.Table.Types.View) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Request message for
  /// [google.bigtable.admin.v2.BigtableTableAdmin.DeleteTable][google.bigtable.admin.v2.BigtableTableAdmin.DeleteTable]
  /// </summary>
  public sealed partial class DeleteTableRequest : pb::IMessage<DeleteTableRequest> {
    private static readonly pb::MessageParser<DeleteTableRequest> _parser = new pb::MessageParser<DeleteTableRequest>(() => new DeleteTableRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteTableRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Bigtable.Admin.V2.BigtableTableAdminReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteTableRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteTableRequest(DeleteTableRequest other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteTableRequest Clone() {
      return new DeleteTableRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// The unique name of the table to be deleted.
    /// Values are of the form
    /// `projects/&lt;project>/instances/&lt;instance>/tables/&lt;table>`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteTableRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteTableRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteTableRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Request message for
  /// [google.bigtable.admin.v2.BigtableTableAdmin.ModifyColumnFamilies][google.bigtable.admin.v2.BigtableTableAdmin.ModifyColumnFamilies]
  /// </summary>
  public sealed partial class ModifyColumnFamiliesRequest : pb::IMessage<ModifyColumnFamiliesRequest> {
    private static readonly pb::MessageParser<ModifyColumnFamiliesRequest> _parser = new pb::MessageParser<ModifyColumnFamiliesRequest>(() => new ModifyColumnFamiliesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ModifyColumnFamiliesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Bigtable.Admin.V2.BigtableTableAdminReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModifyColumnFamiliesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModifyColumnFamiliesRequest(ModifyColumnFamiliesRequest other) : this() {
      name_ = other.name_;
      modifications_ = other.modifications_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ModifyColumnFamiliesRequest Clone() {
      return new ModifyColumnFamiliesRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// The unique name of the table whose families should be modified.
    /// Values are of the form
    /// `projects/&lt;project>/instances/&lt;instance>/tables/&lt;table>`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "modifications" field.</summary>
    public const int ModificationsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Google.Cloud.Bigtable.Admin.V2.ModifyColumnFamiliesRequest.Types.Modification> _repeated_modifications_codec
        = pb::FieldCodec.ForMessage(18, global::Google.Cloud.Bigtable.Admin.V2.ModifyColumnFamiliesRequest.Types.Modification.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Bigtable.Admin.V2.ModifyColumnFamiliesRequest.Types.Modification> modifications_ = new pbc::RepeatedField<global::Google.Cloud.Bigtable.Admin.V2.ModifyColumnFamiliesRequest.Types.Modification>();
    /// <summary>
    /// Modifications to be atomically applied to the specified table's families.
    /// Entries are applied in order, meaning that earlier modifications can be
    /// masked by later ones (in the case of repeated updates to the same family,
    /// for example).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Bigtable.Admin.V2.ModifyColumnFamiliesRequest.Types.Modification> Modifications {
      get { return modifications_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ModifyColumnFamiliesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ModifyColumnFamiliesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if(!modifications_.Equals(other.modifications_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      hash ^= modifications_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      modifications_.WriteTo(output, _repeated_modifications_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      size += modifications_.CalculateSize(_repeated_modifications_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ModifyColumnFamiliesRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      modifications_.Add(other.modifications_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            modifications_.AddEntriesFrom(input, _repeated_modifications_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the ModifyColumnFamiliesRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// A create, update, or delete of a particular column family.
      /// </summary>
      public sealed partial class Modification : pb::IMessage<Modification> {
        private static readonly pb::MessageParser<Modification> _parser = new pb::MessageParser<Modification>(() => new Modification());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Modification> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Bigtable.Admin.V2.ModifyColumnFamiliesRequest.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Modification() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Modification(Modification other) : this() {
          id_ = other.id_;
          switch (other.ModCase) {
            case ModOneofCase.Create:
              Create = other.Create.Clone();
              break;
            case ModOneofCase.Update:
              Update = other.Update.Clone();
              break;
            case ModOneofCase.Drop:
              Drop = other.Drop;
              break;
          }

          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Modification Clone() {
          return new Modification(this);
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 1;
        private string id_ = "";
        /// <summary>
        /// The ID of the column family to be modified.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Id {
          get { return id_; }
          set {
            id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "create" field.</summary>
        public const int CreateFieldNumber = 2;
        /// <summary>
        /// Create a new column family with the specified schema, or fail if
        /// one already exists with the given ID.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Cloud.Bigtable.Admin.V2.ColumnFamily Create {
          get { return modCase_ == ModOneofCase.Create ? (global::Google.Cloud.Bigtable.Admin.V2.ColumnFamily) mod_ : null; }
          set {
            mod_ = value;
            modCase_ = value == null ? ModOneofCase.None : ModOneofCase.Create;
          }
        }

        /// <summary>Field number for the "update" field.</summary>
        public const int UpdateFieldNumber = 3;
        /// <summary>
        /// Update an existing column family to the specified schema, or fail
        /// if no column family exists with the given ID.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Cloud.Bigtable.Admin.V2.ColumnFamily Update {
          get { return modCase_ == ModOneofCase.Update ? (global::Google.Cloud.Bigtable.Admin.V2.ColumnFamily) mod_ : null; }
          set {
            mod_ = value;
            modCase_ = value == null ? ModOneofCase.None : ModOneofCase.Update;
          }
        }

        /// <summary>Field number for the "drop" field.</summary>
        public const int DropFieldNumber = 4;
        /// <summary>
        /// Drop (delete) the column family with the given ID, or fail if no such
        /// family exists.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Drop {
          get { return modCase_ == ModOneofCase.Drop ? (bool) mod_ : false; }
          set {
            mod_ = value;
            modCase_ = ModOneofCase.Drop;
          }
        }

        private object mod_;
        /// <summary>Enum of possible cases for the "mod" oneof.</summary>
        public enum ModOneofCase {
          None = 0,
          Create = 2,
          Update = 3,
          Drop = 4,
        }
        private ModOneofCase modCase_ = ModOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ModOneofCase ModCase {
          get { return modCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearMod() {
          modCase_ = ModOneofCase.None;
          mod_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Modification);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Modification other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Id != other.Id) return false;
          if (!object.Equals(Create, other.Create)) return false;
          if (!object.Equals(Update, other.Update)) return false;
          if (Drop != other.Drop) return false;
          if (ModCase != other.ModCase) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Id.Length != 0) hash ^= Id.GetHashCode();
          if (modCase_ == ModOneofCase.Create) hash ^= Create.GetHashCode();
          if (modCase_ == ModOneofCase.Update) hash ^= Update.GetHashCode();
          if (modCase_ == ModOneofCase.Drop) hash ^= Drop.GetHashCode();
          hash ^= (int) modCase_;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Id.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Id);
          }
          if (modCase_ == ModOneofCase.Create) {
            output.WriteRawTag(18);
            output.WriteMessage(Create);
          }
          if (modCase_ == ModOneofCase.Update) {
            output.WriteRawTag(26);
            output.WriteMessage(Update);
          }
          if (modCase_ == ModOneofCase.Drop) {
            output.WriteRawTag(32);
            output.WriteBool(Drop);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Id.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
          }
          if (modCase_ == ModOneofCase.Create) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Create);
          }
          if (modCase_ == ModOneofCase.Update) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Update);
          }
          if (modCase_ == ModOneofCase.Drop) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Modification other) {
          if (other == null) {
            return;
          }
          if (other.Id.Length != 0) {
            Id = other.Id;
          }
          switch (other.ModCase) {
            case ModOneofCase.Create:
              if (Create == null) {
                Create = new global::Google.Cloud.Bigtable.Admin.V2.ColumnFamily();
              }
              Create.MergeFrom(other.Create);
              break;
            case ModOneofCase.Update:
              if (Update == null) {
                Update = new global::Google.Cloud.Bigtable.Admin.V2.ColumnFamily();
              }
              Update.MergeFrom(other.Update);
              break;
            case ModOneofCase.Drop:
              Drop = other.Drop;
              break;
          }

          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Id = input.ReadString();
                break;
              }
              case 18: {
                global::Google.Cloud.Bigtable.Admin.V2.ColumnFamily subBuilder = new global::Google.Cloud.Bigtable.Admin.V2.ColumnFamily();
                if (modCase_ == ModOneofCase.Create) {
                  subBuilder.MergeFrom(Create);
                }
                input.ReadMessage(subBuilder);
                Create = subBuilder;
                break;
              }
              case 26: {
                global::Google.Cloud.Bigtable.Admin.V2.ColumnFamily subBuilder = new global::Google.Cloud.Bigtable.Admin.V2.ColumnFamily();
                if (modCase_ == ModOneofCase.Update) {
                  subBuilder.MergeFrom(Update);
                }
                input.ReadMessage(subBuilder);
                Update = subBuilder;
                break;
              }
              case 32: {
                Drop = input.ReadBool();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  /// <summary>
  /// Request message for
  /// [google.bigtable.admin.v2.BigtableTableAdmin.GenerateConsistencyToken][google.bigtable.admin.v2.BigtableTableAdmin.GenerateConsistencyToken]
  /// </summary>
  public sealed partial class GenerateConsistencyTokenRequest : pb::IMessage<GenerateConsistencyTokenRequest> {
    private static readonly pb::MessageParser<GenerateConsistencyTokenRequest> _parser = new pb::MessageParser<GenerateConsistencyTokenRequest>(() => new GenerateConsistencyTokenRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GenerateConsistencyTokenRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Bigtable.Admin.V2.BigtableTableAdminReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GenerateConsistencyTokenRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GenerateConsistencyTokenRequest(GenerateConsistencyTokenRequest other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GenerateConsistencyTokenRequest Clone() {
      return new GenerateConsistencyTokenRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// The unique name of the Table for which to create a consistency token.
    /// Values are of the form
    /// `projects/&lt;project>/instances/&lt;instance>/tables/&lt;table>`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GenerateConsistencyTokenRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GenerateConsistencyTokenRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GenerateConsistencyTokenRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Response message for
  /// [google.bigtable.admin.v2.BigtableTableAdmin.GenerateConsistencyToken][google.bigtable.admin.v2.BigtableTableAdmin.GenerateConsistencyToken]
  /// </summary>
  public sealed partial class GenerateConsistencyTokenResponse : pb::IMessage<GenerateConsistencyTokenResponse> {
    private static readonly pb::MessageParser<GenerateConsistencyTokenResponse> _parser = new pb::MessageParser<GenerateConsistencyTokenResponse>(() => new GenerateConsistencyTokenResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GenerateConsistencyTokenResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Bigtable.Admin.V2.BigtableTableAdminReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GenerateConsistencyTokenResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GenerateConsistencyTokenResponse(GenerateConsistencyTokenResponse other) : this() {
      consistencyToken_ = other.consistencyToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GenerateConsistencyTokenResponse Clone() {
      return new GenerateConsistencyTokenResponse(this);
    }

    /// <summary>Field number for the "consistency_token" field.</summary>
    public const int ConsistencyTokenFieldNumber = 1;
    private string consistencyToken_ = "";
    /// <summary>
    /// The generated consistency token.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConsistencyToken {
      get { return consistencyToken_; }
      set {
        consistencyToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GenerateConsistencyTokenResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GenerateConsistencyTokenResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ConsistencyToken != other.ConsistencyToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ConsistencyToken.Length != 0) hash ^= ConsistencyToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ConsistencyToken.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ConsistencyToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ConsistencyToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConsistencyToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GenerateConsistencyTokenResponse other) {
      if (other == null) {
        return;
      }
      if (other.ConsistencyToken.Length != 0) {
        ConsistencyToken = other.ConsistencyToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ConsistencyToken = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Request message for
  /// [google.bigtable.admin.v2.BigtableTableAdmin.CheckConsistency][google.bigtable.admin.v2.BigtableTableAdmin.CheckConsistency]
  /// </summary>
  public sealed partial class CheckConsistencyRequest : pb::IMessage<CheckConsistencyRequest> {
    private static readonly pb::MessageParser<CheckConsistencyRequest> _parser = new pb::MessageParser<CheckConsistencyRequest>(() => new CheckConsistencyRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CheckConsistencyRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Bigtable.Admin.V2.BigtableTableAdminReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckConsistencyRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckConsistencyRequest(CheckConsistencyRequest other) : this() {
      name_ = other.name_;
      consistencyToken_ = other.consistencyToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckConsistencyRequest Clone() {
      return new CheckConsistencyRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// The unique name of the Table for which to check replication consistency.
    /// Values are of the form
    /// `projects/&lt;project>/instances/&lt;instance>/tables/&lt;table>`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "consistency_token" field.</summary>
    public const int ConsistencyTokenFieldNumber = 2;
    private string consistencyToken_ = "";
    /// <summary>
    /// The token created using GenerateConsistencyToken for the Table.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConsistencyToken {
      get { return consistencyToken_; }
      set {
        consistencyToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CheckConsistencyRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CheckConsistencyRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (ConsistencyToken != other.ConsistencyToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (ConsistencyToken.Length != 0) hash ^= ConsistencyToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (ConsistencyToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ConsistencyToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (ConsistencyToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConsistencyToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CheckConsistencyRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.ConsistencyToken.Length != 0) {
        ConsistencyToken = other.ConsistencyToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            ConsistencyToken = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Response message for
  /// [google.bigtable.admin.v2.BigtableTableAdmin.CheckConsistency][google.bigtable.admin.v2.BigtableTableAdmin.CheckConsistency]
  /// </summary>
  public sealed partial class CheckConsistencyResponse : pb::IMessage<CheckConsistencyResponse> {
    private static readonly pb::MessageParser<CheckConsistencyResponse> _parser = new pb::MessageParser<CheckConsistencyResponse>(() => new CheckConsistencyResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CheckConsistencyResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Bigtable.Admin.V2.BigtableTableAdminReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckConsistencyResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckConsistencyResponse(CheckConsistencyResponse other) : this() {
      consistent_ = other.consistent_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CheckConsistencyResponse Clone() {
      return new CheckConsistencyResponse(this);
    }

    /// <summary>Field number for the "consistent" field.</summary>
    public const int ConsistentFieldNumber = 1;
    private bool consistent_;
    /// <summary>
    /// True only if the token is consistent. A token is consistent if replication
    /// has caught up with the restrictions specified in the request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Consistent {
      get { return consistent_; }
      set {
        consistent_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CheckConsistencyResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CheckConsistencyResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Consistent != other.Consistent) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Consistent != false) hash ^= Consistent.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Consistent != false) {
        output.WriteRawTag(8);
        output.WriteBool(Consistent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Consistent != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CheckConsistencyResponse other) {
      if (other == null) {
        return;
      }
      if (other.Consistent != false) {
        Consistent = other.Consistent;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Consistent = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Request message for
  /// [google.bigtable.admin.v2.BigtableTableAdmin.SnapshotTable][google.bigtable.admin.v2.BigtableTableAdmin.SnapshotTable]
  ///
  /// Note: This is a private alpha release of Cloud Bigtable snapshots. This
  /// feature is not currently available to most Cloud Bigtable customers. This
  /// feature might be changed in backward-incompatible ways and is not recommended
  /// for production use. It is not subject to any SLA or deprecation policy.
  /// </summary>
  public sealed partial class SnapshotTableRequest : pb::IMessage<SnapshotTableRequest> {
    private static readonly pb::MessageParser<SnapshotTableRequest> _parser = new pb::MessageParser<SnapshotTableRequest>(() => new SnapshotTableRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SnapshotTableRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Bigtable.Admin.V2.BigtableTableAdminReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SnapshotTableRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SnapshotTableRequest(SnapshotTableRequest other) : this() {
      name_ = other.name_;
      cluster_ = other.cluster_;
      snapshotId_ = other.snapshotId_;
      ttl_ = other.ttl_ != null ? other.ttl_.Clone() : null;
      description_ = other.description_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SnapshotTableRequest Clone() {
      return new SnapshotTableRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// The unique name of the table to have the snapshot taken.
    /// Values are of the form
    /// `projects/&lt;project>/instances/&lt;instance>/tables/&lt;table>`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cluster" field.</summary>
    public const int ClusterFieldNumber = 2;
    private string cluster_ = "";
    /// <summary>
    /// The name of the cluster where the snapshot will be created in.
    /// Values are of the form
    /// `projects/&lt;project>/instances/&lt;instance>/clusters/&lt;cluster>`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Cluster {
      get { return cluster_; }
      set {
        cluster_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "snapshot_id" field.</summary>
    public const int SnapshotIdFieldNumber = 3;
    private string snapshotId_ = "";
    /// <summary>
    /// The ID by which the new snapshot should be referred to within the parent
    /// cluster, e.g., `mysnapshot` of the form: `[_a-zA-Z0-9][-_.a-zA-Z0-9]*`
    /// rather than
    /// `projects/&lt;project>/instances/&lt;instance>/clusters/&lt;cluster>/snapshots/mysnapshot`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SnapshotId {
      get { return snapshotId_; }
      set {
        snapshotId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ttl" field.</summary>
    public const int TtlFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Duration ttl_;
    /// <summary>
    /// The amount of time that the new snapshot can stay active after it is
    /// created. Once 'ttl' expires, the snapshot will get deleted. The maximum
    /// amount of time a snapshot can stay active is 7 days. If 'ttl' is not
    /// specified, the default value of 24 hours will be used.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Duration Ttl {
      get { return ttl_; }
      set {
        ttl_ = value;
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 5;
    private string description_ = "";
    /// <summary>
    /// Description of the snapshot.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SnapshotTableRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SnapshotTableRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Cluster != other.Cluster) return false;
      if (SnapshotId != other.SnapshotId) return false;
      if (!object.Equals(Ttl, other.Ttl)) return false;
      if (Description != other.Description) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Cluster.Length != 0) hash ^= Cluster.GetHashCode();
      if (SnapshotId.Length != 0) hash ^= SnapshotId.GetHashCode();
      if (ttl_ != null) hash ^= Ttl.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Cluster.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Cluster);
      }
      if (SnapshotId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(SnapshotId);
      }
      if (ttl_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Ttl);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Description);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Cluster.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Cluster);
      }
      if (SnapshotId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SnapshotId);
      }
      if (ttl_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ttl);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SnapshotTableRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Cluster.Length != 0) {
        Cluster = other.Cluster;
      }
      if (other.SnapshotId.Length != 0) {
        SnapshotId = other.SnapshotId;
      }
      if (other.ttl_ != null) {
        if (ttl_ == null) {
          Ttl = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        Ttl.MergeFrom(other.Ttl);
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Cluster = input.ReadString();
            break;
          }
          case 26: {
            SnapshotId = input.ReadString();
            break;
          }
          case 34: {
            if (ttl_ == null) {
              Ttl = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(Ttl);
            break;
          }
          case 42: {
            Description = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Request message for
  /// [google.bigtable.admin.v2.BigtableTableAdmin.GetSnapshot][google.bigtable.admin.v2.BigtableTableAdmin.GetSnapshot]
  ///
  /// Note: This is a private alpha release of Cloud Bigtable snapshots. This
  /// feature is not currently available to most Cloud Bigtable customers. This
  /// feature might be changed in backward-incompatible ways and is not recommended
  /// for production use. It is not subject to any SLA or deprecation policy.
  /// </summary>
  public sealed partial class GetSnapshotRequest : pb::IMessage<GetSnapshotRequest> {
    private static readonly pb::MessageParser<GetSnapshotRequest> _parser = new pb::MessageParser<GetSnapshotRequest>(() => new GetSnapshotRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetSnapshotRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Bigtable.Admin.V2.BigtableTableAdminReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSnapshotRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSnapshotRequest(GetSnapshotRequest other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSnapshotRequest Clone() {
      return new GetSnapshotRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// The unique name of the requested snapshot.
    /// Values are of the form
    /// `projects/&lt;project>/instances/&lt;instance>/clusters/&lt;cluster>/snapshots/&lt;snapshot>`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetSnapshotRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetSnapshotRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetSnapshotRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Request message for
  /// [google.bigtable.admin.v2.BigtableTableAdmin.ListSnapshots][google.bigtable.admin.v2.BigtableTableAdmin.ListSnapshots]
  ///
  /// Note: This is a private alpha release of Cloud Bigtable snapshots. This
  /// feature is not currently available to most Cloud Bigtable customers. This
  /// feature might be changed in backward-incompatible ways and is not recommended
  /// for production use. It is not subject to any SLA or deprecation policy.
  /// </summary>
  public sealed partial class ListSnapshotsRequest : pb::IMessage<ListSnapshotsRequest> {
    private static readonly pb::MessageParser<ListSnapshotsRequest> _parser = new pb::MessageParser<ListSnapshotsRequest>(() => new ListSnapshotsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListSnapshotsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Bigtable.Admin.V2.BigtableTableAdminReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListSnapshotsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListSnapshotsRequest(ListSnapshotsRequest other) : this() {
      parent_ = other.parent_;
      pageSize_ = other.pageSize_;
      pageToken_ = other.pageToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListSnapshotsRequest Clone() {
      return new ListSnapshotsRequest(this);
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 1;
    private string parent_ = "";
    /// <summary>
    /// The unique name of the cluster for which snapshots should be listed.
    /// Values are of the form
    /// `projects/&lt;project>/instances/&lt;instance>/clusters/&lt;cluster>`.
    /// Use `&lt;cluster> = '-'` to list snapshots for all clusters in an instance,
    /// e.g., `projects/&lt;project>/instances/&lt;instance>/clusters/-`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "page_size" field.</summary>
    public const int PageSizeFieldNumber = 2;
    private int pageSize_;
    /// <summary>
    /// The maximum number of snapshots to return per page.
    /// CURRENTLY UNIMPLEMENTED AND IGNORED.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PageSize {
      get { return pageSize_; }
      set {
        pageSize_ = value;
      }
    }

    /// <summary>Field number for the "page_token" field.</summary>
    public const int PageTokenFieldNumber = 3;
    private string pageToken_ = "";
    /// <summary>
    /// The value of `next_page_token` returned by a previous call.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PageToken {
      get { return pageToken_; }
      set {
        pageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListSnapshotsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListSnapshotsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Parent != other.Parent) return false;
      if (PageSize != other.PageSize) return false;
      if (PageToken != other.PageToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (PageSize != 0) hash ^= PageSize.GetHashCode();
      if (PageToken.Length != 0) hash ^= PageToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (PageSize != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PageSize);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (PageSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PageSize);
      }
      if (PageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PageToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListSnapshotsRequest other) {
      if (other == null) {
        return;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      if (other.PageSize != 0) {
        PageSize = other.PageSize;
      }
      if (other.PageToken.Length != 0) {
        PageToken = other.PageToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 16: {
            PageSize = input.ReadInt32();
            break;
          }
          case 26: {
            PageToken = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Response message for
  /// [google.bigtable.admin.v2.BigtableTableAdmin.ListSnapshots][google.bigtable.admin.v2.BigtableTableAdmin.ListSnapshots]
  ///
  /// Note: This is a private alpha release of Cloud Bigtable snapshots. This
  /// feature is not currently available to most Cloud Bigtable customers. This
  /// feature might be changed in backward-incompatible ways and is not recommended
  /// for production use. It is not subject to any SLA or deprecation policy.
  /// </summary>
  public sealed partial class ListSnapshotsResponse : pb::IMessage<ListSnapshotsResponse> {
    private static readonly pb::MessageParser<ListSnapshotsResponse> _parser = new pb::MessageParser<ListSnapshotsResponse>(() => new ListSnapshotsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListSnapshotsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Bigtable.Admin.V2.BigtableTableAdminReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListSnapshotsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListSnapshotsResponse(ListSnapshotsResponse other) : this() {
      snapshots_ = other.snapshots_.Clone();
      nextPageToken_ = other.nextPageToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListSnapshotsResponse Clone() {
      return new ListSnapshotsResponse(this);
    }

    /// <summary>Field number for the "snapshots" field.</summary>
    public const int SnapshotsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.Bigtable.Admin.V2.Snapshot> _repeated_snapshots_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.Bigtable.Admin.V2.Snapshot.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Bigtable.Admin.V2.Snapshot> snapshots_ = new pbc::RepeatedField<global::Google.Cloud.Bigtable.Admin.V2.Snapshot>();
    /// <summary>
    /// The snapshots present in the requested cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Bigtable.Admin.V2.Snapshot> Snapshots {
      get { return snapshots_; }
    }

    /// <summary>Field number for the "next_page_token" field.</summary>
    public const int NextPageTokenFieldNumber = 2;
    private string nextPageToken_ = "";
    /// <summary>
    /// Set if not all snapshots could be returned in a single response.
    /// Pass this value to `page_token` in another request to get the next
    /// page of results.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NextPageToken {
      get { return nextPageToken_; }
      set {
        nextPageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListSnapshotsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListSnapshotsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!snapshots_.Equals(other.snapshots_)) return false;
      if (NextPageToken != other.NextPageToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= snapshots_.GetHashCode();
      if (NextPageToken.Length != 0) hash ^= NextPageToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      snapshots_.WriteTo(output, _repeated_snapshots_codec);
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextPageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += snapshots_.CalculateSize(_repeated_snapshots_codec);
      if (NextPageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextPageToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListSnapshotsResponse other) {
      if (other == null) {
        return;
      }
      snapshots_.Add(other.snapshots_);
      if (other.NextPageToken.Length != 0) {
        NextPageToken = other.NextPageToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            snapshots_.AddEntriesFrom(input, _repeated_snapshots_codec);
            break;
          }
          case 18: {
            NextPageToken = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Request message for
  /// [google.bigtable.admin.v2.BigtableTableAdmin.DeleteSnapshot][google.bigtable.admin.v2.BigtableTableAdmin.DeleteSnapshot]
  ///
  /// Note: This is a private alpha release of Cloud Bigtable snapshots. This
  /// feature is not currently available to most Cloud Bigtable customers. This
  /// feature might be changed in backward-incompatible ways and is not recommended
  /// for production use. It is not subject to any SLA or deprecation policy.
  /// </summary>
  public sealed partial class DeleteSnapshotRequest : pb::IMessage<DeleteSnapshotRequest> {
    private static readonly pb::MessageParser<DeleteSnapshotRequest> _parser = new pb::MessageParser<DeleteSnapshotRequest>(() => new DeleteSnapshotRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteSnapshotRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Bigtable.Admin.V2.BigtableTableAdminReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteSnapshotRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteSnapshotRequest(DeleteSnapshotRequest other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteSnapshotRequest Clone() {
      return new DeleteSnapshotRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// The unique name of the snapshot to be deleted.
    /// Values are of the form
    /// `projects/&lt;project>/instances/&lt;instance>/clusters/&lt;cluster>/snapshots/&lt;snapshot>`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteSnapshotRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteSnapshotRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteSnapshotRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// The metadata for the Operation returned by SnapshotTable.
  ///
  /// Note: This is a private alpha release of Cloud Bigtable snapshots. This
  /// feature is not currently available to most Cloud Bigtable customers. This
  /// feature might be changed in backward-incompatible ways and is not recommended
  /// for production use. It is not subject to any SLA or deprecation policy.
  /// </summary>
  public sealed partial class SnapshotTableMetadata : pb::IMessage<SnapshotTableMetadata> {
    private static readonly pb::MessageParser<SnapshotTableMetadata> _parser = new pb::MessageParser<SnapshotTableMetadata>(() => new SnapshotTableMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SnapshotTableMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Bigtable.Admin.V2.BigtableTableAdminReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SnapshotTableMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SnapshotTableMetadata(SnapshotTableMetadata other) : this() {
      originalRequest_ = other.originalRequest_ != null ? other.originalRequest_.Clone() : null;
      requestTime_ = other.requestTime_ != null ? other.requestTime_.Clone() : null;
      finishTime_ = other.finishTime_ != null ? other.finishTime_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SnapshotTableMetadata Clone() {
      return new SnapshotTableMetadata(this);
    }

    /// <summary>Field number for the "original_request" field.</summary>
    public const int OriginalRequestFieldNumber = 1;
    private global::Google.Cloud.Bigtable.Admin.V2.SnapshotTableRequest originalRequest_;
    /// <summary>
    /// The request that prompted the initiation of this SnapshotTable operation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Bigtable.Admin.V2.SnapshotTableRequest OriginalRequest {
      get { return originalRequest_; }
      set {
        originalRequest_ = value;
      }
    }

    /// <summary>Field number for the "request_time" field.</summary>
    public const int RequestTimeFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp requestTime_;
    /// <summary>
    /// The time at which the original request was received.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp RequestTime {
      get { return requestTime_; }
      set {
        requestTime_ = value;
      }
    }

    /// <summary>Field number for the "finish_time" field.</summary>
    public const int FinishTimeFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp finishTime_;
    /// <summary>
    /// The time at which the operation failed or was completed successfully.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp FinishTime {
      get { return finishTime_; }
      set {
        finishTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SnapshotTableMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SnapshotTableMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(OriginalRequest, other.OriginalRequest)) return false;
      if (!object.Equals(RequestTime, other.RequestTime)) return false;
      if (!object.Equals(FinishTime, other.FinishTime)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (originalRequest_ != null) hash ^= OriginalRequest.GetHashCode();
      if (requestTime_ != null) hash ^= RequestTime.GetHashCode();
      if (finishTime_ != null) hash ^= FinishTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (originalRequest_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(OriginalRequest);
      }
      if (requestTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(RequestTime);
      }
      if (finishTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(FinishTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (originalRequest_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OriginalRequest);
      }
      if (requestTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RequestTime);
      }
      if (finishTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FinishTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SnapshotTableMetadata other) {
      if (other == null) {
        return;
      }
      if (other.originalRequest_ != null) {
        if (originalRequest_ == null) {
          OriginalRequest = new global::Google.Cloud.Bigtable.Admin.V2.SnapshotTableRequest();
        }
        OriginalRequest.MergeFrom(other.OriginalRequest);
      }
      if (other.requestTime_ != null) {
        if (requestTime_ == null) {
          RequestTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        RequestTime.MergeFrom(other.RequestTime);
      }
      if (other.finishTime_ != null) {
        if (finishTime_ == null) {
          FinishTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        FinishTime.MergeFrom(other.FinishTime);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (originalRequest_ == null) {
              OriginalRequest = new global::Google.Cloud.Bigtable.Admin.V2.SnapshotTableRequest();
            }
            input.ReadMessage(OriginalRequest);
            break;
          }
          case 18: {
            if (requestTime_ == null) {
              RequestTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(RequestTime);
            break;
          }
          case 26: {
            if (finishTime_ == null) {
              FinishTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(FinishTime);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// The metadata for the Operation returned by CreateTableFromSnapshot.
  ///
  /// Note: This is a private alpha release of Cloud Bigtable snapshots. This
  /// feature is not currently available to most Cloud Bigtable customers. This
  /// feature might be changed in backward-incompatible ways and is not recommended
  /// for production use. It is not subject to any SLA or deprecation policy.
  /// </summary>
  public sealed partial class CreateTableFromSnapshotMetadata : pb::IMessage<CreateTableFromSnapshotMetadata> {
    private static readonly pb::MessageParser<CreateTableFromSnapshotMetadata> _parser = new pb::MessageParser<CreateTableFromSnapshotMetadata>(() => new CreateTableFromSnapshotMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateTableFromSnapshotMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Bigtable.Admin.V2.BigtableTableAdminReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateTableFromSnapshotMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateTableFromSnapshotMetadata(CreateTableFromSnapshotMetadata other) : this() {
      originalRequest_ = other.originalRequest_ != null ? other.originalRequest_.Clone() : null;
      requestTime_ = other.requestTime_ != null ? other.requestTime_.Clone() : null;
      finishTime_ = other.finishTime_ != null ? other.finishTime_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateTableFromSnapshotMetadata Clone() {
      return new CreateTableFromSnapshotMetadata(this);
    }

    /// <summary>Field number for the "original_request" field.</summary>
    public const int OriginalRequestFieldNumber = 1;
    private global::Google.Cloud.Bigtable.Admin.V2.CreateTableFromSnapshotRequest originalRequest_;
    /// <summary>
    /// The request that prompted the initiation of this CreateTableFromSnapshot
    /// operation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Bigtable.Admin.V2.CreateTableFromSnapshotRequest OriginalRequest {
      get { return originalRequest_; }
      set {
        originalRequest_ = value;
      }
    }

    /// <summary>Field number for the "request_time" field.</summary>
    public const int RequestTimeFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp requestTime_;
    /// <summary>
    /// The time at which the original request was received.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp RequestTime {
      get { return requestTime_; }
      set {
        requestTime_ = value;
      }
    }

    /// <summary>Field number for the "finish_time" field.</summary>
    public const int FinishTimeFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp finishTime_;
    /// <summary>
    /// The time at which the operation failed or was completed successfully.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp FinishTime {
      get { return finishTime_; }
      set {
        finishTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateTableFromSnapshotMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateTableFromSnapshotMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(OriginalRequest, other.OriginalRequest)) return false;
      if (!object.Equals(RequestTime, other.RequestTime)) return false;
      if (!object.Equals(FinishTime, other.FinishTime)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (originalRequest_ != null) hash ^= OriginalRequest.GetHashCode();
      if (requestTime_ != null) hash ^= RequestTime.GetHashCode();
      if (finishTime_ != null) hash ^= FinishTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (originalRequest_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(OriginalRequest);
      }
      if (requestTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(RequestTime);
      }
      if (finishTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(FinishTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (originalRequest_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OriginalRequest);
      }
      if (requestTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RequestTime);
      }
      if (finishTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FinishTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateTableFromSnapshotMetadata other) {
      if (other == null) {
        return;
      }
      if (other.originalRequest_ != null) {
        if (originalRequest_ == null) {
          OriginalRequest = new global::Google.Cloud.Bigtable.Admin.V2.CreateTableFromSnapshotRequest();
        }
        OriginalRequest.MergeFrom(other.OriginalRequest);
      }
      if (other.requestTime_ != null) {
        if (requestTime_ == null) {
          RequestTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        RequestTime.MergeFrom(other.RequestTime);
      }
      if (other.finishTime_ != null) {
        if (finishTime_ == null) {
          FinishTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        FinishTime.MergeFrom(other.FinishTime);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (originalRequest_ == null) {
              OriginalRequest = new global::Google.Cloud.Bigtable.Admin.V2.CreateTableFromSnapshotRequest();
            }
            input.ReadMessage(OriginalRequest);
            break;
          }
          case 18: {
            if (requestTime_ == null) {
              RequestTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(RequestTime);
            break;
          }
          case 26: {
            if (finishTime_ == null) {
              FinishTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(FinishTime);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
