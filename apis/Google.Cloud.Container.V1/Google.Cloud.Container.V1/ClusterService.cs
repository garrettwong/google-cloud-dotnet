// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/container/v1/cluster_service.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.Container.V1 {

  /// <summary>Holder for reflection information generated from google/container/v1/cluster_service.proto</summary>
  public static partial class ClusterServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for google/container/v1/cluster_service.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ClusterServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cilnb29nbGUvY29udGFpbmVyL3YxL2NsdXN0ZXJfc2VydmljZS5wcm90bxIT",
            "Z29vZ2xlLmNvbnRhaW5lci52MRocZ29vZ2xlL2FwaS9hbm5vdGF0aW9ucy5w",
            "cm90bxoXZ29vZ2xlL2FwaS9jbGllbnQucHJvdG8aH2dvb2dsZS9hcGkvZmll",
            "bGRfYmVoYXZpb3IucHJvdG8aG2dvb2dsZS9wcm90b2J1Zi9lbXB0eS5wcm90",
            "bxofZ29vZ2xlL3Byb3RvYnVmL3RpbWVzdGFtcC5wcm90byL/BAoKTm9kZUNv",
            "bmZpZxIUCgxtYWNoaW5lX3R5cGUYASABKAkSFAoMZGlza19zaXplX2diGAIg",
            "ASgFEhQKDG9hdXRoX3Njb3BlcxgDIAMoCRIXCg9zZXJ2aWNlX2FjY291bnQY",
            "CSABKAkSPwoIbWV0YWRhdGEYBCADKAsyLS5nb29nbGUuY29udGFpbmVyLnYx",
            "Lk5vZGVDb25maWcuTWV0YWRhdGFFbnRyeRISCgppbWFnZV90eXBlGAUgASgJ",
            "EjsKBmxhYmVscxgGIAMoCzIrLmdvb2dsZS5jb250YWluZXIudjEuTm9kZUNv",
            "bmZpZy5MYWJlbHNFbnRyeRIXCg9sb2NhbF9zc2RfY291bnQYByABKAUSDAoE",
            "dGFncxgIIAMoCRITCgtwcmVlbXB0aWJsZRgKIAEoCBI8CgxhY2NlbGVyYXRv",
            "cnMYCyADKAsyJi5nb29nbGUuY29udGFpbmVyLnYxLkFjY2VsZXJhdG9yQ29u",
            "ZmlnEhEKCWRpc2tfdHlwZRgMIAEoCRIYChBtaW5fY3B1X3BsYXRmb3JtGA0g",
            "ASgJEi4KBnRhaW50cxgPIAMoCzIeLmdvb2dsZS5jb250YWluZXIudjEuTm9k",
            "ZVRhaW50Ek0KGHNoaWVsZGVkX2luc3RhbmNlX2NvbmZpZxgUIAEoCzIrLmdv",
            "b2dsZS5jb250YWluZXIudjEuU2hpZWxkZWRJbnN0YW5jZUNvbmZpZxovCg1N",
            "ZXRhZGF0YUVudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAEa",
            "LQoLTGFiZWxzRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4",
            "ASJZChZTaGllbGRlZEluc3RhbmNlQ29uZmlnEhoKEmVuYWJsZV9zZWN1cmVf",
            "Ym9vdBgBIAEoCBIjChtlbmFibGVfaW50ZWdyaXR5X21vbml0b3JpbmcYAiAB",
            "KAgiuQEKCU5vZGVUYWludBILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAkS",
            "NQoGZWZmZWN0GAMgASgOMiUuZ29vZ2xlLmNvbnRhaW5lci52MS5Ob2RlVGFp",
            "bnQuRWZmZWN0IlkKBkVmZmVjdBIWChJFRkZFQ1RfVU5TUEVDSUZJRUQQABIP",
            "CgtOT19TQ0hFRFVMRRABEhYKElBSRUZFUl9OT19TQ0hFRFVMRRACEg4KCk5P",
            "X0VYRUNVVEUQAyLRAQoKTWFzdGVyQXV0aBIQCgh1c2VybmFtZRgBIAEoCRIQ",
            "CghwYXNzd29yZBgCIAEoCRJPChljbGllbnRfY2VydGlmaWNhdGVfY29uZmln",
            "GAMgASgLMiwuZ29vZ2xlLmNvbnRhaW5lci52MS5DbGllbnRDZXJ0aWZpY2F0",
            "ZUNvbmZpZxIeChZjbHVzdGVyX2NhX2NlcnRpZmljYXRlGGQgASgJEhoKEmNs",
            "aWVudF9jZXJ0aWZpY2F0ZRhlIAEoCRISCgpjbGllbnRfa2V5GGYgASgJIjsK",
            "F0NsaWVudENlcnRpZmljYXRlQ29uZmlnEiAKGGlzc3VlX2NsaWVudF9jZXJ0",
            "aWZpY2F0ZRgBIAEoCCL6AgoMQWRkb25zQ29uZmlnEkMKE2h0dHBfbG9hZF9i",
            "YWxhbmNpbmcYASABKAsyJi5nb29nbGUuY29udGFpbmVyLnYxLkh0dHBMb2Fk",
            "QmFsYW5jaW5nElEKGmhvcml6b250YWxfcG9kX2F1dG9zY2FsaW5nGAIgASgL",
            "Mi0uZ29vZ2xlLmNvbnRhaW5lci52MS5Ib3Jpem9udGFsUG9kQXV0b3NjYWxp",
            "bmcSSgoUa3ViZXJuZXRlc19kYXNoYm9hcmQYAyABKAsyKC5nb29nbGUuY29u",
            "dGFpbmVyLnYxLkt1YmVybmV0ZXNEYXNoYm9hcmRCAhgBEkcKFW5ldHdvcmtf",
            "cG9saWN5X2NvbmZpZxgEIAEoCzIoLmdvb2dsZS5jb250YWluZXIudjEuTmV0",
            "d29ya1BvbGljeUNvbmZpZxI9ChBjbG91ZF9ydW5fY29uZmlnGAcgASgLMiMu",
            "Z29vZ2xlLmNvbnRhaW5lci52MS5DbG91ZFJ1bkNvbmZpZyIlChFIdHRwTG9h",
            "ZEJhbGFuY2luZxIQCghkaXNhYmxlZBgBIAEoCCIsChhIb3Jpem9udGFsUG9k",
            "QXV0b3NjYWxpbmcSEAoIZGlzYWJsZWQYASABKAgiJwoTS3ViZXJuZXRlc0Rh",
            "c2hib2FyZBIQCghkaXNhYmxlZBgBIAEoCCInChNOZXR3b3JrUG9saWN5Q29u",
            "ZmlnEhAKCGRpc2FibGVkGAEgASgIIqgBChRQcml2YXRlQ2x1c3RlckNvbmZp",
            "ZxIcChRlbmFibGVfcHJpdmF0ZV9ub2RlcxgBIAEoCBIfChdlbmFibGVfcHJp",
            "dmF0ZV9lbmRwb2ludBgCIAEoCBIeChZtYXN0ZXJfaXB2NF9jaWRyX2Jsb2Nr",
            "GAMgASgJEhgKEHByaXZhdGVfZW5kcG9pbnQYBCABKAkSFwoPcHVibGljX2Vu",
            "ZHBvaW50GAUgASgJIkQKGUF1dGhlbnRpY2F0b3JHcm91cHNDb25maWcSDwoH",
            "ZW5hYmxlZBgBIAEoCBIWCg5zZWN1cml0eV9ncm91cBgCIAEoCSIiCg5DbG91",
            "ZFJ1bkNvbmZpZxIQCghkaXNhYmxlZBgBIAEoCCK8AQoeTWFzdGVyQXV0aG9y",
            "aXplZE5ldHdvcmtzQ29uZmlnEg8KB2VuYWJsZWQYASABKAgSUgoLY2lkcl9i",
            "bG9ja3MYAiADKAsyPS5nb29nbGUuY29udGFpbmVyLnYxLk1hc3RlckF1dGhv",
            "cml6ZWROZXR3b3Jrc0NvbmZpZy5DaWRyQmxvY2saNQoJQ2lkckJsb2NrEhQK",
            "DGRpc3BsYXlfbmFtZRgBIAEoCRISCgpjaWRyX2Jsb2NrGAIgASgJIh0KCkxl",
            "Z2FjeUFiYWMSDwoHZW5hYmxlZBgBIAEoCCKRAQoNTmV0d29ya1BvbGljeRI9",
            "Cghwcm92aWRlchgBIAEoDjIrLmdvb2dsZS5jb250YWluZXIudjEuTmV0d29y",
            "a1BvbGljeS5Qcm92aWRlchIPCgdlbmFibGVkGAIgASgIIjAKCFByb3ZpZGVy",
            "EhgKFFBST1ZJREVSX1VOU1BFQ0lGSUVEEAASCgoGQ0FMSUNPEAEiJgoTQmlu",
            "YXJ5QXV0aG9yaXphdGlvbhIPCgdlbmFibGVkGAEgASgIIoYDChJJUEFsbG9j",
            "YXRpb25Qb2xpY3kSFgoOdXNlX2lwX2FsaWFzZXMYASABKAgSGQoRY3JlYXRl",
            "X3N1Ym5ldHdvcmsYAiABKAgSFwoPc3VibmV0d29ya19uYW1lGAMgASgJEh0K",
            "EWNsdXN0ZXJfaXB2NF9jaWRyGAQgASgJQgIYARIaCg5ub2RlX2lwdjRfY2lk",
            "chgFIAEoCUICGAESHgoSc2VydmljZXNfaXB2NF9jaWRyGAYgASgJQgIYARIk",
            "ChxjbHVzdGVyX3NlY29uZGFyeV9yYW5nZV9uYW1lGAcgASgJEiUKHXNlcnZp",
            "Y2VzX3NlY29uZGFyeV9yYW5nZV9uYW1lGAggASgJEh8KF2NsdXN0ZXJfaXB2",
            "NF9jaWRyX2Jsb2NrGAkgASgJEhwKFG5vZGVfaXB2NF9jaWRyX2Jsb2NrGAog",
            "ASgJEiAKGHNlcnZpY2VzX2lwdjRfY2lkcl9ibG9jaxgLIAEoCRIbChN0cHVf",
            "aXB2NF9jaWRyX2Jsb2NrGA0gASgJIucRCgdDbHVzdGVyEgwKBG5hbWUYASAB",
            "KAkSEwoLZGVzY3JpcHRpb24YAiABKAkSHgoSaW5pdGlhbF9ub2RlX2NvdW50",
            "GAMgASgFQgIYARI4Cgtub2RlX2NvbmZpZxgEIAEoCzIfLmdvb2dsZS5jb250",
            "YWluZXIudjEuTm9kZUNvbmZpZ0ICGAESNAoLbWFzdGVyX2F1dGgYBSABKAsy",
            "Hy5nb29nbGUuY29udGFpbmVyLnYxLk1hc3RlckF1dGgSFwoPbG9nZ2luZ19z",
            "ZXJ2aWNlGAYgASgJEhoKEm1vbml0b3Jpbmdfc2VydmljZRgHIAEoCRIPCgdu",
            "ZXR3b3JrGAggASgJEhkKEWNsdXN0ZXJfaXB2NF9jaWRyGAkgASgJEjgKDWFk",
            "ZG9uc19jb25maWcYCiABKAsyIS5nb29nbGUuY29udGFpbmVyLnYxLkFkZG9u",
            "c0NvbmZpZxISCgpzdWJuZXR3b3JrGAsgASgJEjEKCm5vZGVfcG9vbHMYDCAD",
            "KAsyHS5nb29nbGUuY29udGFpbmVyLnYxLk5vZGVQb29sEhEKCWxvY2F0aW9u",
            "cxgNIAMoCRIfChdlbmFibGVfa3ViZXJuZXRlc19hbHBoYRgOIAEoCBJJCg9y",
            "ZXNvdXJjZV9sYWJlbHMYDyADKAsyMC5nb29nbGUuY29udGFpbmVyLnYxLkNs",
            "dXN0ZXIuUmVzb3VyY2VMYWJlbHNFbnRyeRIZChFsYWJlbF9maW5nZXJwcmlu",
            "dBgQIAEoCRI0CgtsZWdhY3lfYWJhYxgSIAEoCzIfLmdvb2dsZS5jb250YWlu",
            "ZXIudjEuTGVnYWN5QWJhYxI6Cg5uZXR3b3JrX3BvbGljeRgTIAEoCzIiLmdv",
            "b2dsZS5jb250YWluZXIudjEuTmV0d29ya1BvbGljeRJFChRpcF9hbGxvY2F0",
            "aW9uX3BvbGljeRgUIAEoCzInLmdvb2dsZS5jb250YWluZXIudjEuSVBBbGxv",
            "Y2F0aW9uUG9saWN5El4KIW1hc3Rlcl9hdXRob3JpemVkX25ldHdvcmtzX2Nv",
            "bmZpZxgWIAEoCzIzLmdvb2dsZS5jb250YWluZXIudjEuTWFzdGVyQXV0aG9y",
            "aXplZE5ldHdvcmtzQ29uZmlnEkIKEm1haW50ZW5hbmNlX3BvbGljeRgXIAEo",
            "CzImLmdvb2dsZS5jb250YWluZXIudjEuTWFpbnRlbmFuY2VQb2xpY3kSRgoU",
            "YmluYXJ5X2F1dGhvcml6YXRpb24YGCABKAsyKC5nb29nbGUuY29udGFpbmVy",
            "LnYxLkJpbmFyeUF1dGhvcml6YXRpb24SPAoLYXV0b3NjYWxpbmcYGiABKAsy",
            "Jy5nb29nbGUuY29udGFpbmVyLnYxLkNsdXN0ZXJBdXRvc2NhbGluZxI6Cg5u",
            "ZXR3b3JrX2NvbmZpZxgbIAEoCzIiLmdvb2dsZS5jb250YWluZXIudjEuTmV0",
            "d29ya0NvbmZpZxJLChtkZWZhdWx0X21heF9wb2RzX2NvbnN0cmFpbnQYHiAB",
            "KAsyJi5nb29nbGUuY29udGFpbmVyLnYxLk1heFBvZHNDb25zdHJhaW50ElQK",
            "HHJlc291cmNlX3VzYWdlX2V4cG9ydF9jb25maWcYISABKAsyLi5nb29nbGUu",
            "Y29udGFpbmVyLnYxLlJlc291cmNlVXNhZ2VFeHBvcnRDb25maWcSUwobYXV0",
            "aGVudGljYXRvcl9ncm91cHNfY29uZmlnGCIgASgLMi4uZ29vZ2xlLmNvbnRh",
            "aW5lci52MS5BdXRoZW50aWNhdG9yR3JvdXBzQ29uZmlnEkkKFnByaXZhdGVf",
            "Y2x1c3Rlcl9jb25maWcYJSABKAsyKS5nb29nbGUuY29udGFpbmVyLnYxLlBy",
            "aXZhdGVDbHVzdGVyQ29uZmlnEkQKE2RhdGFiYXNlX2VuY3J5cHRpb24YJiAB",
            "KAsyJy5nb29nbGUuY29udGFpbmVyLnYxLkRhdGFiYXNlRW5jcnlwdGlvbhJN",
            "Chh2ZXJ0aWNhbF9wb2RfYXV0b3NjYWxpbmcYJyABKAsyKy5nb29nbGUuY29u",
            "dGFpbmVyLnYxLlZlcnRpY2FsUG9kQXV0b3NjYWxpbmcSEQoJc2VsZl9saW5r",
            "GGQgASgJEhAKBHpvbmUYZSABKAlCAhgBEhAKCGVuZHBvaW50GGYgASgJEh8K",
            "F2luaXRpYWxfY2x1c3Rlcl92ZXJzaW9uGGcgASgJEh4KFmN1cnJlbnRfbWFz",
            "dGVyX3ZlcnNpb24YaCABKAkSIAoUY3VycmVudF9ub2RlX3ZlcnNpb24YaSAB",
            "KAlCAhgBEhMKC2NyZWF0ZV90aW1lGGogASgJEjMKBnN0YXR1cxhrIAEoDjIj",
            "Lmdvb2dsZS5jb250YWluZXIudjEuQ2x1c3Rlci5TdGF0dXMSFgoOc3RhdHVz",
            "X21lc3NhZ2UYbCABKAkSGwoTbm9kZV9pcHY0X2NpZHJfc2l6ZRhtIAEoBRIa",
            "ChJzZXJ2aWNlc19pcHY0X2NpZHIYbiABKAkSHwoTaW5zdGFuY2VfZ3JvdXBf",
            "dXJscxhvIAMoCUICGAESHgoSY3VycmVudF9ub2RlX2NvdW50GHAgASgFQgIY",
            "ARITCgtleHBpcmVfdGltZRhxIAEoCRIQCghsb2NhdGlvbhhyIAEoCRISCgpl",
            "bmFibGVfdHB1GHMgASgIEhsKE3RwdV9pcHY0X2NpZHJfYmxvY2sYdCABKAkS",
            "OAoKY29uZGl0aW9ucxh2IAMoCzIkLmdvb2dsZS5jb250YWluZXIudjEuU3Rh",
            "dHVzQ29uZGl0aW9uGjUKE1Jlc291cmNlTGFiZWxzRW50cnkSCwoDa2V5GAEg",
            "ASgJEg0KBXZhbHVlGAIgASgJOgI4ASJ3CgZTdGF0dXMSFgoSU1RBVFVTX1VO",
            "U1BFQ0lGSUVEEAASEAoMUFJPVklTSU9OSU5HEAESCwoHUlVOTklORxACEg8K",
            "C1JFQ09OQ0lMSU5HEAMSDAoIU1RPUFBJTkcQBBIJCgVFUlJPUhAFEgwKCERF",
            "R1JBREVEEAYi4QcKDUNsdXN0ZXJVcGRhdGUSHAoUZGVzaXJlZF9ub2RlX3Zl",
            "cnNpb24YBCABKAkSIgoaZGVzaXJlZF9tb25pdG9yaW5nX3NlcnZpY2UYBSAB",
            "KAkSQAoVZGVzaXJlZF9hZGRvbnNfY29uZmlnGAYgASgLMiEuZ29vZ2xlLmNv",
            "bnRhaW5lci52MS5BZGRvbnNDb25maWcSHAoUZGVzaXJlZF9ub2RlX3Bvb2xf",
            "aWQYByABKAkSGgoSZGVzaXJlZF9pbWFnZV90eXBlGAggASgJEkwKG2Rlc2ly",
            "ZWRfZGF0YWJhc2VfZW5jcnlwdGlvbhguIAEoCzInLmdvb2dsZS5jb250YWlu",
            "ZXIudjEuRGF0YWJhc2VFbmNyeXB0aW9uEk8KHWRlc2lyZWRfbm9kZV9wb29s",
            "X2F1dG9zY2FsaW5nGAkgASgLMiguZ29vZ2xlLmNvbnRhaW5lci52MS5Ob2Rl",
            "UG9vbEF1dG9zY2FsaW5nEhkKEWRlc2lyZWRfbG9jYXRpb25zGAogAygJEmYK",
            "KWRlc2lyZWRfbWFzdGVyX2F1dGhvcml6ZWRfbmV0d29ya3NfY29uZmlnGAwg",
            "ASgLMjMuZ29vZ2xlLmNvbnRhaW5lci52MS5NYXN0ZXJBdXRob3JpemVkTmV0",
            "d29ya3NDb25maWcSTAobZGVzaXJlZF9jbHVzdGVyX2F1dG9zY2FsaW5nGA8g",
            "ASgLMicuZ29vZ2xlLmNvbnRhaW5lci52MS5DbHVzdGVyQXV0b3NjYWxpbmcS",
            "TgocZGVzaXJlZF9iaW5hcnlfYXV0aG9yaXphdGlvbhgQIAEoCzIoLmdvb2ds",
            "ZS5jb250YWluZXIudjEuQmluYXJ5QXV0aG9yaXphdGlvbhIfChdkZXNpcmVk",
            "X2xvZ2dpbmdfc2VydmljZRgTIAEoCRJcCiRkZXNpcmVkX3Jlc291cmNlX3Vz",
            "YWdlX2V4cG9ydF9jb25maWcYFSABKAsyLi5nb29nbGUuY29udGFpbmVyLnYx",
            "LlJlc291cmNlVXNhZ2VFeHBvcnRDb25maWcSVQogZGVzaXJlZF92ZXJ0aWNh",
            "bF9wb2RfYXV0b3NjYWxpbmcYFiABKAsyKy5nb29nbGUuY29udGFpbmVyLnYx",
            "LlZlcnRpY2FsUG9kQXV0b3NjYWxpbmcSXAokZGVzaXJlZF9pbnRyYV9ub2Rl",
            "X3Zpc2liaWxpdHlfY29uZmlnGBogASgLMi4uZ29vZ2xlLmNvbnRhaW5lci52",
            "MS5JbnRyYU5vZGVWaXNpYmlsaXR5Q29uZmlnEh4KFmRlc2lyZWRfbWFzdGVy",
            "X3ZlcnNpb24YZCABKAkigAcKCU9wZXJhdGlvbhIMCgRuYW1lGAEgASgJEhAK",
            "BHpvbmUYAiABKAlCAhgBEjsKDm9wZXJhdGlvbl90eXBlGAMgASgOMiMuZ29v",
            "Z2xlLmNvbnRhaW5lci52MS5PcGVyYXRpb24uVHlwZRI1CgZzdGF0dXMYBCAB",
            "KA4yJS5nb29nbGUuY29udGFpbmVyLnYxLk9wZXJhdGlvbi5TdGF0dXMSDgoG",
            "ZGV0YWlsGAggASgJEhYKDnN0YXR1c19tZXNzYWdlGAUgASgJEhEKCXNlbGZf",
            "bGluaxgGIAEoCRITCgt0YXJnZXRfbGluaxgHIAEoCRIQCghsb2NhdGlvbhgJ",
            "IAEoCRISCgpzdGFydF90aW1lGAogASgJEhAKCGVuZF90aW1lGAsgASgJEkAK",
            "EmNsdXN0ZXJfY29uZGl0aW9ucxgNIAMoCzIkLmdvb2dsZS5jb250YWluZXIu",
            "djEuU3RhdHVzQ29uZGl0aW9uEkEKE25vZGVwb29sX2NvbmRpdGlvbnMYDiAD",
            "KAsyJC5nb29nbGUuY29udGFpbmVyLnYxLlN0YXR1c0NvbmRpdGlvbiJSCgZT",
            "dGF0dXMSFgoSU1RBVFVTX1VOU1BFQ0lGSUVEEAASCwoHUEVORElORxABEgsK",
            "B1JVTk5JTkcQAhIICgRET05FEAMSDAoIQUJPUlRJTkcQBCL9AgoEVHlwZRIU",
            "ChBUWVBFX1VOU1BFQ0lGSUVEEAASEgoOQ1JFQVRFX0NMVVNURVIQARISCg5E",
            "RUxFVEVfQ0xVU1RFUhACEhIKDlVQR1JBREVfTUFTVEVSEAMSEQoNVVBHUkFE",
            "RV9OT0RFUxAEEhIKDlJFUEFJUl9DTFVTVEVSEAUSEgoOVVBEQVRFX0NMVVNU",
            "RVIQBhIUChBDUkVBVEVfTk9ERV9QT09MEAcSFAoQREVMRVRFX05PREVfUE9P",
            "TBAIEhwKGFNFVF9OT0RFX1BPT0xfTUFOQUdFTUVOVBAJEhUKEUFVVE9fUkVQ",
            "QUlSX05PREVTEAoSFgoSQVVUT19VUEdSQURFX05PREVTEAsSDgoKU0VUX0xB",
            "QkVMUxAMEhMKD1NFVF9NQVNURVJfQVVUSBANEhYKElNFVF9OT0RFX1BPT0xf",
            "U0laRRAOEhYKElNFVF9ORVRXT1JLX1BPTElDWRAPEhoKFlNFVF9NQUlOVEVO",
            "QU5DRV9QT0xJQ1kQECKKAQoUQ3JlYXRlQ2x1c3RlclJlcXVlc3QSGQoKcHJv",
            "amVjdF9pZBgBIAEoCUIFGAHgQQISEwoEem9uZRgCIAEoCUIFGAHgQQISMgoH",
            "Y2x1c3RlchgDIAEoCzIcLmdvb2dsZS5jb250YWluZXIudjEuQ2x1c3RlckID",
            "4EECEg4KBnBhcmVudBgFIAEoCSJsChFHZXRDbHVzdGVyUmVxdWVzdBIZCgpw",
            "cm9qZWN0X2lkGAEgASgJQgUYAeBBAhITCgR6b25lGAIgASgJQgUYAeBBAhIZ",
            "CgpjbHVzdGVyX2lkGAMgASgJQgUYAeBBAhIMCgRuYW1lGAUgASgJIqgBChRV",
            "cGRhdGVDbHVzdGVyUmVxdWVzdBIZCgpwcm9qZWN0X2lkGAEgASgJQgUYAeBB",
            "AhITCgR6b25lGAIgASgJQgUYAeBBAhIZCgpjbHVzdGVyX2lkGAMgASgJQgUY",
            "AeBBAhI3CgZ1cGRhdGUYBCABKAsyIi5nb29nbGUuY29udGFpbmVyLnYxLkNs",
            "dXN0ZXJVcGRhdGVCA+BBAhIMCgRuYW1lGAUgASgJIsEBChVVcGRhdGVOb2Rl",
            "UG9vbFJlcXVlc3QSGQoKcHJvamVjdF9pZBgBIAEoCUIFGAHgQQISEwoEem9u",
            "ZRgCIAEoCUIFGAHgQQISGQoKY2x1c3Rlcl9pZBgDIAEoCUIFGAHgQQISGwoM",
            "bm9kZV9wb29sX2lkGAQgASgJQgUYAeBBAhIZCgxub2RlX3ZlcnNpb24YBSAB",
            "KAlCA+BBAhIXCgppbWFnZV90eXBlGAYgASgJQgPgQQISDAoEbmFtZRgIIAEo",
            "CSLZAQodU2V0Tm9kZVBvb2xBdXRvc2NhbGluZ1JlcXVlc3QSGQoKcHJvamVj",
            "dF9pZBgBIAEoCUIFGAHgQQISEwoEem9uZRgCIAEoCUIFGAHgQQISGQoKY2x1",
            "c3Rlcl9pZBgDIAEoCUIFGAHgQQISGwoMbm9kZV9wb29sX2lkGAQgASgJQgUY",
            "AeBBAhJCCgthdXRvc2NhbGluZxgFIAEoCzIoLmdvb2dsZS5jb250YWluZXIu",
            "djEuTm9kZVBvb2xBdXRvc2NhbGluZ0ID4EECEgwKBG5hbWUYBiABKAkijwEK",
            "GFNldExvZ2dpbmdTZXJ2aWNlUmVxdWVzdBIZCgpwcm9qZWN0X2lkGAEgASgJ",
            "QgUYAeBBAhIRCgR6b25lGAIgASgJQgPgQQISGQoKY2x1c3Rlcl9pZBgDIAEo",
            "CUIFGAHgQQISHAoPbG9nZ2luZ19zZXJ2aWNlGAQgASgJQgPgQQISDAoEbmFt",
            "ZRgFIAEoCSKXAQobU2V0TW9uaXRvcmluZ1NlcnZpY2VSZXF1ZXN0EhkKCnBy",
            "b2plY3RfaWQYASABKAlCBRgB4EECEhMKBHpvbmUYAiABKAlCBRgB4EECEhkK",
            "CmNsdXN0ZXJfaWQYAyABKAlCBRgB4EECEh8KEm1vbml0b3Jpbmdfc2Vydmlj",
            "ZRgEIAEoCUID4EECEgwKBG5hbWUYBiABKAkisAEKFlNldEFkZG9uc0NvbmZp",
            "Z1JlcXVlc3QSGQoKcHJvamVjdF9pZBgBIAEoCUIFGAHgQQISEwoEem9uZRgC",
            "IAEoCUIFGAHgQQISGQoKY2x1c3Rlcl9pZBgDIAEoCUIFGAHgQQISPQoNYWRk",
            "b25zX2NvbmZpZxgEIAEoCzIhLmdvb2dsZS5jb250YWluZXIudjEuQWRkb25z",
            "Q29uZmlnQgPgQQISDAoEbmFtZRgGIAEoCSKGAQoTU2V0TG9jYXRpb25zUmVx",
            "dWVzdBIZCgpwcm9qZWN0X2lkGAEgASgJQgUYAeBBAhITCgR6b25lGAIgASgJ",
            "QgUYAeBBAhIZCgpjbHVzdGVyX2lkGAMgASgJQgUYAeBBAhIWCglsb2NhdGlv",
            "bnMYBCADKAlCA+BBAhIMCgRuYW1lGAYgASgJIosBChNVcGRhdGVNYXN0ZXJS",
            "ZXF1ZXN0EhkKCnByb2plY3RfaWQYASABKAlCBRgB4EECEhMKBHpvbmUYAiAB",
            "KAlCBRgB4EECEhkKCmNsdXN0ZXJfaWQYAyABKAlCBRgB4EECEhsKDm1hc3Rl",
            "cl92ZXJzaW9uGAQgASgJQgPgQQISDAoEbmFtZRgHIAEoCSK+AgoUU2V0TWFz",
            "dGVyQXV0aFJlcXVlc3QSGQoKcHJvamVjdF9pZBgBIAEoCUIFGAHgQQISEwoE",
            "em9uZRgCIAEoCUIFGAHgQQISGQoKY2x1c3Rlcl9pZBgDIAEoCUIFGAHgQQIS",
            "RQoGYWN0aW9uGAQgASgOMjAuZ29vZ2xlLmNvbnRhaW5lci52MS5TZXRNYXN0",
            "ZXJBdXRoUmVxdWVzdC5BY3Rpb25CA+BBAhI0CgZ1cGRhdGUYBSABKAsyHy5n",
            "b29nbGUuY29udGFpbmVyLnYxLk1hc3RlckF1dGhCA+BBAhIMCgRuYW1lGAcg",
            "ASgJIlAKBkFjdGlvbhILCgdVTktOT1dOEAASEAoMU0VUX1BBU1NXT1JEEAES",
            "FQoRR0VORVJBVEVfUEFTU1dPUkQQAhIQCgxTRVRfVVNFUk5BTUUQAyJvChRE",
            "ZWxldGVDbHVzdGVyUmVxdWVzdBIZCgpwcm9qZWN0X2lkGAEgASgJQgUYAeBB",
            "AhITCgR6b25lGAIgASgJQgUYAeBBAhIZCgpjbHVzdGVyX2lkGAMgASgJQgUY",
            "AeBBAhIMCgRuYW1lGAQgASgJIlUKE0xpc3RDbHVzdGVyc1JlcXVlc3QSGQoK",
            "cHJvamVjdF9pZBgBIAEoCUIFGAHgQQISEwoEem9uZRgCIAEoCUIFGAHgQQIS",
            "DgoGcGFyZW50GAQgASgJIl0KFExpc3RDbHVzdGVyc1Jlc3BvbnNlEi4KCGNs",
            "dXN0ZXJzGAEgAygLMhwuZ29vZ2xlLmNvbnRhaW5lci52MS5DbHVzdGVyEhUK",
            "DW1pc3Npbmdfem9uZXMYAiADKAkicAoTR2V0T3BlcmF0aW9uUmVxdWVzdBIZ",
            "Cgpwcm9qZWN0X2lkGAEgASgJQgUYAeBBAhITCgR6b25lGAIgASgJQgUYAeBB",
            "AhIbCgxvcGVyYXRpb25faWQYAyABKAlCBRgB4EECEgwKBG5hbWUYBSABKAki",
            "VwoVTGlzdE9wZXJhdGlvbnNSZXF1ZXN0EhkKCnByb2plY3RfaWQYASABKAlC",
            "BRgB4EECEhMKBHpvbmUYAiABKAlCBRgB4EECEg4KBnBhcmVudBgEIAEoCSJz",
            "ChZDYW5jZWxPcGVyYXRpb25SZXF1ZXN0EhkKCnByb2plY3RfaWQYASABKAlC",
            "BRgB4EECEhMKBHpvbmUYAiABKAlCBRgB4EECEhsKDG9wZXJhdGlvbl9pZBgD",
            "IAEoCUIFGAHgQQISDAoEbmFtZRgEIAEoCSJjChZMaXN0T3BlcmF0aW9uc1Jl",
            "c3BvbnNlEjIKCm9wZXJhdGlvbnMYASADKAsyHi5nb29nbGUuY29udGFpbmVy",
            "LnYxLk9wZXJhdGlvbhIVCg1taXNzaW5nX3pvbmVzGAIgAygJIlYKFkdldFNl",
            "cnZlckNvbmZpZ1JlcXVlc3QSGQoKcHJvamVjdF9pZBgBIAEoCUIFGAHgQQIS",
            "EwoEem9uZRgCIAEoCUIFGAHgQQISDAoEbmFtZRgEIAEoCSKiAQoMU2VydmVy",
            "Q29uZmlnEh8KF2RlZmF1bHRfY2x1c3Rlcl92ZXJzaW9uGAEgASgJEhsKE3Zh",
            "bGlkX25vZGVfdmVyc2lvbnMYAyADKAkSGgoSZGVmYXVsdF9pbWFnZV90eXBl",
            "GAQgASgJEhkKEXZhbGlkX2ltYWdlX3R5cGVzGAUgAygJEh0KFXZhbGlkX21h",
            "c3Rlcl92ZXJzaW9ucxgGIAMoCSKpAQoVQ3JlYXRlTm9kZVBvb2xSZXF1ZXN0",
            "EhkKCnByb2plY3RfaWQYASABKAlCBRgB4EECEhMKBHpvbmUYAiABKAlCBRgB",
            "4EECEhkKCmNsdXN0ZXJfaWQYAyABKAlCBRgB4EECEjUKCW5vZGVfcG9vbBgE",
            "IAEoCzIdLmdvb2dsZS5jb250YWluZXIudjEuTm9kZVBvb2xCA+BBAhIOCgZw",
            "YXJlbnQYBiABKAkijQEKFURlbGV0ZU5vZGVQb29sUmVxdWVzdBIZCgpwcm9q",
            "ZWN0X2lkGAEgASgJQgUYAeBBAhITCgR6b25lGAIgASgJQgUYAeBBAhIZCgpj",
            "bHVzdGVyX2lkGAMgASgJQgUYAeBBAhIbCgxub2RlX3Bvb2xfaWQYBCABKAlC",
            "BRgB4EECEgwKBG5hbWUYBiABKAkicQoUTGlzdE5vZGVQb29sc1JlcXVlc3QS",
            "GQoKcHJvamVjdF9pZBgBIAEoCUIFGAHgQQISEwoEem9uZRgCIAEoCUIFGAHg",
            "QQISGQoKY2x1c3Rlcl9pZBgDIAEoCUIFGAHgQQISDgoGcGFyZW50GAUgASgJ",
            "IooBChJHZXROb2RlUG9vbFJlcXVlc3QSGQoKcHJvamVjdF9pZBgBIAEoCUIF",
            "GAHgQQISEwoEem9uZRgCIAEoCUIFGAHgQQISGQoKY2x1c3Rlcl9pZBgDIAEo",
            "CUIFGAHgQQISGwoMbm9kZV9wb29sX2lkGAQgASgJQgUYAeBBAhIMCgRuYW1l",
            "GAYgASgJIosFCghOb2RlUG9vbBIMCgRuYW1lGAEgASgJEi8KBmNvbmZpZxgC",
            "IAEoCzIfLmdvb2dsZS5jb250YWluZXIudjEuTm9kZUNvbmZpZxIaChJpbml0",
            "aWFsX25vZGVfY291bnQYAyABKAUSEQoJc2VsZl9saW5rGGQgASgJEg8KB3Zl",
            "cnNpb24YZSABKAkSGwoTaW5zdGFuY2VfZ3JvdXBfdXJscxhmIAMoCRI0CgZz",
            "dGF0dXMYZyABKA4yJC5nb29nbGUuY29udGFpbmVyLnYxLk5vZGVQb29sLlN0",
            "YXR1cxIWCg5zdGF0dXNfbWVzc2FnZRhoIAEoCRI9CgthdXRvc2NhbGluZxgE",
            "IAEoCzIoLmdvb2dsZS5jb250YWluZXIudjEuTm9kZVBvb2xBdXRvc2NhbGlu",
            "ZxI3CgptYW5hZ2VtZW50GAUgASgLMiMuZ29vZ2xlLmNvbnRhaW5lci52MS5O",
            "b2RlTWFuYWdlbWVudBJDChNtYXhfcG9kc19jb25zdHJhaW50GAYgASgLMiYu",
            "Z29vZ2xlLmNvbnRhaW5lci52MS5NYXhQb2RzQ29uc3RyYWludBI4Cgpjb25k",
            "aXRpb25zGGkgAygLMiQuZ29vZ2xlLmNvbnRhaW5lci52MS5TdGF0dXNDb25k",
            "aXRpb24SGgoScG9kX2lwdjRfY2lkcl9zaXplGAcgASgFIoEBCgZTdGF0dXMS",
            "FgoSU1RBVFVTX1VOU1BFQ0lGSUVEEAASEAoMUFJPVklTSU9OSU5HEAESCwoH",
            "UlVOTklORxACEhYKElJVTk5JTkdfV0lUSF9FUlJPUhADEg8KC1JFQ09OQ0lM",
            "SU5HEAQSDAoIU1RPUFBJTkcQBRIJCgVFUlJPUhAGIn0KDk5vZGVNYW5hZ2Vt",
            "ZW50EhQKDGF1dG9fdXBncmFkZRgBIAEoCBITCgthdXRvX3JlcGFpchgCIAEo",
            "CBJACg91cGdyYWRlX29wdGlvbnMYCiABKAsyJy5nb29nbGUuY29udGFpbmVy",
            "LnYxLkF1dG9VcGdyYWRlT3B0aW9ucyJKChJBdXRvVXBncmFkZU9wdGlvbnMS",
            "HwoXYXV0b191cGdyYWRlX3N0YXJ0X3RpbWUYASABKAkSEwoLZGVzY3JpcHRp",
            "b24YAiABKAkiZQoRTWFpbnRlbmFuY2VQb2xpY3kSNgoGd2luZG93GAEgASgL",
            "MiYuZ29vZ2xlLmNvbnRhaW5lci52MS5NYWludGVuYW5jZVdpbmRvdxIYChBy",
            "ZXNvdXJjZV92ZXJzaW9uGAMgASgJIvYCChFNYWludGVuYW5jZVdpbmRvdxJP",
            "ChhkYWlseV9tYWludGVuYW5jZV93aW5kb3cYAiABKAsyKy5nb29nbGUuY29u",
            "dGFpbmVyLnYxLkRhaWx5TWFpbnRlbmFuY2VXaW5kb3dIABJEChByZWN1cnJp",
            "bmdfd2luZG93GAMgASgLMiguZ29vZ2xlLmNvbnRhaW5lci52MS5SZWN1cnJp",
            "bmdUaW1lV2luZG93SAASYQoWbWFpbnRlbmFuY2VfZXhjbHVzaW9ucxgEIAMo",
            "CzJBLmdvb2dsZS5jb250YWluZXIudjEuTWFpbnRlbmFuY2VXaW5kb3cuTWFp",
            "bnRlbmFuY2VFeGNsdXNpb25zRW50cnkaXQoaTWFpbnRlbmFuY2VFeGNsdXNp",
            "b25zRW50cnkSCwoDa2V5GAEgASgJEi4KBXZhbHVlGAIgASgLMh8uZ29vZ2xl",
            "LmNvbnRhaW5lci52MS5UaW1lV2luZG93OgI4AUIICgZwb2xpY3kiagoKVGlt",
            "ZVdpbmRvdxIuCgpzdGFydF90aW1lGAEgASgLMhouZ29vZ2xlLnByb3RvYnVm",
            "LlRpbWVzdGFtcBIsCghlbmRfdGltZRgCIAEoCzIaLmdvb2dsZS5wcm90b2J1",
            "Zi5UaW1lc3RhbXAiWgoTUmVjdXJyaW5nVGltZVdpbmRvdxIvCgZ3aW5kb3cY",
            "ASABKAsyHy5nb29nbGUuY29udGFpbmVyLnYxLlRpbWVXaW5kb3cSEgoKcmVj",
            "dXJyZW5jZRgCIAEoCSI+ChZEYWlseU1haW50ZW5hbmNlV2luZG93EhIKCnN0",
            "YXJ0X3RpbWUYAiABKAkSEAoIZHVyYXRpb24YAyABKAki0gEKHFNldE5vZGVQ",
            "b29sTWFuYWdlbWVudFJlcXVlc3QSGQoKcHJvamVjdF9pZBgBIAEoCUIFGAHg",
            "QQISEwoEem9uZRgCIAEoCUIFGAHgQQISGQoKY2x1c3Rlcl9pZBgDIAEoCUIF",
            "GAHgQQISGwoMbm9kZV9wb29sX2lkGAQgASgJQgUYAeBBAhI8CgptYW5hZ2Vt",
            "ZW50GAUgASgLMiMuZ29vZ2xlLmNvbnRhaW5lci52MS5Ob2RlTWFuYWdlbWVu",
            "dEID4EECEgwKBG5hbWUYByABKAkipwEKFlNldE5vZGVQb29sU2l6ZVJlcXVl",
            "c3QSGQoKcHJvamVjdF9pZBgBIAEoCUIFGAHgQQISEwoEem9uZRgCIAEoCUIF",
            "GAHgQQISGQoKY2x1c3Rlcl9pZBgDIAEoCUIFGAHgQQISGwoMbm9kZV9wb29s",
            "X2lkGAQgASgJQgUYAeBBAhIXCgpub2RlX2NvdW50GAUgASgFQgPgQQISDAoE",
            "bmFtZRgHIAEoCSKWAQoeUm9sbGJhY2tOb2RlUG9vbFVwZ3JhZGVSZXF1ZXN0",
            "EhkKCnByb2plY3RfaWQYASABKAlCBRgB4EECEhMKBHpvbmUYAiABKAlCBRgB",
            "4EECEhkKCmNsdXN0ZXJfaWQYAyABKAlCBRgB4EECEhsKDG5vZGVfcG9vbF9p",
            "ZBgEIAEoCUIFGAHgQQISDAoEbmFtZRgGIAEoCSJKChVMaXN0Tm9kZVBvb2xz",
            "UmVzcG9uc2USMQoKbm9kZV9wb29scxgBIAMoCzIdLmdvb2dsZS5jb250YWlu",
            "ZXIudjEuTm9kZVBvb2wi/wEKEkNsdXN0ZXJBdXRvc2NhbGluZxIkChxlbmFi",
            "bGVfbm9kZV9hdXRvcHJvdmlzaW9uaW5nGAEgASgIEjsKD3Jlc291cmNlX2xp",
            "bWl0cxgCIAMoCzIiLmdvb2dsZS5jb250YWluZXIudjEuUmVzb3VyY2VMaW1p",
            "dBJiCiNhdXRvcHJvdmlzaW9uaW5nX25vZGVfcG9vbF9kZWZhdWx0cxgEIAEo",
            "CzI1Lmdvb2dsZS5jb250YWluZXIudjEuQXV0b3Byb3Zpc2lvbmluZ05vZGVQ",
            "b29sRGVmYXVsdHMSIgoaYXV0b3Byb3Zpc2lvbmluZ19sb2NhdGlvbnMYBSAD",
            "KAkiUQogQXV0b3Byb3Zpc2lvbmluZ05vZGVQb29sRGVmYXVsdHMSFAoMb2F1",
            "dGhfc2NvcGVzGAEgAygJEhcKD3NlcnZpY2VfYWNjb3VudBgCIAEoCSJICg1S",
            "ZXNvdXJjZUxpbWl0EhUKDXJlc291cmNlX3R5cGUYASABKAkSDwoHbWluaW11",
            "bRgCIAEoAxIPCgdtYXhpbXVtGAMgASgDIm8KE05vZGVQb29sQXV0b3NjYWxp",
            "bmcSDwoHZW5hYmxlZBgBIAEoCBIWCg5taW5fbm9kZV9jb3VudBgCIAEoBRIW",
            "Cg5tYXhfbm9kZV9jb3VudBgDIAEoBRIXCg9hdXRvcHJvdmlzaW9uZWQYBCAB",
            "KAgimwIKEFNldExhYmVsc1JlcXVlc3QSGQoKcHJvamVjdF9pZBgBIAEoCUIF",
            "GAHgQQISEwoEem9uZRgCIAEoCUIFGAHgQQISGQoKY2x1c3Rlcl9pZBgDIAEo",
            "CUIFGAHgQQISVwoPcmVzb3VyY2VfbGFiZWxzGAQgAygLMjkuZ29vZ2xlLmNv",
            "bnRhaW5lci52MS5TZXRMYWJlbHNSZXF1ZXN0LlJlc291cmNlTGFiZWxzRW50",
            "cnlCA+BBAhIeChFsYWJlbF9maW5nZXJwcmludBgFIAEoCUID4EECEgwKBG5h",
            "bWUYByABKAkaNQoTUmVzb3VyY2VMYWJlbHNFbnRyeRILCgNrZXkYASABKAkS",
            "DQoFdmFsdWUYAiABKAk6AjgBIoUBChRTZXRMZWdhY3lBYmFjUmVxdWVzdBIZ",
            "Cgpwcm9qZWN0X2lkGAEgASgJQgUYAeBBAhITCgR6b25lGAIgASgJQgUYAeBB",
            "AhIZCgpjbHVzdGVyX2lkGAMgASgJQgUYAeBBAhIUCgdlbmFibGVkGAQgASgI",
            "QgPgQQISDAoEbmFtZRgGIAEoCSKNAQoWU3RhcnRJUFJvdGF0aW9uUmVxdWVz",
            "dBIZCgpwcm9qZWN0X2lkGAEgASgJQgUYAeBBAhITCgR6b25lGAIgASgJQgUY",
            "AeBBAhIZCgpjbHVzdGVyX2lkGAMgASgJQgUYAeBBAhIMCgRuYW1lGAYgASgJ",
            "EhoKEnJvdGF0ZV9jcmVkZW50aWFscxgHIAEoCCJ0ChlDb21wbGV0ZUlQUm90",
            "YXRpb25SZXF1ZXN0EhkKCnByb2plY3RfaWQYASABKAlCBRgB4EECEhMKBHpv",
            "bmUYAiABKAlCBRgB4EECEhkKCmNsdXN0ZXJfaWQYAyABKAlCBRgB4EECEgwK",
            "BG5hbWUYByABKAkiSAoRQWNjZWxlcmF0b3JDb25maWcSGQoRYWNjZWxlcmF0",
            "b3JfY291bnQYASABKAMSGAoQYWNjZWxlcmF0b3JfdHlwZRgCIAEoCSKzAQoX",
            "U2V0TmV0d29ya1BvbGljeVJlcXVlc3QSGQoKcHJvamVjdF9pZBgBIAEoCUIF",
            "GAHgQQISEwoEem9uZRgCIAEoCUIFGAHgQQISGQoKY2x1c3Rlcl9pZBgDIAEo",
            "CUIFGAHgQQISPwoObmV0d29ya19wb2xpY3kYBCABKAsyIi5nb29nbGUuY29u",
            "dGFpbmVyLnYxLk5ldHdvcmtQb2xpY3lCA+BBAhIMCgRuYW1lGAYgASgJIrkB",
            "ChtTZXRNYWludGVuYW5jZVBvbGljeVJlcXVlc3QSFwoKcHJvamVjdF9pZBgB",
            "IAEoCUID4EECEhEKBHpvbmUYAiABKAlCA+BBAhIXCgpjbHVzdGVyX2lkGAMg",
            "ASgJQgPgQQISRwoSbWFpbnRlbmFuY2VfcG9saWN5GAQgASgLMiYuZ29vZ2xl",
            "LmNvbnRhaW5lci52MS5NYWludGVuYW5jZVBvbGljeUID4EECEgwKBG5hbWUY",
            "BSABKAki6gEKD1N0YXR1c0NvbmRpdGlvbhI3CgRjb2RlGAEgASgOMikuZ29v",
            "Z2xlLmNvbnRhaW5lci52MS5TdGF0dXNDb25kaXRpb24uQ29kZRIPCgdtZXNz",
            "YWdlGAIgASgJIowBCgRDb2RlEgsKB1VOS05PV04QABIQCgxHQ0VfU1RPQ0tP",
            "VVQQARIfChtHS0VfU0VSVklDRV9BQ0NPVU5UX0RFTEVURUQQAhIWChJHQ0Vf",
            "UVVPVEFfRVhDRUVERUQQAxITCg9TRVRfQllfT1BFUkFUT1IQBBIXChNDTE9V",
            "RF9LTVNfS0VZX0VSUk9SEAciWgoNTmV0d29ya0NvbmZpZxIPCgduZXR3b3Jr",
            "GAEgASgJEhIKCnN1Ym5ldHdvcmsYAiABKAkSJAocZW5hYmxlX2ludHJhX25v",
            "ZGVfdmlzaWJpbGl0eRgFIAEoCCIsChlJbnRyYU5vZGVWaXNpYmlsaXR5Q29u",
            "ZmlnEg8KB2VuYWJsZWQYASABKAgiLgoRTWF4UG9kc0NvbnN0cmFpbnQSGQoR",
            "bWF4X3BvZHNfcGVyX25vZGUYASABKAMimAEKEkRhdGFiYXNlRW5jcnlwdGlv",
            "bhI8CgVzdGF0ZRgCIAEoDjItLmdvb2dsZS5jb250YWluZXIudjEuRGF0YWJh",
            "c2VFbmNyeXB0aW9uLlN0YXRlEhAKCGtleV9uYW1lGAEgASgJIjIKBVN0YXRl",
            "EgsKB1VOS05PV04QABINCglFTkNSWVBURUQQARINCglERUNSWVBURUQQAiJl",
            "ChxMaXN0VXNhYmxlU3VibmV0d29ya3NSZXF1ZXN0Eg4KBnBhcmVudBgBIAEo",
            "CRIOCgZmaWx0ZXIYAiABKAkSEQoJcGFnZV9zaXplGAMgASgFEhIKCnBhZ2Vf",
            "dG9rZW4YBCABKAkidAodTGlzdFVzYWJsZVN1Ym5ldHdvcmtzUmVzcG9uc2US",
            "OgoLc3VibmV0d29ya3MYASADKAsyJS5nb29nbGUuY29udGFpbmVyLnYxLlVz",
            "YWJsZVN1Ym5ldHdvcmsSFwoPbmV4dF9wYWdlX3Rva2VuGAIgASgJIoACCh5V",
            "c2FibGVTdWJuZXR3b3JrU2Vjb25kYXJ5UmFuZ2USEgoKcmFuZ2VfbmFtZRgB",
            "IAEoCRIVCg1pcF9jaWRyX3JhbmdlGAIgASgJEkoKBnN0YXR1cxgDIAEoDjI6",
            "Lmdvb2dsZS5jb250YWluZXIudjEuVXNhYmxlU3VibmV0d29ya1NlY29uZGFy",
            "eVJhbmdlLlN0YXR1cyJnCgZTdGF0dXMSCwoHVU5LTk9XThAAEgoKBlVOVVNF",
            "RBABEhIKDklOX1VTRV9TRVJWSUNFEAISGAoUSU5fVVNFX1NIQVJFQUJMRV9Q",
            "T0QQAxIWChJJTl9VU0VfTUFOQUdFRF9QT0QQBCK4AQoQVXNhYmxlU3VibmV0",
            "d29yaxISCgpzdWJuZXR3b3JrGAEgASgJEg8KB25ldHdvcmsYAiABKAkSFQoN",
            "aXBfY2lkcl9yYW5nZRgDIAEoCRJQChNzZWNvbmRhcnlfaXBfcmFuZ2VzGAQg",
            "AygLMjMuZ29vZ2xlLmNvbnRhaW5lci52MS5Vc2FibGVTdWJuZXR3b3JrU2Vj",
            "b25kYXJ5UmFuZ2USFgoOc3RhdHVzX21lc3NhZ2UYBSABKAki7QIKGVJlc291",
            "cmNlVXNhZ2VFeHBvcnRDb25maWcSYAoUYmlncXVlcnlfZGVzdGluYXRpb24Y",
            "ASABKAsyQi5nb29nbGUuY29udGFpbmVyLnYxLlJlc291cmNlVXNhZ2VFeHBv",
            "cnRDb25maWcuQmlnUXVlcnlEZXN0aW5hdGlvbhImCh5lbmFibGVfbmV0d29y",
            "a19lZ3Jlc3NfbWV0ZXJpbmcYAiABKAgSbQobY29uc3VtcHRpb25fbWV0ZXJp",
            "bmdfY29uZmlnGAMgASgLMkguZ29vZ2xlLmNvbnRhaW5lci52MS5SZXNvdXJj",
            "ZVVzYWdlRXhwb3J0Q29uZmlnLkNvbnN1bXB0aW9uTWV0ZXJpbmdDb25maWca",
            "KQoTQmlnUXVlcnlEZXN0aW5hdGlvbhISCgpkYXRhc2V0X2lkGAEgASgJGiwK",
            "GUNvbnN1bXB0aW9uTWV0ZXJpbmdDb25maWcSDwoHZW5hYmxlZBgBIAEoCCIp",
            "ChZWZXJ0aWNhbFBvZEF1dG9zY2FsaW5nEg8KB2VuYWJsZWQYASABKAgyoUIK",
            "DkNsdXN0ZXJNYW5hZ2VyEt4BCgxMaXN0Q2x1c3RlcnMSKC5nb29nbGUuY29u",
            "dGFpbmVyLnYxLkxpc3RDbHVzdGVyc1JlcXVlc3QaKS5nb29nbGUuY29udGFp",
            "bmVyLnYxLkxpc3RDbHVzdGVyc1Jlc3BvbnNlInmC0+STAmESLC92MS97cGFy",
            "ZW50PXByb2plY3RzLyovbG9jYXRpb25zLyp9L2NsdXN0ZXJzWjESLy92MS9w",
            "cm9qZWN0cy97cHJvamVjdF9pZH0vem9uZXMve3pvbmV9L2NsdXN0ZXJz2kEP",
            "cHJvamVjdF9pZCx6b25lEuYBCgpHZXRDbHVzdGVyEiYuZ29vZ2xlLmNvbnRh",
            "aW5lci52MS5HZXRDbHVzdGVyUmVxdWVzdBocLmdvb2dsZS5jb250YWluZXIu",
            "djEuQ2x1c3RlciKRAYLT5JMCbhIsL3YxL3tuYW1lPXByb2plY3RzLyovbG9j",
            "YXRpb25zLyovY2x1c3RlcnMvKn1aPhI8L3YxL3Byb2plY3RzL3twcm9qZWN0",
            "X2lkfS96b25lcy97em9uZX0vY2x1c3RlcnMve2NsdXN0ZXJfaWR92kEacHJv",
            "amVjdF9pZCx6b25lLGNsdXN0ZXJfaWQS5AEKDUNyZWF0ZUNsdXN0ZXISKS5n",
            "b29nbGUuY29udGFpbmVyLnYxLkNyZWF0ZUNsdXN0ZXJSZXF1ZXN0Gh4uZ29v",
            "Z2xlLmNvbnRhaW5lci52MS5PcGVyYXRpb24ihwGC0+STAmciLC92MS97cGFy",
            "ZW50PXByb2plY3RzLyovbG9jYXRpb25zLyp9L2NsdXN0ZXJzOgEqWjQiLy92",
            "MS9wcm9qZWN0cy97cHJvamVjdF9pZH0vem9uZXMve3pvbmV9L2NsdXN0ZXJz",
            "OgEq2kEXcHJvamVjdF9pZCx6b25lLGNsdXN0ZXIS+wEKDVVwZGF0ZUNsdXN0",
            "ZXISKS5nb29nbGUuY29udGFpbmVyLnYxLlVwZGF0ZUNsdXN0ZXJSZXF1ZXN0",
            "Gh4uZ29vZ2xlLmNvbnRhaW5lci52MS5PcGVyYXRpb24ingGC0+STAnQaLC92",
            "MS97bmFtZT1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL2NsdXN0ZXJzLyp9OgEq",
            "WkEaPC92MS9wcm9qZWN0cy97cHJvamVjdF9pZH0vem9uZXMve3pvbmV9L2Ns",
            "dXN0ZXJzL3tjbHVzdGVyX2lkfToBKtpBIXByb2plY3RfaWQsem9uZSxjbHVz",
            "dGVyX2lkLHVwZGF0ZRKGAgoOVXBkYXRlTm9kZVBvb2wSKi5nb29nbGUuY29u",
            "dGFpbmVyLnYxLlVwZGF0ZU5vZGVQb29sUmVxdWVzdBoeLmdvb2dsZS5jb250",
            "YWluZXIudjEuT3BlcmF0aW9uIqcBgtPkkwKgARo4L3YxL3tuYW1lPXByb2pl",
            "Y3RzLyovbG9jYXRpb25zLyovY2x1c3RlcnMvKi9ub2RlUG9vbHMvKn06ASpa",
            "YSJcL3YxL3Byb2plY3RzL3twcm9qZWN0X2lkfS96b25lcy97em9uZX0vY2x1",
            "c3RlcnMve2NsdXN0ZXJfaWR9L25vZGVQb29scy97bm9kZV9wb29sX2lkfS91",
            "cGRhdGU6ASoSqgIKFlNldE5vZGVQb29sQXV0b3NjYWxpbmcSMi5nb29nbGUu",
            "Y29udGFpbmVyLnYxLlNldE5vZGVQb29sQXV0b3NjYWxpbmdSZXF1ZXN0Gh4u",
            "Z29vZ2xlLmNvbnRhaW5lci52MS5PcGVyYXRpb24iuwGC0+STArQBIkcvdjEv",
            "e25hbWU9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9jbHVzdGVycy8qL25vZGVQ",
            "b29scy8qfTpzZXRBdXRvc2NhbGluZzoBKlpmImEvdjEvcHJvamVjdHMve3By",
            "b2plY3RfaWR9L3pvbmVzL3t6b25lfS9jbHVzdGVycy97Y2x1c3Rlcl9pZH0v",
            "bm9kZVBvb2xzL3tub2RlX3Bvb2xfaWR9L2F1dG9zY2FsaW5nOgEqEqACChFT",
            "ZXRMb2dnaW5nU2VydmljZRItLmdvb2dsZS5jb250YWluZXIudjEuU2V0TG9n",
            "Z2luZ1NlcnZpY2VSZXF1ZXN0Gh4uZ29vZ2xlLmNvbnRhaW5lci52MS5PcGVy",
            "YXRpb24iuwGC0+STAocBIjcvdjEve25hbWU9cHJvamVjdHMvKi9sb2NhdGlv",
            "bnMvKi9jbHVzdGVycy8qfTpzZXRMb2dnaW5nOgEqWkkiRC92MS9wcm9qZWN0",
            "cy97cHJvamVjdF9pZH0vem9uZXMve3pvbmV9L2NsdXN0ZXJzL3tjbHVzdGVy",
            "X2lkfS9sb2dnaW5nOgEq2kEqcHJvamVjdF9pZCx6b25lLGNsdXN0ZXJfaWQs",
            "bG9nZ2luZ19zZXJ2aWNlEq8CChRTZXRNb25pdG9yaW5nU2VydmljZRIwLmdv",
            "b2dsZS5jb250YWluZXIudjEuU2V0TW9uaXRvcmluZ1NlcnZpY2VSZXF1ZXN0",
            "Gh4uZ29vZ2xlLmNvbnRhaW5lci52MS5PcGVyYXRpb24ixAGC0+STAo0BIjov",
            "djEve25hbWU9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9jbHVzdGVycy8qfTpz",
            "ZXRNb25pdG9yaW5nOgEqWkwiRy92MS9wcm9qZWN0cy97cHJvamVjdF9pZH0v",
            "em9uZXMve3pvbmV9L2NsdXN0ZXJzL3tjbHVzdGVyX2lkfS9tb25pdG9yaW5n",
            "OgEq2kEtcHJvamVjdF9pZCx6b25lLGNsdXN0ZXJfaWQsbW9uaXRvcmluZ19z",
            "ZXJ2aWNlEpgCCg9TZXRBZGRvbnNDb25maWcSKy5nb29nbGUuY29udGFpbmVy",
            "LnYxLlNldEFkZG9uc0NvbmZpZ1JlcXVlc3QaHi5nb29nbGUuY29udGFpbmVy",
            "LnYxLk9wZXJhdGlvbiK3AYLT5JMChQEiNi92MS97bmFtZT1wcm9qZWN0cy8q",
            "L2xvY2F0aW9ucy8qL2NsdXN0ZXJzLyp9OnNldEFkZG9uczoBKlpIIkMvdjEv",
            "cHJvamVjdHMve3Byb2plY3RfaWR9L3pvbmVzL3t6b25lfS9jbHVzdGVycy97",
            "Y2x1c3Rlcl9pZH0vYWRkb25zOgEq2kEocHJvamVjdF9pZCx6b25lLGNsdXN0",
            "ZXJfaWQsYWRkb25zX2NvbmZpZxKUAgoMU2V0TG9jYXRpb25zEiguZ29vZ2xl",
            "LmNvbnRhaW5lci52MS5TZXRMb2NhdGlvbnNSZXF1ZXN0Gh4uZ29vZ2xlLmNv",
            "bnRhaW5lci52MS5PcGVyYXRpb24iuQGC0+STAosBIjkvdjEve25hbWU9cHJv",
            "amVjdHMvKi9sb2NhdGlvbnMvKi9jbHVzdGVycy8qfTpzZXRMb2NhdGlvbnM6",
            "ASpaSyJGL3YxL3Byb2plY3RzL3twcm9qZWN0X2lkfS96b25lcy97em9uZX0v",
            "Y2x1c3RlcnMve2NsdXN0ZXJfaWR9L2xvY2F0aW9uczoBKtpBJHByb2plY3Rf",
            "aWQsem9uZSxjbHVzdGVyX2lkLGxvY2F0aW9ucxKWAgoMVXBkYXRlTWFzdGVy",
            "EiguZ29vZ2xlLmNvbnRhaW5lci52MS5VcGRhdGVNYXN0ZXJSZXF1ZXN0Gh4u",
            "Z29vZ2xlLmNvbnRhaW5lci52MS5PcGVyYXRpb24iuwGC0+STAogBIjkvdjEv",
            "e25hbWU9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9jbHVzdGVycy8qfTp1cGRh",
            "dGVNYXN0ZXI6ASpaSCJDL3YxL3Byb2plY3RzL3twcm9qZWN0X2lkfS96b25l",
            "cy97em9uZX0vY2x1c3RlcnMve2NsdXN0ZXJfaWR9L21hc3RlcjoBKtpBKXBy",
            "b2plY3RfaWQsem9uZSxjbHVzdGVyX2lkLG1hc3Rlcl92ZXJzaW9uEvQBCg1T",
            "ZXRNYXN0ZXJBdXRoEikuZ29vZ2xlLmNvbnRhaW5lci52MS5TZXRNYXN0ZXJB",
            "dXRoUmVxdWVzdBoeLmdvb2dsZS5jb250YWluZXIudjEuT3BlcmF0aW9uIpcB",
            "gtPkkwKQASI6L3YxL3tuYW1lPXByb2plY3RzLyovbG9jYXRpb25zLyovY2x1",
            "c3RlcnMvKn06c2V0TWFzdGVyQXV0aDoBKlpPIkovdjEvcHJvamVjdHMve3By",
            "b2plY3RfaWR9L3pvbmVzL3t6b25lfS9jbHVzdGVycy97Y2x1c3Rlcl9pZH06",
            "c2V0TWFzdGVyQXV0aDoBKhLuAQoNRGVsZXRlQ2x1c3RlchIpLmdvb2dsZS5j",
            "b250YWluZXIudjEuRGVsZXRlQ2x1c3RlclJlcXVlc3QaHi5nb29nbGUuY29u",
            "dGFpbmVyLnYxLk9wZXJhdGlvbiKRAYLT5JMCbiosL3YxL3tuYW1lPXByb2pl",
            "Y3RzLyovbG9jYXRpb25zLyovY2x1c3RlcnMvKn1aPio8L3YxL3Byb2plY3Rz",
            "L3twcm9qZWN0X2lkfS96b25lcy97em9uZX0vY2x1c3RlcnMve2NsdXN0ZXJf",
            "aWR92kEacHJvamVjdF9pZCx6b25lLGNsdXN0ZXJfaWQS6AEKDkxpc3RPcGVy",
            "YXRpb25zEiouZ29vZ2xlLmNvbnRhaW5lci52MS5MaXN0T3BlcmF0aW9uc1Jl",
            "cXVlc3QaKy5nb29nbGUuY29udGFpbmVyLnYxLkxpc3RPcGVyYXRpb25zUmVz",
            "cG9uc2UifYLT5JMCZRIuL3YxL3twYXJlbnQ9cHJvamVjdHMvKi9sb2NhdGlv",
            "bnMvKn0vb3BlcmF0aW9uc1ozEjEvdjEvcHJvamVjdHMve3Byb2plY3RfaWR9",
            "L3pvbmVzL3t6b25lfS9vcGVyYXRpb25z2kEPcHJvamVjdF9pZCx6b25lEvQB",
            "CgxHZXRPcGVyYXRpb24SKC5nb29nbGUuY29udGFpbmVyLnYxLkdldE9wZXJh",
            "dGlvblJlcXVlc3QaHi5nb29nbGUuY29udGFpbmVyLnYxLk9wZXJhdGlvbiKZ",
            "AYLT5JMCdBIuL3YxL3tuYW1lPXByb2plY3RzLyovbG9jYXRpb25zLyovb3Bl",
            "cmF0aW9ucy8qfVpCEkAvdjEvcHJvamVjdHMve3Byb2plY3RfaWR9L3pvbmVz",
            "L3t6b25lfS9vcGVyYXRpb25zL3tvcGVyYXRpb25faWR92kEccHJvamVjdF9p",
            "ZCx6b25lLG9wZXJhdGlvbl9pZBKHAgoPQ2FuY2VsT3BlcmF0aW9uEisuZ29v",
            "Z2xlLmNvbnRhaW5lci52MS5DYW5jZWxPcGVyYXRpb25SZXF1ZXN0GhYuZ29v",
            "Z2xlLnByb3RvYnVmLkVtcHR5Iq4BgtPkkwKIASI1L3YxL3tuYW1lPXByb2pl",
            "Y3RzLyovbG9jYXRpb25zLyovb3BlcmF0aW9ucy8qfTpjYW5jZWw6ASpaTCJH",
            "L3YxL3Byb2plY3RzL3twcm9qZWN0X2lkfS96b25lcy97em9uZX0vb3BlcmF0",
            "aW9ucy97b3BlcmF0aW9uX2lkfTpjYW5jZWw6ASraQRxwcm9qZWN0X2lkLHpv",
            "bmUsb3BlcmF0aW9uX2lkEuIBCg9HZXRTZXJ2ZXJDb25maWcSKy5nb29nbGUu",
            "Y29udGFpbmVyLnYxLkdldFNlcnZlckNvbmZpZ1JlcXVlc3QaIS5nb29nbGUu",
            "Y29udGFpbmVyLnYxLlNlcnZlckNvbmZpZyJ/gtPkkwJnEi4vdjEve25hbWU9",
            "cHJvamVjdHMvKi9sb2NhdGlvbnMvKn0vc2VydmVyQ29uZmlnWjUSMy92MS9w",
            "cm9qZWN0cy97cHJvamVjdF9pZH0vem9uZXMve3pvbmV9L3NlcnZlcmNvbmZp",
            "Z9pBD3Byb2plY3RfaWQsem9uZRKRAgoNTGlzdE5vZGVQb29scxIpLmdvb2ds",
            "ZS5jb250YWluZXIudjEuTGlzdE5vZGVQb29sc1JlcXVlc3QaKi5nb29nbGUu",
            "Y29udGFpbmVyLnYxLkxpc3ROb2RlUG9vbHNSZXNwb25zZSKoAYLT5JMChAES",
            "OC92MS97cGFyZW50PXByb2plY3RzLyovbG9jYXRpb25zLyovY2x1c3RlcnMv",
            "Kn0vbm9kZVBvb2xzWkgSRi92MS9wcm9qZWN0cy97cHJvamVjdF9pZH0vem9u",
            "ZXMve3pvbmV9L2NsdXN0ZXJzL3tjbHVzdGVyX2lkfS9ub2RlUG9vbHPaQRpw",
            "cm9qZWN0X2lkLHpvbmUsY2x1c3Rlcl9pZBKcAgoLR2V0Tm9kZVBvb2wSJy5n",
            "b29nbGUuY29udGFpbmVyLnYxLkdldE5vZGVQb29sUmVxdWVzdBodLmdvb2ds",
            "ZS5jb250YWluZXIudjEuTm9kZVBvb2wixAGC0+STApMBEjgvdjEve25hbWU9",
            "cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9jbHVzdGVycy8qL25vZGVQb29scy8q",
            "fVpXElUvdjEvcHJvamVjdHMve3Byb2plY3RfaWR9L3pvbmVzL3t6b25lfS9j",
            "bHVzdGVycy97Y2x1c3Rlcl9pZH0vbm9kZVBvb2xzL3tub2RlX3Bvb2xfaWR9",
            "2kEncHJvamVjdF9pZCx6b25lLGNsdXN0ZXJfaWQsbm9kZV9wb29sX2lkEpcC",
            "Cg5DcmVhdGVOb2RlUG9vbBIqLmdvb2dsZS5jb250YWluZXIudjEuQ3JlYXRl",
            "Tm9kZVBvb2xSZXF1ZXN0Gh4uZ29vZ2xlLmNvbnRhaW5lci52MS5PcGVyYXRp",
            "b24iuAGC0+STAooBIjgvdjEve3BhcmVudD1wcm9qZWN0cy8qL2xvY2F0aW9u",
            "cy8qL2NsdXN0ZXJzLyp9L25vZGVQb29sczoBKlpLIkYvdjEvcHJvamVjdHMv",
            "e3Byb2plY3RfaWR9L3pvbmVzL3t6b25lfS9jbHVzdGVycy97Y2x1c3Rlcl9p",
            "ZH0vbm9kZVBvb2xzOgEq2kEkcHJvamVjdF9pZCx6b25lLGNsdXN0ZXJfaWQs",
            "bm9kZV9wb29sEqMCCg5EZWxldGVOb2RlUG9vbBIqLmdvb2dsZS5jb250YWlu",
            "ZXIudjEuRGVsZXRlTm9kZVBvb2xSZXF1ZXN0Gh4uZ29vZ2xlLmNvbnRhaW5l",
            "ci52MS5PcGVyYXRpb24ixAGC0+STApMBKjgvdjEve25hbWU9cHJvamVjdHMv",
            "Ki9sb2NhdGlvbnMvKi9jbHVzdGVycy8qL25vZGVQb29scy8qfVpXKlUvdjEv",
            "cHJvamVjdHMve3Byb2plY3RfaWR9L3pvbmVzL3t6b25lfS9jbHVzdGVycy97",
            "Y2x1c3Rlcl9pZH0vbm9kZVBvb2xzL3tub2RlX3Bvb2xfaWR92kEncHJvamVj",
            "dF9pZCx6b25lLGNsdXN0ZXJfaWQsbm9kZV9wb29sX2lkEs0CChdSb2xsYmFj",
            "a05vZGVQb29sVXBncmFkZRIzLmdvb2dsZS5jb250YWluZXIudjEuUm9sbGJh",
            "Y2tOb2RlUG9vbFVwZ3JhZGVSZXF1ZXN0Gh4uZ29vZ2xlLmNvbnRhaW5lci52",
            "MS5PcGVyYXRpb24i3AGC0+STAqsBIkEvdjEve25hbWU9cHJvamVjdHMvKi9s",
            "b2NhdGlvbnMvKi9jbHVzdGVycy8qL25vZGVQb29scy8qfTpyb2xsYmFjazoB",
            "KlpjIl4vdjEvcHJvamVjdHMve3Byb2plY3RfaWR9L3pvbmVzL3t6b25lfS9j",
            "bHVzdGVycy97Y2x1c3Rlcl9pZH0vbm9kZVBvb2xzL3tub2RlX3Bvb2xfaWR9",
            "OnJvbGxiYWNrOgEq2kEncHJvamVjdF9pZCx6b25lLGNsdXN0ZXJfaWQsbm9k",
            "ZV9wb29sX2lkEqkCChVTZXROb2RlUG9vbE1hbmFnZW1lbnQSMS5nb29nbGUu",
            "Y29udGFpbmVyLnYxLlNldE5vZGVQb29sTWFuYWdlbWVudFJlcXVlc3QaHi5n",
            "b29nbGUuY29udGFpbmVyLnYxLk9wZXJhdGlvbiK8AYLT5JMCtQEiRi92MS97",
            "bmFtZT1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL2NsdXN0ZXJzLyovbm9kZVBv",
            "b2xzLyp9OnNldE1hbmFnZW1lbnQ6ASpaaCJjL3YxL3Byb2plY3RzL3twcm9q",
            "ZWN0X2lkfS96b25lcy97em9uZX0vY2x1c3RlcnMve2NsdXN0ZXJfaWR9L25v",
            "ZGVQb29scy97bm9kZV9wb29sX2lkfS9zZXRNYW5hZ2VtZW50OgEqEvEBCglT",
            "ZXRMYWJlbHMSJS5nb29nbGUuY29udGFpbmVyLnYxLlNldExhYmVsc1JlcXVl",
            "c3QaHi5nb29nbGUuY29udGFpbmVyLnYxLk9wZXJhdGlvbiKcAYLT5JMClQEi",
            "Pi92MS97bmFtZT1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL2NsdXN0ZXJzLyp9",
            "OnNldFJlc291cmNlTGFiZWxzOgEqWlAiSy92MS9wcm9qZWN0cy97cHJvamVj",
            "dF9pZH0vem9uZXMve3pvbmV9L2NsdXN0ZXJzL3tjbHVzdGVyX2lkfS9yZXNv",
            "dXJjZUxhYmVsczoBKhKWAgoNU2V0TGVnYWN5QWJhYxIpLmdvb2dsZS5jb250",
            "YWluZXIudjEuU2V0TGVnYWN5QWJhY1JlcXVlc3QaHi5nb29nbGUuY29udGFp",
            "bmVyLnYxLk9wZXJhdGlvbiK5AYLT5JMCjQEiOi92MS97bmFtZT1wcm9qZWN0",
            "cy8qL2xvY2F0aW9ucy8qL2NsdXN0ZXJzLyp9OnNldExlZ2FjeUFiYWM6ASpa",
            "TCJHL3YxL3Byb2plY3RzL3twcm9qZWN0X2lkfS96b25lcy97em9uZX0vY2x1",
            "c3RlcnMve2NsdXN0ZXJfaWR9L2xlZ2FjeUFiYWM6ASraQSJwcm9qZWN0X2lk",
            "LHpvbmUsY2x1c3Rlcl9pZCxlbmFibGVkEpkCCg9TdGFydElQUm90YXRpb24S",
            "Ky5nb29nbGUuY29udGFpbmVyLnYxLlN0YXJ0SVBSb3RhdGlvblJlcXVlc3Qa",
            "Hi5nb29nbGUuY29udGFpbmVyLnYxLk9wZXJhdGlvbiK4AYLT5JMClAEiPC92",
            "MS97bmFtZT1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL2NsdXN0ZXJzLyp9OnN0",
            "YXJ0SXBSb3RhdGlvbjoBKlpRIkwvdjEvcHJvamVjdHMve3Byb2plY3RfaWR9",
            "L3pvbmVzL3t6b25lfS9jbHVzdGVycy97Y2x1c3Rlcl9pZH06c3RhcnRJcFJv",
            "dGF0aW9uOgEq2kEacHJvamVjdF9pZCx6b25lLGNsdXN0ZXJfaWQSpQIKEkNv",
            "bXBsZXRlSVBSb3RhdGlvbhIuLmdvb2dsZS5jb250YWluZXIudjEuQ29tcGxl",
            "dGVJUFJvdGF0aW9uUmVxdWVzdBoeLmdvb2dsZS5jb250YWluZXIudjEuT3Bl",
            "cmF0aW9uIr4BgtPkkwKaASI/L3YxL3tuYW1lPXByb2plY3RzLyovbG9jYXRp",
            "b25zLyovY2x1c3RlcnMvKn06Y29tcGxldGVJcFJvdGF0aW9uOgEqWlQiTy92",
            "MS9wcm9qZWN0cy97cHJvamVjdF9pZH0vem9uZXMve3pvbmV9L2NsdXN0ZXJz",
            "L3tjbHVzdGVyX2lkfTpjb21wbGV0ZUlwUm90YXRpb246ASraQRpwcm9qZWN0",
            "X2lkLHpvbmUsY2x1c3Rlcl9pZBKRAgoPU2V0Tm9kZVBvb2xTaXplEisuZ29v",
            "Z2xlLmNvbnRhaW5lci52MS5TZXROb2RlUG9vbFNpemVSZXF1ZXN0Gh4uZ29v",
            "Z2xlLmNvbnRhaW5lci52MS5PcGVyYXRpb24isAGC0+STAqkBIkAvdjEve25h",
            "bWU9cHJvamVjdHMvKi9sb2NhdGlvbnMvKi9jbHVzdGVycy8qL25vZGVQb29s",
            "cy8qfTpzZXRTaXplOgEqWmIiXS92MS9wcm9qZWN0cy97cHJvamVjdF9pZH0v",
            "em9uZXMve3pvbmV9L2NsdXN0ZXJzL3tjbHVzdGVyX2lkfS9ub2RlUG9vbHMv",
            "e25vZGVfcG9vbF9pZH0vc2V0U2l6ZToBKhKsAgoQU2V0TmV0d29ya1BvbGlj",
            "eRIsLmdvb2dsZS5jb250YWluZXIudjEuU2V0TmV0d29ya1BvbGljeVJlcXVl",
            "c3QaHi5nb29nbGUuY29udGFpbmVyLnYxLk9wZXJhdGlvbiLJAYLT5JMClgEi",
            "PS92MS97bmFtZT1wcm9qZWN0cy8qL2xvY2F0aW9ucy8qL2NsdXN0ZXJzLyp9",
            "OnNldE5ldHdvcmtQb2xpY3k6ASpaUiJNL3YxL3Byb2plY3RzL3twcm9qZWN0",
            "X2lkfS96b25lcy97em9uZX0vY2x1c3RlcnMve2NsdXN0ZXJfaWR9OnNldE5l",
            "dHdvcmtQb2xpY3k6ASraQSlwcm9qZWN0X2lkLHpvbmUsY2x1c3Rlcl9pZCxu",
            "ZXR3b3JrX3BvbGljeRLAAgoUU2V0TWFpbnRlbmFuY2VQb2xpY3kSMC5nb29n",
            "bGUuY29udGFpbmVyLnYxLlNldE1haW50ZW5hbmNlUG9saWN5UmVxdWVzdBoe",
            "Lmdvb2dsZS5jb250YWluZXIudjEuT3BlcmF0aW9uItUBgtPkkwKeASJBL3Yx",
            "L3tuYW1lPXByb2plY3RzLyovbG9jYXRpb25zLyovY2x1c3RlcnMvKn06c2V0",
            "TWFpbnRlbmFuY2VQb2xpY3k6ASpaViJRL3YxL3Byb2plY3RzL3twcm9qZWN0",
            "X2lkfS96b25lcy97em9uZX0vY2x1c3RlcnMve2NsdXN0ZXJfaWR9OnNldE1h",
            "aW50ZW5hbmNlUG9saWN5OgEq2kEtcHJvamVjdF9pZCx6b25lLGNsdXN0ZXJf",
            "aWQsbWFpbnRlbmFuY2VfcG9saWN5ErwBChVMaXN0VXNhYmxlU3VibmV0d29y",
            "a3MSMS5nb29nbGUuY29udGFpbmVyLnYxLkxpc3RVc2FibGVTdWJuZXR3b3Jr",
            "c1JlcXVlc3QaMi5nb29nbGUuY29udGFpbmVyLnYxLkxpc3RVc2FibGVTdWJu",
            "ZXR3b3Jrc1Jlc3BvbnNlIjyC0+STAjYSNC92MS97cGFyZW50PXByb2plY3Rz",
            "Lyp9L2FnZ3JlZ2F0ZWQvdXNhYmxlU3VibmV0d29ya3MaTMpBGGNvbnRhaW5l",
            "ci5nb29nbGVhcGlzLmNvbdJBLmh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29t",
            "L2F1dGgvY2xvdWQtcGxhdGZvcm1CpgEKF2NvbS5nb29nbGUuY29udGFpbmVy",
            "LnYxQhNDbHVzdGVyU2VydmljZVByb3RvUAFaPGdvb2dsZS5nb2xhbmcub3Jn",
            "L2dlbnByb3RvL2dvb2dsZWFwaXMvY29udGFpbmVyL3YxO2NvbnRhaW5lcqoC",
            "GUdvb2dsZS5DbG91ZC5Db250YWluZXIuVjHKAhlHb29nbGVcQ2xvdWRcQ29u",
            "dGFpbmVyXFYxYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.AnnotationsReflection.Descriptor, global::Google.Api.ClientReflection.Descriptor, global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.NodeConfig), global::Google.Cloud.Container.V1.NodeConfig.Parser, new[]{ "MachineType", "DiskSizeGb", "OauthScopes", "ServiceAccount", "Metadata", "ImageType", "Labels", "LocalSsdCount", "Tags", "Preemptible", "Accelerators", "DiskType", "MinCpuPlatform", "Taints", "ShieldedInstanceConfig" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.ShieldedInstanceConfig), global::Google.Cloud.Container.V1.ShieldedInstanceConfig.Parser, new[]{ "EnableSecureBoot", "EnableIntegrityMonitoring" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.NodeTaint), global::Google.Cloud.Container.V1.NodeTaint.Parser, new[]{ "Key", "Value", "Effect" }, null, new[]{ typeof(global::Google.Cloud.Container.V1.NodeTaint.Types.Effect) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.MasterAuth), global::Google.Cloud.Container.V1.MasterAuth.Parser, new[]{ "Username", "Password", "ClientCertificateConfig", "ClusterCaCertificate", "ClientCertificate", "ClientKey" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.ClientCertificateConfig), global::Google.Cloud.Container.V1.ClientCertificateConfig.Parser, new[]{ "IssueClientCertificate" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.AddonsConfig), global::Google.Cloud.Container.V1.AddonsConfig.Parser, new[]{ "HttpLoadBalancing", "HorizontalPodAutoscaling", "KubernetesDashboard", "NetworkPolicyConfig", "CloudRunConfig" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.HttpLoadBalancing), global::Google.Cloud.Container.V1.HttpLoadBalancing.Parser, new[]{ "Disabled" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.HorizontalPodAutoscaling), global::Google.Cloud.Container.V1.HorizontalPodAutoscaling.Parser, new[]{ "Disabled" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.KubernetesDashboard), global::Google.Cloud.Container.V1.KubernetesDashboard.Parser, new[]{ "Disabled" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.NetworkPolicyConfig), global::Google.Cloud.Container.V1.NetworkPolicyConfig.Parser, new[]{ "Disabled" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.PrivateClusterConfig), global::Google.Cloud.Container.V1.PrivateClusterConfig.Parser, new[]{ "EnablePrivateNodes", "EnablePrivateEndpoint", "MasterIpv4CidrBlock", "PrivateEndpoint", "PublicEndpoint" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.AuthenticatorGroupsConfig), global::Google.Cloud.Container.V1.AuthenticatorGroupsConfig.Parser, new[]{ "Enabled", "SecurityGroup" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.CloudRunConfig), global::Google.Cloud.Container.V1.CloudRunConfig.Parser, new[]{ "Disabled" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.MasterAuthorizedNetworksConfig), global::Google.Cloud.Container.V1.MasterAuthorizedNetworksConfig.Parser, new[]{ "Enabled", "CidrBlocks" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.MasterAuthorizedNetworksConfig.Types.CidrBlock), global::Google.Cloud.Container.V1.MasterAuthorizedNetworksConfig.Types.CidrBlock.Parser, new[]{ "DisplayName", "CidrBlock_" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.LegacyAbac), global::Google.Cloud.Container.V1.LegacyAbac.Parser, new[]{ "Enabled" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.NetworkPolicy), global::Google.Cloud.Container.V1.NetworkPolicy.Parser, new[]{ "Provider", "Enabled" }, null, new[]{ typeof(global::Google.Cloud.Container.V1.NetworkPolicy.Types.Provider) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.BinaryAuthorization), global::Google.Cloud.Container.V1.BinaryAuthorization.Parser, new[]{ "Enabled" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.IPAllocationPolicy), global::Google.Cloud.Container.V1.IPAllocationPolicy.Parser, new[]{ "UseIpAliases", "CreateSubnetwork", "SubnetworkName", "ClusterIpv4Cidr", "NodeIpv4Cidr", "ServicesIpv4Cidr", "ClusterSecondaryRangeName", "ServicesSecondaryRangeName", "ClusterIpv4CidrBlock", "NodeIpv4CidrBlock", "ServicesIpv4CidrBlock", "TpuIpv4CidrBlock" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.Cluster), global::Google.Cloud.Container.V1.Cluster.Parser, new[]{ "Name", "Description", "InitialNodeCount", "NodeConfig", "MasterAuth", "LoggingService", "MonitoringService", "Network", "ClusterIpv4Cidr", "AddonsConfig", "Subnetwork", "NodePools", "Locations", "EnableKubernetesAlpha", "ResourceLabels", "LabelFingerprint", "LegacyAbac", "NetworkPolicy", "IpAllocationPolicy", "MasterAuthorizedNetworksConfig", "MaintenancePolicy", "BinaryAuthorization", "Autoscaling", "NetworkConfig", "DefaultMaxPodsConstraint", "ResourceUsageExportConfig", "AuthenticatorGroupsConfig", "PrivateClusterConfig", "DatabaseEncryption", "VerticalPodAutoscaling", "SelfLink", "Zone", "Endpoint", "InitialClusterVersion", "CurrentMasterVersion", "CurrentNodeVersion", "CreateTime", "Status", "StatusMessage", "NodeIpv4CidrSize", "ServicesIpv4Cidr", "InstanceGroupUrls", "CurrentNodeCount", "ExpireTime", "Location", "EnableTpu", "TpuIpv4CidrBlock", "Conditions" }, null, new[]{ typeof(global::Google.Cloud.Container.V1.Cluster.Types.Status) }, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.ClusterUpdate), global::Google.Cloud.Container.V1.ClusterUpdate.Parser, new[]{ "DesiredNodeVersion", "DesiredMonitoringService", "DesiredAddonsConfig", "DesiredNodePoolId", "DesiredImageType", "DesiredDatabaseEncryption", "DesiredNodePoolAutoscaling", "DesiredLocations", "DesiredMasterAuthorizedNetworksConfig", "DesiredClusterAutoscaling", "DesiredBinaryAuthorization", "DesiredLoggingService", "DesiredResourceUsageExportConfig", "DesiredVerticalPodAutoscaling", "DesiredIntraNodeVisibilityConfig", "DesiredMasterVersion" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.Operation), global::Google.Cloud.Container.V1.Operation.Parser, new[]{ "Name", "Zone", "OperationType", "Status", "Detail", "StatusMessage", "SelfLink", "TargetLink", "Location", "StartTime", "EndTime", "ClusterConditions", "NodepoolConditions" }, null, new[]{ typeof(global::Google.Cloud.Container.V1.Operation.Types.Status), typeof(global::Google.Cloud.Container.V1.Operation.Types.Type) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.CreateClusterRequest), global::Google.Cloud.Container.V1.CreateClusterRequest.Parser, new[]{ "ProjectId", "Zone", "Cluster", "Parent" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.GetClusterRequest), global::Google.Cloud.Container.V1.GetClusterRequest.Parser, new[]{ "ProjectId", "Zone", "ClusterId", "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.UpdateClusterRequest), global::Google.Cloud.Container.V1.UpdateClusterRequest.Parser, new[]{ "ProjectId", "Zone", "ClusterId", "Update", "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.UpdateNodePoolRequest), global::Google.Cloud.Container.V1.UpdateNodePoolRequest.Parser, new[]{ "ProjectId", "Zone", "ClusterId", "NodePoolId", "NodeVersion", "ImageType", "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.SetNodePoolAutoscalingRequest), global::Google.Cloud.Container.V1.SetNodePoolAutoscalingRequest.Parser, new[]{ "ProjectId", "Zone", "ClusterId", "NodePoolId", "Autoscaling", "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.SetLoggingServiceRequest), global::Google.Cloud.Container.V1.SetLoggingServiceRequest.Parser, new[]{ "ProjectId", "Zone", "ClusterId", "LoggingService", "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.SetMonitoringServiceRequest), global::Google.Cloud.Container.V1.SetMonitoringServiceRequest.Parser, new[]{ "ProjectId", "Zone", "ClusterId", "MonitoringService", "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.SetAddonsConfigRequest), global::Google.Cloud.Container.V1.SetAddonsConfigRequest.Parser, new[]{ "ProjectId", "Zone", "ClusterId", "AddonsConfig", "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.SetLocationsRequest), global::Google.Cloud.Container.V1.SetLocationsRequest.Parser, new[]{ "ProjectId", "Zone", "ClusterId", "Locations", "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.UpdateMasterRequest), global::Google.Cloud.Container.V1.UpdateMasterRequest.Parser, new[]{ "ProjectId", "Zone", "ClusterId", "MasterVersion", "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.SetMasterAuthRequest), global::Google.Cloud.Container.V1.SetMasterAuthRequest.Parser, new[]{ "ProjectId", "Zone", "ClusterId", "Action", "Update", "Name" }, null, new[]{ typeof(global::Google.Cloud.Container.V1.SetMasterAuthRequest.Types.Action) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.DeleteClusterRequest), global::Google.Cloud.Container.V1.DeleteClusterRequest.Parser, new[]{ "ProjectId", "Zone", "ClusterId", "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.ListClustersRequest), global::Google.Cloud.Container.V1.ListClustersRequest.Parser, new[]{ "ProjectId", "Zone", "Parent" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.ListClustersResponse), global::Google.Cloud.Container.V1.ListClustersResponse.Parser, new[]{ "Clusters", "MissingZones" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.GetOperationRequest), global::Google.Cloud.Container.V1.GetOperationRequest.Parser, new[]{ "ProjectId", "Zone", "OperationId", "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.ListOperationsRequest), global::Google.Cloud.Container.V1.ListOperationsRequest.Parser, new[]{ "ProjectId", "Zone", "Parent" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.CancelOperationRequest), global::Google.Cloud.Container.V1.CancelOperationRequest.Parser, new[]{ "ProjectId", "Zone", "OperationId", "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.ListOperationsResponse), global::Google.Cloud.Container.V1.ListOperationsResponse.Parser, new[]{ "Operations", "MissingZones" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.GetServerConfigRequest), global::Google.Cloud.Container.V1.GetServerConfigRequest.Parser, new[]{ "ProjectId", "Zone", "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.ServerConfig), global::Google.Cloud.Container.V1.ServerConfig.Parser, new[]{ "DefaultClusterVersion", "ValidNodeVersions", "DefaultImageType", "ValidImageTypes", "ValidMasterVersions" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.CreateNodePoolRequest), global::Google.Cloud.Container.V1.CreateNodePoolRequest.Parser, new[]{ "ProjectId", "Zone", "ClusterId", "NodePool", "Parent" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.DeleteNodePoolRequest), global::Google.Cloud.Container.V1.DeleteNodePoolRequest.Parser, new[]{ "ProjectId", "Zone", "ClusterId", "NodePoolId", "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.ListNodePoolsRequest), global::Google.Cloud.Container.V1.ListNodePoolsRequest.Parser, new[]{ "ProjectId", "Zone", "ClusterId", "Parent" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.GetNodePoolRequest), global::Google.Cloud.Container.V1.GetNodePoolRequest.Parser, new[]{ "ProjectId", "Zone", "ClusterId", "NodePoolId", "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.NodePool), global::Google.Cloud.Container.V1.NodePool.Parser, new[]{ "Name", "Config", "InitialNodeCount", "SelfLink", "Version", "InstanceGroupUrls", "Status", "StatusMessage", "Autoscaling", "Management", "MaxPodsConstraint", "Conditions", "PodIpv4CidrSize" }, null, new[]{ typeof(global::Google.Cloud.Container.V1.NodePool.Types.Status) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.NodeManagement), global::Google.Cloud.Container.V1.NodeManagement.Parser, new[]{ "AutoUpgrade", "AutoRepair", "UpgradeOptions" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.AutoUpgradeOptions), global::Google.Cloud.Container.V1.AutoUpgradeOptions.Parser, new[]{ "AutoUpgradeStartTime", "Description" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.MaintenancePolicy), global::Google.Cloud.Container.V1.MaintenancePolicy.Parser, new[]{ "Window", "ResourceVersion" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.MaintenanceWindow), global::Google.Cloud.Container.V1.MaintenanceWindow.Parser, new[]{ "DailyMaintenanceWindow", "RecurringWindow", "MaintenanceExclusions" }, new[]{ "Policy" }, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.TimeWindow), global::Google.Cloud.Container.V1.TimeWindow.Parser, new[]{ "StartTime", "EndTime" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.RecurringTimeWindow), global::Google.Cloud.Container.V1.RecurringTimeWindow.Parser, new[]{ "Window", "Recurrence" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.DailyMaintenanceWindow), global::Google.Cloud.Container.V1.DailyMaintenanceWindow.Parser, new[]{ "StartTime", "Duration" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.SetNodePoolManagementRequest), global::Google.Cloud.Container.V1.SetNodePoolManagementRequest.Parser, new[]{ "ProjectId", "Zone", "ClusterId", "NodePoolId", "Management", "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.SetNodePoolSizeRequest), global::Google.Cloud.Container.V1.SetNodePoolSizeRequest.Parser, new[]{ "ProjectId", "Zone", "ClusterId", "NodePoolId", "NodeCount", "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.RollbackNodePoolUpgradeRequest), global::Google.Cloud.Container.V1.RollbackNodePoolUpgradeRequest.Parser, new[]{ "ProjectId", "Zone", "ClusterId", "NodePoolId", "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.ListNodePoolsResponse), global::Google.Cloud.Container.V1.ListNodePoolsResponse.Parser, new[]{ "NodePools" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.ClusterAutoscaling), global::Google.Cloud.Container.V1.ClusterAutoscaling.Parser, new[]{ "EnableNodeAutoprovisioning", "ResourceLimits", "AutoprovisioningNodePoolDefaults", "AutoprovisioningLocations" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.AutoprovisioningNodePoolDefaults), global::Google.Cloud.Container.V1.AutoprovisioningNodePoolDefaults.Parser, new[]{ "OauthScopes", "ServiceAccount" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.ResourceLimit), global::Google.Cloud.Container.V1.ResourceLimit.Parser, new[]{ "ResourceType", "Minimum", "Maximum" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.NodePoolAutoscaling), global::Google.Cloud.Container.V1.NodePoolAutoscaling.Parser, new[]{ "Enabled", "MinNodeCount", "MaxNodeCount", "Autoprovisioned" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.SetLabelsRequest), global::Google.Cloud.Container.V1.SetLabelsRequest.Parser, new[]{ "ProjectId", "Zone", "ClusterId", "ResourceLabels", "LabelFingerprint", "Name" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.SetLegacyAbacRequest), global::Google.Cloud.Container.V1.SetLegacyAbacRequest.Parser, new[]{ "ProjectId", "Zone", "ClusterId", "Enabled", "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.StartIPRotationRequest), global::Google.Cloud.Container.V1.StartIPRotationRequest.Parser, new[]{ "ProjectId", "Zone", "ClusterId", "Name", "RotateCredentials" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.CompleteIPRotationRequest), global::Google.Cloud.Container.V1.CompleteIPRotationRequest.Parser, new[]{ "ProjectId", "Zone", "ClusterId", "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.AcceleratorConfig), global::Google.Cloud.Container.V1.AcceleratorConfig.Parser, new[]{ "AcceleratorCount", "AcceleratorType" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.SetNetworkPolicyRequest), global::Google.Cloud.Container.V1.SetNetworkPolicyRequest.Parser, new[]{ "ProjectId", "Zone", "ClusterId", "NetworkPolicy", "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.SetMaintenancePolicyRequest), global::Google.Cloud.Container.V1.SetMaintenancePolicyRequest.Parser, new[]{ "ProjectId", "Zone", "ClusterId", "MaintenancePolicy", "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.StatusCondition), global::Google.Cloud.Container.V1.StatusCondition.Parser, new[]{ "Code", "Message" }, null, new[]{ typeof(global::Google.Cloud.Container.V1.StatusCondition.Types.Code) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.NetworkConfig), global::Google.Cloud.Container.V1.NetworkConfig.Parser, new[]{ "Network", "Subnetwork", "EnableIntraNodeVisibility" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.IntraNodeVisibilityConfig), global::Google.Cloud.Container.V1.IntraNodeVisibilityConfig.Parser, new[]{ "Enabled" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.MaxPodsConstraint), global::Google.Cloud.Container.V1.MaxPodsConstraint.Parser, new[]{ "MaxPodsPerNode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.DatabaseEncryption), global::Google.Cloud.Container.V1.DatabaseEncryption.Parser, new[]{ "State", "KeyName" }, null, new[]{ typeof(global::Google.Cloud.Container.V1.DatabaseEncryption.Types.State) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.ListUsableSubnetworksRequest), global::Google.Cloud.Container.V1.ListUsableSubnetworksRequest.Parser, new[]{ "Parent", "Filter", "PageSize", "PageToken" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.ListUsableSubnetworksResponse), global::Google.Cloud.Container.V1.ListUsableSubnetworksResponse.Parser, new[]{ "Subnetworks", "NextPageToken" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.UsableSubnetworkSecondaryRange), global::Google.Cloud.Container.V1.UsableSubnetworkSecondaryRange.Parser, new[]{ "RangeName", "IpCidrRange", "Status" }, null, new[]{ typeof(global::Google.Cloud.Container.V1.UsableSubnetworkSecondaryRange.Types.Status) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.UsableSubnetwork), global::Google.Cloud.Container.V1.UsableSubnetwork.Parser, new[]{ "Subnetwork", "Network", "IpCidrRange", "SecondaryIpRanges", "StatusMessage" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.ResourceUsageExportConfig), global::Google.Cloud.Container.V1.ResourceUsageExportConfig.Parser, new[]{ "BigqueryDestination", "EnableNetworkEgressMetering", "ConsumptionMeteringConfig" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.ResourceUsageExportConfig.Types.BigQueryDestination), global::Google.Cloud.Container.V1.ResourceUsageExportConfig.Types.BigQueryDestination.Parser, new[]{ "DatasetId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.ResourceUsageExportConfig.Types.ConsumptionMeteringConfig), global::Google.Cloud.Container.V1.ResourceUsageExportConfig.Types.ConsumptionMeteringConfig.Parser, new[]{ "Enabled" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Container.V1.VerticalPodAutoscaling), global::Google.Cloud.Container.V1.VerticalPodAutoscaling.Parser, new[]{ "Enabled" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Parameters that describe the nodes in a cluster.
  /// </summary>
  public sealed partial class NodeConfig : pb::IMessage<NodeConfig> {
    private static readonly pb::MessageParser<NodeConfig> _parser = new pb::MessageParser<NodeConfig>(() => new NodeConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NodeConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NodeConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NodeConfig(NodeConfig other) : this() {
      machineType_ = other.machineType_;
      diskSizeGb_ = other.diskSizeGb_;
      oauthScopes_ = other.oauthScopes_.Clone();
      serviceAccount_ = other.serviceAccount_;
      metadata_ = other.metadata_.Clone();
      imageType_ = other.imageType_;
      labels_ = other.labels_.Clone();
      localSsdCount_ = other.localSsdCount_;
      tags_ = other.tags_.Clone();
      preemptible_ = other.preemptible_;
      accelerators_ = other.accelerators_.Clone();
      diskType_ = other.diskType_;
      minCpuPlatform_ = other.minCpuPlatform_;
      taints_ = other.taints_.Clone();
      shieldedInstanceConfig_ = other.shieldedInstanceConfig_ != null ? other.shieldedInstanceConfig_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NodeConfig Clone() {
      return new NodeConfig(this);
    }

    /// <summary>Field number for the "machine_type" field.</summary>
    public const int MachineTypeFieldNumber = 1;
    private string machineType_ = "";
    /// <summary>
    /// The name of a Google Compute Engine [machine
    /// type](https://cloud.google.com/compute/docs/machine-types) (e.g.
    /// `n1-standard-1`).
    ///
    /// If unspecified, the default machine type is
    /// `n1-standard-1`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MachineType {
      get { return machineType_; }
      set {
        machineType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "disk_size_gb" field.</summary>
    public const int DiskSizeGbFieldNumber = 2;
    private int diskSizeGb_;
    /// <summary>
    /// Size of the disk attached to each node, specified in GB.
    /// The smallest allowed disk size is 10GB.
    ///
    /// If unspecified, the default disk size is 100GB.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DiskSizeGb {
      get { return diskSizeGb_; }
      set {
        diskSizeGb_ = value;
      }
    }

    /// <summary>Field number for the "oauth_scopes" field.</summary>
    public const int OauthScopesFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_oauthScopes_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> oauthScopes_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// The set of Google API scopes to be made available on all of the
    /// node VMs under the "default" service account.
    ///
    /// The following scopes are recommended, but not required, and by default are
    /// not included:
    ///
    /// * `https://www.googleapis.com/auth/compute` is required for mounting
    /// persistent storage on your nodes.
    /// * `https://www.googleapis.com/auth/devstorage.read_only` is required for
    /// communicating with **gcr.io**
    /// (the [Google Container Registry](https://cloud.google.com/container-registry/)).
    ///
    /// If unspecified, no scopes are added, unless Cloud Logging or Cloud
    /// Monitoring are enabled, in which case their required scopes will be added.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> OauthScopes {
      get { return oauthScopes_; }
    }

    /// <summary>Field number for the "service_account" field.</summary>
    public const int ServiceAccountFieldNumber = 9;
    private string serviceAccount_ = "";
    /// <summary>
    /// The Google Cloud Platform Service Account to be used by the node VMs. If
    /// no Service Account is specified, the "default" service account is used.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServiceAccount {
      get { return serviceAccount_; }
      set {
        serviceAccount_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 4;
    private static readonly pbc::MapField<string, string>.Codec _map_metadata_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 34);
    private readonly pbc::MapField<string, string> metadata_ = new pbc::MapField<string, string>();
    /// <summary>
    /// The metadata key/value pairs assigned to instances in the cluster.
    ///
    /// Keys must conform to the regexp [a-zA-Z0-9-_]+ and be less than 128 bytes
    /// in length. These are reflected as part of a URL in the metadata server.
    /// Additionally, to avoid ambiguity, keys must not conflict with any other
    /// metadata keys for the project or be one of the reserved keys:
    ///  "cluster-location"
    ///  "cluster-name"
    ///  "cluster-uid"
    ///  "configure-sh"
    ///  "containerd-configure-sh"
    ///  "enable-os-login"
    ///  "gci-update-strategy"
    ///  "gci-ensure-gke-docker"
    ///  "instance-template"
    ///  "kube-env"
    ///  "startup-script"
    ///  "user-data"
    ///  "disable-address-manager"
    ///  "windows-startup-script-ps1"
    ///  "common-psm1"
    ///  "k8s-node-setup-psm1"
    ///  "install-ssh-psm1"
    ///  "user-profile-psm1"
    ///  "serial-port-logging-enable"
    ///
    /// Values are free-form strings, and only have meaning as interpreted by
    /// the image running in the instance. The only restriction placed on them is
    /// that each value's size must be less than or equal to 32 KB.
    ///
    /// The total size of all keys and values must be less than 512 KB.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Metadata {
      get { return metadata_; }
    }

    /// <summary>Field number for the "image_type" field.</summary>
    public const int ImageTypeFieldNumber = 5;
    private string imageType_ = "";
    /// <summary>
    /// The image type to use for this node. Note that for a given image type,
    /// the latest version of it will be used.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ImageType {
      get { return imageType_; }
      set {
        imageType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "labels" field.</summary>
    public const int LabelsFieldNumber = 6;
    private static readonly pbc::MapField<string, string>.Codec _map_labels_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 50);
    private readonly pbc::MapField<string, string> labels_ = new pbc::MapField<string, string>();
    /// <summary>
    /// The map of Kubernetes labels (key/value pairs) to be applied to each node.
    /// These will added in addition to any default label(s) that
    /// Kubernetes may apply to the node.
    /// In case of conflict in label keys, the applied set may differ depending on
    /// the Kubernetes version -- it's best to assume the behavior is undefined
    /// and conflicts should be avoided.
    /// For more information, including usage and the valid values, see:
    /// https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Labels {
      get { return labels_; }
    }

    /// <summary>Field number for the "local_ssd_count" field.</summary>
    public const int LocalSsdCountFieldNumber = 7;
    private int localSsdCount_;
    /// <summary>
    /// The number of local SSD disks to be attached to the node.
    ///
    /// The limit for this value is dependent upon the maximum number of
    /// disks available on a machine per zone. See:
    /// https://cloud.google.com/compute/docs/disks/local-ssd
    /// for more information.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LocalSsdCount {
      get { return localSsdCount_; }
      set {
        localSsdCount_ = value;
      }
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 8;
    private static readonly pb::FieldCodec<string> _repeated_tags_codec
        = pb::FieldCodec.ForString(66);
    private readonly pbc::RepeatedField<string> tags_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// The list of instance tags applied to all nodes. Tags are used to identify
    /// valid sources or targets for network firewalls and are specified by
    /// the client during cluster or node pool creation. Each tag within the list
    /// must comply with RFC1035.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Tags {
      get { return tags_; }
    }

    /// <summary>Field number for the "preemptible" field.</summary>
    public const int PreemptibleFieldNumber = 10;
    private bool preemptible_;
    /// <summary>
    /// Whether the nodes are created as preemptible VM instances. See:
    /// https://cloud.google.com/compute/docs/instances/preemptible for more
    /// information about preemptible VM instances.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Preemptible {
      get { return preemptible_; }
      set {
        preemptible_ = value;
      }
    }

    /// <summary>Field number for the "accelerators" field.</summary>
    public const int AcceleratorsFieldNumber = 11;
    private static readonly pb::FieldCodec<global::Google.Cloud.Container.V1.AcceleratorConfig> _repeated_accelerators_codec
        = pb::FieldCodec.ForMessage(90, global::Google.Cloud.Container.V1.AcceleratorConfig.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Container.V1.AcceleratorConfig> accelerators_ = new pbc::RepeatedField<global::Google.Cloud.Container.V1.AcceleratorConfig>();
    /// <summary>
    /// A list of hardware accelerators to be attached to each node.
    /// See https://cloud.google.com/compute/docs/gpus for more information about
    /// support for GPUs.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Container.V1.AcceleratorConfig> Accelerators {
      get { return accelerators_; }
    }

    /// <summary>Field number for the "disk_type" field.</summary>
    public const int DiskTypeFieldNumber = 12;
    private string diskType_ = "";
    /// <summary>
    /// Type of the disk attached to each node (e.g. 'pd-standard' or 'pd-ssd')
    ///
    /// If unspecified, the default disk type is 'pd-standard'
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DiskType {
      get { return diskType_; }
      set {
        diskType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "min_cpu_platform" field.</summary>
    public const int MinCpuPlatformFieldNumber = 13;
    private string minCpuPlatform_ = "";
    /// <summary>
    /// Minimum CPU platform to be used by this instance. The instance may be
    /// scheduled on the specified or newer CPU platform. Applicable values are the
    /// friendly names of CPU platforms, such as
    /// &lt;code>minCpuPlatform: &amp;quot;Intel Haswell&amp;quot;&lt;/code> or
    /// &lt;code>minCpuPlatform: &amp;quot;Intel Sandy Bridge&amp;quot;&lt;/code>. For more
    /// information, read [how to specify min CPU
    /// platform](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MinCpuPlatform {
      get { return minCpuPlatform_; }
      set {
        minCpuPlatform_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "taints" field.</summary>
    public const int TaintsFieldNumber = 15;
    private static readonly pb::FieldCodec<global::Google.Cloud.Container.V1.NodeTaint> _repeated_taints_codec
        = pb::FieldCodec.ForMessage(122, global::Google.Cloud.Container.V1.NodeTaint.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Container.V1.NodeTaint> taints_ = new pbc::RepeatedField<global::Google.Cloud.Container.V1.NodeTaint>();
    /// <summary>
    /// List of kubernetes taints to be applied to each node.
    ///
    /// For more information, including usage and the valid values, see:
    /// https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Container.V1.NodeTaint> Taints {
      get { return taints_; }
    }

    /// <summary>Field number for the "shielded_instance_config" field.</summary>
    public const int ShieldedInstanceConfigFieldNumber = 20;
    private global::Google.Cloud.Container.V1.ShieldedInstanceConfig shieldedInstanceConfig_;
    /// <summary>
    /// Shielded Instance options.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.ShieldedInstanceConfig ShieldedInstanceConfig {
      get { return shieldedInstanceConfig_; }
      set {
        shieldedInstanceConfig_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NodeConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NodeConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MachineType != other.MachineType) return false;
      if (DiskSizeGb != other.DiskSizeGb) return false;
      if(!oauthScopes_.Equals(other.oauthScopes_)) return false;
      if (ServiceAccount != other.ServiceAccount) return false;
      if (!Metadata.Equals(other.Metadata)) return false;
      if (ImageType != other.ImageType) return false;
      if (!Labels.Equals(other.Labels)) return false;
      if (LocalSsdCount != other.LocalSsdCount) return false;
      if(!tags_.Equals(other.tags_)) return false;
      if (Preemptible != other.Preemptible) return false;
      if(!accelerators_.Equals(other.accelerators_)) return false;
      if (DiskType != other.DiskType) return false;
      if (MinCpuPlatform != other.MinCpuPlatform) return false;
      if(!taints_.Equals(other.taints_)) return false;
      if (!object.Equals(ShieldedInstanceConfig, other.ShieldedInstanceConfig)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MachineType.Length != 0) hash ^= MachineType.GetHashCode();
      if (DiskSizeGb != 0) hash ^= DiskSizeGb.GetHashCode();
      hash ^= oauthScopes_.GetHashCode();
      if (ServiceAccount.Length != 0) hash ^= ServiceAccount.GetHashCode();
      hash ^= Metadata.GetHashCode();
      if (ImageType.Length != 0) hash ^= ImageType.GetHashCode();
      hash ^= Labels.GetHashCode();
      if (LocalSsdCount != 0) hash ^= LocalSsdCount.GetHashCode();
      hash ^= tags_.GetHashCode();
      if (Preemptible != false) hash ^= Preemptible.GetHashCode();
      hash ^= accelerators_.GetHashCode();
      if (DiskType.Length != 0) hash ^= DiskType.GetHashCode();
      if (MinCpuPlatform.Length != 0) hash ^= MinCpuPlatform.GetHashCode();
      hash ^= taints_.GetHashCode();
      if (shieldedInstanceConfig_ != null) hash ^= ShieldedInstanceConfig.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MachineType.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MachineType);
      }
      if (DiskSizeGb != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(DiskSizeGb);
      }
      oauthScopes_.WriteTo(output, _repeated_oauthScopes_codec);
      metadata_.WriteTo(output, _map_metadata_codec);
      if (ImageType.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ImageType);
      }
      labels_.WriteTo(output, _map_labels_codec);
      if (LocalSsdCount != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(LocalSsdCount);
      }
      tags_.WriteTo(output, _repeated_tags_codec);
      if (ServiceAccount.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(ServiceAccount);
      }
      if (Preemptible != false) {
        output.WriteRawTag(80);
        output.WriteBool(Preemptible);
      }
      accelerators_.WriteTo(output, _repeated_accelerators_codec);
      if (DiskType.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(DiskType);
      }
      if (MinCpuPlatform.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(MinCpuPlatform);
      }
      taints_.WriteTo(output, _repeated_taints_codec);
      if (shieldedInstanceConfig_ != null) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(ShieldedInstanceConfig);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MachineType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MachineType);
      }
      if (DiskSizeGb != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DiskSizeGb);
      }
      size += oauthScopes_.CalculateSize(_repeated_oauthScopes_codec);
      if (ServiceAccount.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServiceAccount);
      }
      size += metadata_.CalculateSize(_map_metadata_codec);
      if (ImageType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ImageType);
      }
      size += labels_.CalculateSize(_map_labels_codec);
      if (LocalSsdCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LocalSsdCount);
      }
      size += tags_.CalculateSize(_repeated_tags_codec);
      if (Preemptible != false) {
        size += 1 + 1;
      }
      size += accelerators_.CalculateSize(_repeated_accelerators_codec);
      if (DiskType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DiskType);
      }
      if (MinCpuPlatform.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MinCpuPlatform);
      }
      size += taints_.CalculateSize(_repeated_taints_codec);
      if (shieldedInstanceConfig_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ShieldedInstanceConfig);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NodeConfig other) {
      if (other == null) {
        return;
      }
      if (other.MachineType.Length != 0) {
        MachineType = other.MachineType;
      }
      if (other.DiskSizeGb != 0) {
        DiskSizeGb = other.DiskSizeGb;
      }
      oauthScopes_.Add(other.oauthScopes_);
      if (other.ServiceAccount.Length != 0) {
        ServiceAccount = other.ServiceAccount;
      }
      metadata_.Add(other.metadata_);
      if (other.ImageType.Length != 0) {
        ImageType = other.ImageType;
      }
      labels_.Add(other.labels_);
      if (other.LocalSsdCount != 0) {
        LocalSsdCount = other.LocalSsdCount;
      }
      tags_.Add(other.tags_);
      if (other.Preemptible != false) {
        Preemptible = other.Preemptible;
      }
      accelerators_.Add(other.accelerators_);
      if (other.DiskType.Length != 0) {
        DiskType = other.DiskType;
      }
      if (other.MinCpuPlatform.Length != 0) {
        MinCpuPlatform = other.MinCpuPlatform;
      }
      taints_.Add(other.taints_);
      if (other.shieldedInstanceConfig_ != null) {
        if (shieldedInstanceConfig_ == null) {
          ShieldedInstanceConfig = new global::Google.Cloud.Container.V1.ShieldedInstanceConfig();
        }
        ShieldedInstanceConfig.MergeFrom(other.ShieldedInstanceConfig);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            MachineType = input.ReadString();
            break;
          }
          case 16: {
            DiskSizeGb = input.ReadInt32();
            break;
          }
          case 26: {
            oauthScopes_.AddEntriesFrom(input, _repeated_oauthScopes_codec);
            break;
          }
          case 34: {
            metadata_.AddEntriesFrom(input, _map_metadata_codec);
            break;
          }
          case 42: {
            ImageType = input.ReadString();
            break;
          }
          case 50: {
            labels_.AddEntriesFrom(input, _map_labels_codec);
            break;
          }
          case 56: {
            LocalSsdCount = input.ReadInt32();
            break;
          }
          case 66: {
            tags_.AddEntriesFrom(input, _repeated_tags_codec);
            break;
          }
          case 74: {
            ServiceAccount = input.ReadString();
            break;
          }
          case 80: {
            Preemptible = input.ReadBool();
            break;
          }
          case 90: {
            accelerators_.AddEntriesFrom(input, _repeated_accelerators_codec);
            break;
          }
          case 98: {
            DiskType = input.ReadString();
            break;
          }
          case 106: {
            MinCpuPlatform = input.ReadString();
            break;
          }
          case 122: {
            taints_.AddEntriesFrom(input, _repeated_taints_codec);
            break;
          }
          case 162: {
            if (shieldedInstanceConfig_ == null) {
              ShieldedInstanceConfig = new global::Google.Cloud.Container.V1.ShieldedInstanceConfig();
            }
            input.ReadMessage(ShieldedInstanceConfig);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// A set of Shielded Instance options.
  /// </summary>
  public sealed partial class ShieldedInstanceConfig : pb::IMessage<ShieldedInstanceConfig> {
    private static readonly pb::MessageParser<ShieldedInstanceConfig> _parser = new pb::MessageParser<ShieldedInstanceConfig>(() => new ShieldedInstanceConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ShieldedInstanceConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShieldedInstanceConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShieldedInstanceConfig(ShieldedInstanceConfig other) : this() {
      enableSecureBoot_ = other.enableSecureBoot_;
      enableIntegrityMonitoring_ = other.enableIntegrityMonitoring_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShieldedInstanceConfig Clone() {
      return new ShieldedInstanceConfig(this);
    }

    /// <summary>Field number for the "enable_secure_boot" field.</summary>
    public const int EnableSecureBootFieldNumber = 1;
    private bool enableSecureBoot_;
    /// <summary>
    /// Defines whether the instance has Secure Boot enabled.
    ///
    /// Secure Boot helps ensure that the system only runs authentic software by
    /// verifying the digital signature of all boot components, and halting the
    /// boot process if signature verification fails.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool EnableSecureBoot {
      get { return enableSecureBoot_; }
      set {
        enableSecureBoot_ = value;
      }
    }

    /// <summary>Field number for the "enable_integrity_monitoring" field.</summary>
    public const int EnableIntegrityMonitoringFieldNumber = 2;
    private bool enableIntegrityMonitoring_;
    /// <summary>
    /// Defines whether the instance has integrity monitoring enabled.
    ///
    /// Enables monitoring and attestation of the boot integrity of the instance.
    /// The attestation is performed against the integrity policy baseline. This
    /// baseline is initially derived from the implicitly trusted boot image when
    /// the instance is created.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool EnableIntegrityMonitoring {
      get { return enableIntegrityMonitoring_; }
      set {
        enableIntegrityMonitoring_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ShieldedInstanceConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ShieldedInstanceConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EnableSecureBoot != other.EnableSecureBoot) return false;
      if (EnableIntegrityMonitoring != other.EnableIntegrityMonitoring) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (EnableSecureBoot != false) hash ^= EnableSecureBoot.GetHashCode();
      if (EnableIntegrityMonitoring != false) hash ^= EnableIntegrityMonitoring.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (EnableSecureBoot != false) {
        output.WriteRawTag(8);
        output.WriteBool(EnableSecureBoot);
      }
      if (EnableIntegrityMonitoring != false) {
        output.WriteRawTag(16);
        output.WriteBool(EnableIntegrityMonitoring);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (EnableSecureBoot != false) {
        size += 1 + 1;
      }
      if (EnableIntegrityMonitoring != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ShieldedInstanceConfig other) {
      if (other == null) {
        return;
      }
      if (other.EnableSecureBoot != false) {
        EnableSecureBoot = other.EnableSecureBoot;
      }
      if (other.EnableIntegrityMonitoring != false) {
        EnableIntegrityMonitoring = other.EnableIntegrityMonitoring;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            EnableSecureBoot = input.ReadBool();
            break;
          }
          case 16: {
            EnableIntegrityMonitoring = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Kubernetes taint is comprised of three fields: key, value, and effect. Effect
  /// can only be one of three types:  NoSchedule, PreferNoSchedule or NoExecute.
  ///
  /// For more information, including usage and the valid values, see:
  /// https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  /// </summary>
  public sealed partial class NodeTaint : pb::IMessage<NodeTaint> {
    private static readonly pb::MessageParser<NodeTaint> _parser = new pb::MessageParser<NodeTaint>(() => new NodeTaint());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NodeTaint> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NodeTaint() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NodeTaint(NodeTaint other) : this() {
      key_ = other.key_;
      value_ = other.value_;
      effect_ = other.effect_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NodeTaint Clone() {
      return new NodeTaint(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private string key_ = "";
    /// <summary>
    /// Key for taint.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Key {
      get { return key_; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private string value_ = "";
    /// <summary>
    /// Value for taint.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "effect" field.</summary>
    public const int EffectFieldNumber = 3;
    private global::Google.Cloud.Container.V1.NodeTaint.Types.Effect effect_ = 0;
    /// <summary>
    /// Effect for taint.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.NodeTaint.Types.Effect Effect {
      get { return effect_; }
      set {
        effect_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NodeTaint);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NodeTaint other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Key != other.Key) return false;
      if (Value != other.Value) return false;
      if (Effect != other.Effect) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Key.Length != 0) hash ^= Key.GetHashCode();
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      if (Effect != 0) hash ^= Effect.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Key.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Key);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Value);
      }
      if (Effect != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Effect);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Key.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
      }
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      if (Effect != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Effect);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NodeTaint other) {
      if (other == null) {
        return;
      }
      if (other.Key.Length != 0) {
        Key = other.Key;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
      if (other.Effect != 0) {
        Effect = other.Effect;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Key = input.ReadString();
            break;
          }
          case 18: {
            Value = input.ReadString();
            break;
          }
          case 24: {
            Effect = (global::Google.Cloud.Container.V1.NodeTaint.Types.Effect) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the NodeTaint message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Possible values for Effect in taint.
      /// </summary>
      public enum Effect {
        /// <summary>
        /// Not set
        /// </summary>
        [pbr::OriginalName("EFFECT_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// NoSchedule
        /// </summary>
        [pbr::OriginalName("NO_SCHEDULE")] NoSchedule = 1,
        /// <summary>
        /// PreferNoSchedule
        /// </summary>
        [pbr::OriginalName("PREFER_NO_SCHEDULE")] PreferNoSchedule = 2,
        /// <summary>
        /// NoExecute
        /// </summary>
        [pbr::OriginalName("NO_EXECUTE")] NoExecute = 3,
      }

    }
    #endregion

  }

  /// <summary>
  /// The authentication information for accessing the master endpoint.
  /// Authentication can be done using HTTP basic auth or using client
  /// certificates.
  /// </summary>
  public sealed partial class MasterAuth : pb::IMessage<MasterAuth> {
    private static readonly pb::MessageParser<MasterAuth> _parser = new pb::MessageParser<MasterAuth>(() => new MasterAuth());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MasterAuth> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MasterAuth() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MasterAuth(MasterAuth other) : this() {
      username_ = other.username_;
      password_ = other.password_;
      clientCertificateConfig_ = other.clientCertificateConfig_ != null ? other.clientCertificateConfig_.Clone() : null;
      clusterCaCertificate_ = other.clusterCaCertificate_;
      clientCertificate_ = other.clientCertificate_;
      clientKey_ = other.clientKey_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MasterAuth Clone() {
      return new MasterAuth(this);
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 1;
    private string username_ = "";
    /// <summary>
    /// The username to use for HTTP basic authentication to the master endpoint.
    /// For clusters v1.6.0 and later, basic authentication can be disabled by
    /// leaving username unspecified (or setting it to the empty string).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 2;
    private string password_ = "";
    /// <summary>
    /// The password to use for HTTP basic authentication to the master endpoint.
    /// Because the master endpoint is open to the Internet, you should create a
    /// strong password.  If a password is provided for cluster creation, username
    /// must be non-empty.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "client_certificate_config" field.</summary>
    public const int ClientCertificateConfigFieldNumber = 3;
    private global::Google.Cloud.Container.V1.ClientCertificateConfig clientCertificateConfig_;
    /// <summary>
    /// Configuration for client certificate authentication on the cluster. For
    /// clusters before v1.12, if no configuration is specified, a client
    /// certificate is issued.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.ClientCertificateConfig ClientCertificateConfig {
      get { return clientCertificateConfig_; }
      set {
        clientCertificateConfig_ = value;
      }
    }

    /// <summary>Field number for the "cluster_ca_certificate" field.</summary>
    public const int ClusterCaCertificateFieldNumber = 100;
    private string clusterCaCertificate_ = "";
    /// <summary>
    /// [Output only] Base64-encoded public certificate that is the root of
    /// trust for the cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterCaCertificate {
      get { return clusterCaCertificate_; }
      set {
        clusterCaCertificate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "client_certificate" field.</summary>
    public const int ClientCertificateFieldNumber = 101;
    private string clientCertificate_ = "";
    /// <summary>
    /// [Output only] Base64-encoded public certificate used by clients to
    /// authenticate to the cluster endpoint.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClientCertificate {
      get { return clientCertificate_; }
      set {
        clientCertificate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "client_key" field.</summary>
    public const int ClientKeyFieldNumber = 102;
    private string clientKey_ = "";
    /// <summary>
    /// [Output only] Base64-encoded private key used by clients to authenticate
    /// to the cluster endpoint.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClientKey {
      get { return clientKey_; }
      set {
        clientKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MasterAuth);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MasterAuth other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Username != other.Username) return false;
      if (Password != other.Password) return false;
      if (!object.Equals(ClientCertificateConfig, other.ClientCertificateConfig)) return false;
      if (ClusterCaCertificate != other.ClusterCaCertificate) return false;
      if (ClientCertificate != other.ClientCertificate) return false;
      if (ClientKey != other.ClientKey) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (clientCertificateConfig_ != null) hash ^= ClientCertificateConfig.GetHashCode();
      if (ClusterCaCertificate.Length != 0) hash ^= ClusterCaCertificate.GetHashCode();
      if (ClientCertificate.Length != 0) hash ^= ClientCertificate.GetHashCode();
      if (ClientKey.Length != 0) hash ^= ClientKey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Username.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Username);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Password);
      }
      if (clientCertificateConfig_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ClientCertificateConfig);
      }
      if (ClusterCaCertificate.Length != 0) {
        output.WriteRawTag(162, 6);
        output.WriteString(ClusterCaCertificate);
      }
      if (ClientCertificate.Length != 0) {
        output.WriteRawTag(170, 6);
        output.WriteString(ClientCertificate);
      }
      if (ClientKey.Length != 0) {
        output.WriteRawTag(178, 6);
        output.WriteString(ClientKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (clientCertificateConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ClientCertificateConfig);
      }
      if (ClusterCaCertificate.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ClusterCaCertificate);
      }
      if (ClientCertificate.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ClientCertificate);
      }
      if (ClientKey.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ClientKey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MasterAuth other) {
      if (other == null) {
        return;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      if (other.clientCertificateConfig_ != null) {
        if (clientCertificateConfig_ == null) {
          ClientCertificateConfig = new global::Google.Cloud.Container.V1.ClientCertificateConfig();
        }
        ClientCertificateConfig.MergeFrom(other.ClientCertificateConfig);
      }
      if (other.ClusterCaCertificate.Length != 0) {
        ClusterCaCertificate = other.ClusterCaCertificate;
      }
      if (other.ClientCertificate.Length != 0) {
        ClientCertificate = other.ClientCertificate;
      }
      if (other.ClientKey.Length != 0) {
        ClientKey = other.ClientKey;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Username = input.ReadString();
            break;
          }
          case 18: {
            Password = input.ReadString();
            break;
          }
          case 26: {
            if (clientCertificateConfig_ == null) {
              ClientCertificateConfig = new global::Google.Cloud.Container.V1.ClientCertificateConfig();
            }
            input.ReadMessage(ClientCertificateConfig);
            break;
          }
          case 802: {
            ClusterCaCertificate = input.ReadString();
            break;
          }
          case 810: {
            ClientCertificate = input.ReadString();
            break;
          }
          case 818: {
            ClientKey = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Configuration for client certificates on the cluster.
  /// </summary>
  public sealed partial class ClientCertificateConfig : pb::IMessage<ClientCertificateConfig> {
    private static readonly pb::MessageParser<ClientCertificateConfig> _parser = new pb::MessageParser<ClientCertificateConfig>(() => new ClientCertificateConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClientCertificateConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientCertificateConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientCertificateConfig(ClientCertificateConfig other) : this() {
      issueClientCertificate_ = other.issueClientCertificate_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientCertificateConfig Clone() {
      return new ClientCertificateConfig(this);
    }

    /// <summary>Field number for the "issue_client_certificate" field.</summary>
    public const int IssueClientCertificateFieldNumber = 1;
    private bool issueClientCertificate_;
    /// <summary>
    /// Issue a client certificate.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IssueClientCertificate {
      get { return issueClientCertificate_; }
      set {
        issueClientCertificate_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClientCertificateConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClientCertificateConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IssueClientCertificate != other.IssueClientCertificate) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IssueClientCertificate != false) hash ^= IssueClientCertificate.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IssueClientCertificate != false) {
        output.WriteRawTag(8);
        output.WriteBool(IssueClientCertificate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IssueClientCertificate != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClientCertificateConfig other) {
      if (other == null) {
        return;
      }
      if (other.IssueClientCertificate != false) {
        IssueClientCertificate = other.IssueClientCertificate;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IssueClientCertificate = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Configuration for the addons that can be automatically spun up in the
  /// cluster, enabling additional functionality.
  /// </summary>
  public sealed partial class AddonsConfig : pb::IMessage<AddonsConfig> {
    private static readonly pb::MessageParser<AddonsConfig> _parser = new pb::MessageParser<AddonsConfig>(() => new AddonsConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddonsConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddonsConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddonsConfig(AddonsConfig other) : this() {
      httpLoadBalancing_ = other.httpLoadBalancing_ != null ? other.httpLoadBalancing_.Clone() : null;
      horizontalPodAutoscaling_ = other.horizontalPodAutoscaling_ != null ? other.horizontalPodAutoscaling_.Clone() : null;
      kubernetesDashboard_ = other.kubernetesDashboard_ != null ? other.kubernetesDashboard_.Clone() : null;
      networkPolicyConfig_ = other.networkPolicyConfig_ != null ? other.networkPolicyConfig_.Clone() : null;
      cloudRunConfig_ = other.cloudRunConfig_ != null ? other.cloudRunConfig_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddonsConfig Clone() {
      return new AddonsConfig(this);
    }

    /// <summary>Field number for the "http_load_balancing" field.</summary>
    public const int HttpLoadBalancingFieldNumber = 1;
    private global::Google.Cloud.Container.V1.HttpLoadBalancing httpLoadBalancing_;
    /// <summary>
    /// Configuration for the HTTP (L7) load balancing controller addon, which
    /// makes it easy to set up HTTP load balancers for services in a cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.HttpLoadBalancing HttpLoadBalancing {
      get { return httpLoadBalancing_; }
      set {
        httpLoadBalancing_ = value;
      }
    }

    /// <summary>Field number for the "horizontal_pod_autoscaling" field.</summary>
    public const int HorizontalPodAutoscalingFieldNumber = 2;
    private global::Google.Cloud.Container.V1.HorizontalPodAutoscaling horizontalPodAutoscaling_;
    /// <summary>
    /// Configuration for the horizontal pod autoscaling feature, which
    /// increases or decreases the number of replica pods a replication controller
    /// has based on the resource usage of the existing pods.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.HorizontalPodAutoscaling HorizontalPodAutoscaling {
      get { return horizontalPodAutoscaling_; }
      set {
        horizontalPodAutoscaling_ = value;
      }
    }

    /// <summary>Field number for the "kubernetes_dashboard" field.</summary>
    public const int KubernetesDashboardFieldNumber = 3;
    private global::Google.Cloud.Container.V1.KubernetesDashboard kubernetesDashboard_;
    /// <summary>
    /// Configuration for the Kubernetes Dashboard.
    /// This addon is deprecated, and will be disabled in 1.15. It is recommended
    /// to use the Cloud Console to manage and monitor your Kubernetes clusters,
    /// workloads and applications. For more information, see:
    /// https://cloud.google.com/kubernetes-engine/docs/concepts/dashboards
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.KubernetesDashboard KubernetesDashboard {
      get { return kubernetesDashboard_; }
      set {
        kubernetesDashboard_ = value;
      }
    }

    /// <summary>Field number for the "network_policy_config" field.</summary>
    public const int NetworkPolicyConfigFieldNumber = 4;
    private global::Google.Cloud.Container.V1.NetworkPolicyConfig networkPolicyConfig_;
    /// <summary>
    /// Configuration for NetworkPolicy. This only tracks whether the addon
    /// is enabled or not on the Master, it does not track whether network policy
    /// is enabled for the nodes.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.NetworkPolicyConfig NetworkPolicyConfig {
      get { return networkPolicyConfig_; }
      set {
        networkPolicyConfig_ = value;
      }
    }

    /// <summary>Field number for the "cloud_run_config" field.</summary>
    public const int CloudRunConfigFieldNumber = 7;
    private global::Google.Cloud.Container.V1.CloudRunConfig cloudRunConfig_;
    /// <summary>
    /// Configuration for the Cloud Run addon, which allows the user to use a
    /// managed Knative service.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.CloudRunConfig CloudRunConfig {
      get { return cloudRunConfig_; }
      set {
        cloudRunConfig_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddonsConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddonsConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(HttpLoadBalancing, other.HttpLoadBalancing)) return false;
      if (!object.Equals(HorizontalPodAutoscaling, other.HorizontalPodAutoscaling)) return false;
      if (!object.Equals(KubernetesDashboard, other.KubernetesDashboard)) return false;
      if (!object.Equals(NetworkPolicyConfig, other.NetworkPolicyConfig)) return false;
      if (!object.Equals(CloudRunConfig, other.CloudRunConfig)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (httpLoadBalancing_ != null) hash ^= HttpLoadBalancing.GetHashCode();
      if (horizontalPodAutoscaling_ != null) hash ^= HorizontalPodAutoscaling.GetHashCode();
      if (kubernetesDashboard_ != null) hash ^= KubernetesDashboard.GetHashCode();
      if (networkPolicyConfig_ != null) hash ^= NetworkPolicyConfig.GetHashCode();
      if (cloudRunConfig_ != null) hash ^= CloudRunConfig.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (httpLoadBalancing_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(HttpLoadBalancing);
      }
      if (horizontalPodAutoscaling_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(HorizontalPodAutoscaling);
      }
      if (kubernetesDashboard_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(KubernetesDashboard);
      }
      if (networkPolicyConfig_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(NetworkPolicyConfig);
      }
      if (cloudRunConfig_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(CloudRunConfig);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (httpLoadBalancing_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HttpLoadBalancing);
      }
      if (horizontalPodAutoscaling_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HorizontalPodAutoscaling);
      }
      if (kubernetesDashboard_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(KubernetesDashboard);
      }
      if (networkPolicyConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NetworkPolicyConfig);
      }
      if (cloudRunConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CloudRunConfig);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddonsConfig other) {
      if (other == null) {
        return;
      }
      if (other.httpLoadBalancing_ != null) {
        if (httpLoadBalancing_ == null) {
          HttpLoadBalancing = new global::Google.Cloud.Container.V1.HttpLoadBalancing();
        }
        HttpLoadBalancing.MergeFrom(other.HttpLoadBalancing);
      }
      if (other.horizontalPodAutoscaling_ != null) {
        if (horizontalPodAutoscaling_ == null) {
          HorizontalPodAutoscaling = new global::Google.Cloud.Container.V1.HorizontalPodAutoscaling();
        }
        HorizontalPodAutoscaling.MergeFrom(other.HorizontalPodAutoscaling);
      }
      if (other.kubernetesDashboard_ != null) {
        if (kubernetesDashboard_ == null) {
          KubernetesDashboard = new global::Google.Cloud.Container.V1.KubernetesDashboard();
        }
        KubernetesDashboard.MergeFrom(other.KubernetesDashboard);
      }
      if (other.networkPolicyConfig_ != null) {
        if (networkPolicyConfig_ == null) {
          NetworkPolicyConfig = new global::Google.Cloud.Container.V1.NetworkPolicyConfig();
        }
        NetworkPolicyConfig.MergeFrom(other.NetworkPolicyConfig);
      }
      if (other.cloudRunConfig_ != null) {
        if (cloudRunConfig_ == null) {
          CloudRunConfig = new global::Google.Cloud.Container.V1.CloudRunConfig();
        }
        CloudRunConfig.MergeFrom(other.CloudRunConfig);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (httpLoadBalancing_ == null) {
              HttpLoadBalancing = new global::Google.Cloud.Container.V1.HttpLoadBalancing();
            }
            input.ReadMessage(HttpLoadBalancing);
            break;
          }
          case 18: {
            if (horizontalPodAutoscaling_ == null) {
              HorizontalPodAutoscaling = new global::Google.Cloud.Container.V1.HorizontalPodAutoscaling();
            }
            input.ReadMessage(HorizontalPodAutoscaling);
            break;
          }
          case 26: {
            if (kubernetesDashboard_ == null) {
              KubernetesDashboard = new global::Google.Cloud.Container.V1.KubernetesDashboard();
            }
            input.ReadMessage(KubernetesDashboard);
            break;
          }
          case 34: {
            if (networkPolicyConfig_ == null) {
              NetworkPolicyConfig = new global::Google.Cloud.Container.V1.NetworkPolicyConfig();
            }
            input.ReadMessage(NetworkPolicyConfig);
            break;
          }
          case 58: {
            if (cloudRunConfig_ == null) {
              CloudRunConfig = new global::Google.Cloud.Container.V1.CloudRunConfig();
            }
            input.ReadMessage(CloudRunConfig);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Configuration options for the HTTP (L7) load balancing controller addon,
  /// which makes it easy to set up HTTP load balancers for services in a cluster.
  /// </summary>
  public sealed partial class HttpLoadBalancing : pb::IMessage<HttpLoadBalancing> {
    private static readonly pb::MessageParser<HttpLoadBalancing> _parser = new pb::MessageParser<HttpLoadBalancing>(() => new HttpLoadBalancing());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HttpLoadBalancing> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HttpLoadBalancing() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HttpLoadBalancing(HttpLoadBalancing other) : this() {
      disabled_ = other.disabled_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HttpLoadBalancing Clone() {
      return new HttpLoadBalancing(this);
    }

    /// <summary>Field number for the "disabled" field.</summary>
    public const int DisabledFieldNumber = 1;
    private bool disabled_;
    /// <summary>
    /// Whether the HTTP Load Balancing controller is enabled in the cluster.
    /// When enabled, it runs a small pod in the cluster that manages the load
    /// balancers.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Disabled {
      get { return disabled_; }
      set {
        disabled_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HttpLoadBalancing);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HttpLoadBalancing other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Disabled != other.Disabled) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Disabled != false) hash ^= Disabled.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Disabled != false) {
        output.WriteRawTag(8);
        output.WriteBool(Disabled);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Disabled != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HttpLoadBalancing other) {
      if (other == null) {
        return;
      }
      if (other.Disabled != false) {
        Disabled = other.Disabled;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Disabled = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Configuration options for the horizontal pod autoscaling feature, which
  /// increases or decreases the number of replica pods a replication controller
  /// has based on the resource usage of the existing pods.
  /// </summary>
  public sealed partial class HorizontalPodAutoscaling : pb::IMessage<HorizontalPodAutoscaling> {
    private static readonly pb::MessageParser<HorizontalPodAutoscaling> _parser = new pb::MessageParser<HorizontalPodAutoscaling>(() => new HorizontalPodAutoscaling());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HorizontalPodAutoscaling> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HorizontalPodAutoscaling() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HorizontalPodAutoscaling(HorizontalPodAutoscaling other) : this() {
      disabled_ = other.disabled_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HorizontalPodAutoscaling Clone() {
      return new HorizontalPodAutoscaling(this);
    }

    /// <summary>Field number for the "disabled" field.</summary>
    public const int DisabledFieldNumber = 1;
    private bool disabled_;
    /// <summary>
    /// Whether the Horizontal Pod Autoscaling feature is enabled in the cluster.
    /// When enabled, it ensures that a Heapster pod is running in the cluster,
    /// which is also used by the Cloud Monitoring service.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Disabled {
      get { return disabled_; }
      set {
        disabled_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HorizontalPodAutoscaling);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HorizontalPodAutoscaling other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Disabled != other.Disabled) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Disabled != false) hash ^= Disabled.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Disabled != false) {
        output.WriteRawTag(8);
        output.WriteBool(Disabled);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Disabled != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HorizontalPodAutoscaling other) {
      if (other == null) {
        return;
      }
      if (other.Disabled != false) {
        Disabled = other.Disabled;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Disabled = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Configuration for the Kubernetes Dashboard.
  /// </summary>
  public sealed partial class KubernetesDashboard : pb::IMessage<KubernetesDashboard> {
    private static readonly pb::MessageParser<KubernetesDashboard> _parser = new pb::MessageParser<KubernetesDashboard>(() => new KubernetesDashboard());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<KubernetesDashboard> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KubernetesDashboard() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KubernetesDashboard(KubernetesDashboard other) : this() {
      disabled_ = other.disabled_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KubernetesDashboard Clone() {
      return new KubernetesDashboard(this);
    }

    /// <summary>Field number for the "disabled" field.</summary>
    public const int DisabledFieldNumber = 1;
    private bool disabled_;
    /// <summary>
    /// Whether the Kubernetes Dashboard is enabled for this cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Disabled {
      get { return disabled_; }
      set {
        disabled_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as KubernetesDashboard);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(KubernetesDashboard other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Disabled != other.Disabled) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Disabled != false) hash ^= Disabled.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Disabled != false) {
        output.WriteRawTag(8);
        output.WriteBool(Disabled);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Disabled != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(KubernetesDashboard other) {
      if (other == null) {
        return;
      }
      if (other.Disabled != false) {
        Disabled = other.Disabled;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Disabled = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Configuration for NetworkPolicy. This only tracks whether the addon
  /// is enabled or not on the Master, it does not track whether network policy
  /// is enabled for the nodes.
  /// </summary>
  public sealed partial class NetworkPolicyConfig : pb::IMessage<NetworkPolicyConfig> {
    private static readonly pb::MessageParser<NetworkPolicyConfig> _parser = new pb::MessageParser<NetworkPolicyConfig>(() => new NetworkPolicyConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NetworkPolicyConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetworkPolicyConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetworkPolicyConfig(NetworkPolicyConfig other) : this() {
      disabled_ = other.disabled_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetworkPolicyConfig Clone() {
      return new NetworkPolicyConfig(this);
    }

    /// <summary>Field number for the "disabled" field.</summary>
    public const int DisabledFieldNumber = 1;
    private bool disabled_;
    /// <summary>
    /// Whether NetworkPolicy is enabled for this cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Disabled {
      get { return disabled_; }
      set {
        disabled_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NetworkPolicyConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NetworkPolicyConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Disabled != other.Disabled) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Disabled != false) hash ^= Disabled.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Disabled != false) {
        output.WriteRawTag(8);
        output.WriteBool(Disabled);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Disabled != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NetworkPolicyConfig other) {
      if (other == null) {
        return;
      }
      if (other.Disabled != false) {
        Disabled = other.Disabled;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Disabled = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Configuration options for private clusters.
  /// </summary>
  public sealed partial class PrivateClusterConfig : pb::IMessage<PrivateClusterConfig> {
    private static readonly pb::MessageParser<PrivateClusterConfig> _parser = new pb::MessageParser<PrivateClusterConfig>(() => new PrivateClusterConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PrivateClusterConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PrivateClusterConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PrivateClusterConfig(PrivateClusterConfig other) : this() {
      enablePrivateNodes_ = other.enablePrivateNodes_;
      enablePrivateEndpoint_ = other.enablePrivateEndpoint_;
      masterIpv4CidrBlock_ = other.masterIpv4CidrBlock_;
      privateEndpoint_ = other.privateEndpoint_;
      publicEndpoint_ = other.publicEndpoint_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PrivateClusterConfig Clone() {
      return new PrivateClusterConfig(this);
    }

    /// <summary>Field number for the "enable_private_nodes" field.</summary>
    public const int EnablePrivateNodesFieldNumber = 1;
    private bool enablePrivateNodes_;
    /// <summary>
    /// Whether nodes have internal IP addresses only. If enabled, all nodes are
    /// given only RFC 1918 private addresses and communicate with the master via
    /// private networking.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool EnablePrivateNodes {
      get { return enablePrivateNodes_; }
      set {
        enablePrivateNodes_ = value;
      }
    }

    /// <summary>Field number for the "enable_private_endpoint" field.</summary>
    public const int EnablePrivateEndpointFieldNumber = 2;
    private bool enablePrivateEndpoint_;
    /// <summary>
    /// Whether the master's internal IP address is used as the cluster endpoint.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool EnablePrivateEndpoint {
      get { return enablePrivateEndpoint_; }
      set {
        enablePrivateEndpoint_ = value;
      }
    }

    /// <summary>Field number for the "master_ipv4_cidr_block" field.</summary>
    public const int MasterIpv4CidrBlockFieldNumber = 3;
    private string masterIpv4CidrBlock_ = "";
    /// <summary>
    /// The IP range in CIDR notation to use for the hosted master network. This
    /// range will be used for assigning internal IP addresses to the master or
    /// set of masters, as well as the ILB VIP. This range must not overlap with
    /// any other ranges in use within the cluster's network.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MasterIpv4CidrBlock {
      get { return masterIpv4CidrBlock_; }
      set {
        masterIpv4CidrBlock_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "private_endpoint" field.</summary>
    public const int PrivateEndpointFieldNumber = 4;
    private string privateEndpoint_ = "";
    /// <summary>
    /// Output only. The internal IP address of this cluster's master endpoint.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PrivateEndpoint {
      get { return privateEndpoint_; }
      set {
        privateEndpoint_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "public_endpoint" field.</summary>
    public const int PublicEndpointFieldNumber = 5;
    private string publicEndpoint_ = "";
    /// <summary>
    /// Output only. The external IP address of this cluster's master endpoint.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PublicEndpoint {
      get { return publicEndpoint_; }
      set {
        publicEndpoint_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PrivateClusterConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PrivateClusterConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EnablePrivateNodes != other.EnablePrivateNodes) return false;
      if (EnablePrivateEndpoint != other.EnablePrivateEndpoint) return false;
      if (MasterIpv4CidrBlock != other.MasterIpv4CidrBlock) return false;
      if (PrivateEndpoint != other.PrivateEndpoint) return false;
      if (PublicEndpoint != other.PublicEndpoint) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (EnablePrivateNodes != false) hash ^= EnablePrivateNodes.GetHashCode();
      if (EnablePrivateEndpoint != false) hash ^= EnablePrivateEndpoint.GetHashCode();
      if (MasterIpv4CidrBlock.Length != 0) hash ^= MasterIpv4CidrBlock.GetHashCode();
      if (PrivateEndpoint.Length != 0) hash ^= PrivateEndpoint.GetHashCode();
      if (PublicEndpoint.Length != 0) hash ^= PublicEndpoint.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (EnablePrivateNodes != false) {
        output.WriteRawTag(8);
        output.WriteBool(EnablePrivateNodes);
      }
      if (EnablePrivateEndpoint != false) {
        output.WriteRawTag(16);
        output.WriteBool(EnablePrivateEndpoint);
      }
      if (MasterIpv4CidrBlock.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(MasterIpv4CidrBlock);
      }
      if (PrivateEndpoint.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PrivateEndpoint);
      }
      if (PublicEndpoint.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(PublicEndpoint);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (EnablePrivateNodes != false) {
        size += 1 + 1;
      }
      if (EnablePrivateEndpoint != false) {
        size += 1 + 1;
      }
      if (MasterIpv4CidrBlock.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MasterIpv4CidrBlock);
      }
      if (PrivateEndpoint.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PrivateEndpoint);
      }
      if (PublicEndpoint.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PublicEndpoint);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PrivateClusterConfig other) {
      if (other == null) {
        return;
      }
      if (other.EnablePrivateNodes != false) {
        EnablePrivateNodes = other.EnablePrivateNodes;
      }
      if (other.EnablePrivateEndpoint != false) {
        EnablePrivateEndpoint = other.EnablePrivateEndpoint;
      }
      if (other.MasterIpv4CidrBlock.Length != 0) {
        MasterIpv4CidrBlock = other.MasterIpv4CidrBlock;
      }
      if (other.PrivateEndpoint.Length != 0) {
        PrivateEndpoint = other.PrivateEndpoint;
      }
      if (other.PublicEndpoint.Length != 0) {
        PublicEndpoint = other.PublicEndpoint;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            EnablePrivateNodes = input.ReadBool();
            break;
          }
          case 16: {
            EnablePrivateEndpoint = input.ReadBool();
            break;
          }
          case 26: {
            MasterIpv4CidrBlock = input.ReadString();
            break;
          }
          case 34: {
            PrivateEndpoint = input.ReadString();
            break;
          }
          case 42: {
            PublicEndpoint = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Configuration for returning group information from authenticators.
  /// </summary>
  public sealed partial class AuthenticatorGroupsConfig : pb::IMessage<AuthenticatorGroupsConfig> {
    private static readonly pb::MessageParser<AuthenticatorGroupsConfig> _parser = new pb::MessageParser<AuthenticatorGroupsConfig>(() => new AuthenticatorGroupsConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AuthenticatorGroupsConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AuthenticatorGroupsConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AuthenticatorGroupsConfig(AuthenticatorGroupsConfig other) : this() {
      enabled_ = other.enabled_;
      securityGroup_ = other.securityGroup_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AuthenticatorGroupsConfig Clone() {
      return new AuthenticatorGroupsConfig(this);
    }

    /// <summary>Field number for the "enabled" field.</summary>
    public const int EnabledFieldNumber = 1;
    private bool enabled_;
    /// <summary>
    /// Whether this cluster should return group membership lookups
    /// during authentication using a group of security groups.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Enabled {
      get { return enabled_; }
      set {
        enabled_ = value;
      }
    }

    /// <summary>Field number for the "security_group" field.</summary>
    public const int SecurityGroupFieldNumber = 2;
    private string securityGroup_ = "";
    /// <summary>
    /// The name of the security group-of-groups to be used. Only relevant
    /// if enabled = true.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SecurityGroup {
      get { return securityGroup_; }
      set {
        securityGroup_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AuthenticatorGroupsConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AuthenticatorGroupsConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Enabled != other.Enabled) return false;
      if (SecurityGroup != other.SecurityGroup) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Enabled != false) hash ^= Enabled.GetHashCode();
      if (SecurityGroup.Length != 0) hash ^= SecurityGroup.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Enabled != false) {
        output.WriteRawTag(8);
        output.WriteBool(Enabled);
      }
      if (SecurityGroup.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SecurityGroup);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Enabled != false) {
        size += 1 + 1;
      }
      if (SecurityGroup.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SecurityGroup);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AuthenticatorGroupsConfig other) {
      if (other == null) {
        return;
      }
      if (other.Enabled != false) {
        Enabled = other.Enabled;
      }
      if (other.SecurityGroup.Length != 0) {
        SecurityGroup = other.SecurityGroup;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Enabled = input.ReadBool();
            break;
          }
          case 18: {
            SecurityGroup = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Configuration options for the Cloud Run feature.
  /// </summary>
  public sealed partial class CloudRunConfig : pb::IMessage<CloudRunConfig> {
    private static readonly pb::MessageParser<CloudRunConfig> _parser = new pb::MessageParser<CloudRunConfig>(() => new CloudRunConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CloudRunConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CloudRunConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CloudRunConfig(CloudRunConfig other) : this() {
      disabled_ = other.disabled_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CloudRunConfig Clone() {
      return new CloudRunConfig(this);
    }

    /// <summary>Field number for the "disabled" field.</summary>
    public const int DisabledFieldNumber = 1;
    private bool disabled_;
    /// <summary>
    /// Whether Cloud Run addon is enabled for this cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Disabled {
      get { return disabled_; }
      set {
        disabled_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CloudRunConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CloudRunConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Disabled != other.Disabled) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Disabled != false) hash ^= Disabled.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Disabled != false) {
        output.WriteRawTag(8);
        output.WriteBool(Disabled);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Disabled != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CloudRunConfig other) {
      if (other == null) {
        return;
      }
      if (other.Disabled != false) {
        Disabled = other.Disabled;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Disabled = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Configuration options for the master authorized networks feature. Enabled
  /// master authorized networks will disallow all external traffic to access
  /// Kubernetes master through HTTPS except traffic from the given CIDR blocks,
  /// Google Compute Engine Public IPs and Google Prod IPs.
  /// </summary>
  public sealed partial class MasterAuthorizedNetworksConfig : pb::IMessage<MasterAuthorizedNetworksConfig> {
    private static readonly pb::MessageParser<MasterAuthorizedNetworksConfig> _parser = new pb::MessageParser<MasterAuthorizedNetworksConfig>(() => new MasterAuthorizedNetworksConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MasterAuthorizedNetworksConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MasterAuthorizedNetworksConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MasterAuthorizedNetworksConfig(MasterAuthorizedNetworksConfig other) : this() {
      enabled_ = other.enabled_;
      cidrBlocks_ = other.cidrBlocks_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MasterAuthorizedNetworksConfig Clone() {
      return new MasterAuthorizedNetworksConfig(this);
    }

    /// <summary>Field number for the "enabled" field.</summary>
    public const int EnabledFieldNumber = 1;
    private bool enabled_;
    /// <summary>
    /// Whether or not master authorized networks is enabled.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Enabled {
      get { return enabled_; }
      set {
        enabled_ = value;
      }
    }

    /// <summary>Field number for the "cidr_blocks" field.</summary>
    public const int CidrBlocksFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Google.Cloud.Container.V1.MasterAuthorizedNetworksConfig.Types.CidrBlock> _repeated_cidrBlocks_codec
        = pb::FieldCodec.ForMessage(18, global::Google.Cloud.Container.V1.MasterAuthorizedNetworksConfig.Types.CidrBlock.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Container.V1.MasterAuthorizedNetworksConfig.Types.CidrBlock> cidrBlocks_ = new pbc::RepeatedField<global::Google.Cloud.Container.V1.MasterAuthorizedNetworksConfig.Types.CidrBlock>();
    /// <summary>
    /// cidr_blocks define up to 50 external networks that could access
    /// Kubernetes master through HTTPS.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Container.V1.MasterAuthorizedNetworksConfig.Types.CidrBlock> CidrBlocks {
      get { return cidrBlocks_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MasterAuthorizedNetworksConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MasterAuthorizedNetworksConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Enabled != other.Enabled) return false;
      if(!cidrBlocks_.Equals(other.cidrBlocks_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Enabled != false) hash ^= Enabled.GetHashCode();
      hash ^= cidrBlocks_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Enabled != false) {
        output.WriteRawTag(8);
        output.WriteBool(Enabled);
      }
      cidrBlocks_.WriteTo(output, _repeated_cidrBlocks_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Enabled != false) {
        size += 1 + 1;
      }
      size += cidrBlocks_.CalculateSize(_repeated_cidrBlocks_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MasterAuthorizedNetworksConfig other) {
      if (other == null) {
        return;
      }
      if (other.Enabled != false) {
        Enabled = other.Enabled;
      }
      cidrBlocks_.Add(other.cidrBlocks_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Enabled = input.ReadBool();
            break;
          }
          case 18: {
            cidrBlocks_.AddEntriesFrom(input, _repeated_cidrBlocks_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the MasterAuthorizedNetworksConfig message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// CidrBlock contains an optional name and one CIDR block.
      /// </summary>
      public sealed partial class CidrBlock : pb::IMessage<CidrBlock> {
        private static readonly pb::MessageParser<CidrBlock> _parser = new pb::MessageParser<CidrBlock>(() => new CidrBlock());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<CidrBlock> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Container.V1.MasterAuthorizedNetworksConfig.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CidrBlock() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CidrBlock(CidrBlock other) : this() {
          displayName_ = other.displayName_;
          cidrBlock_ = other.cidrBlock_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CidrBlock Clone() {
          return new CidrBlock(this);
        }

        /// <summary>Field number for the "display_name" field.</summary>
        public const int DisplayNameFieldNumber = 1;
        private string displayName_ = "";
        /// <summary>
        /// display_name is an optional field for users to identify CIDR blocks.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string DisplayName {
          get { return displayName_; }
          set {
            displayName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "cidr_block" field.</summary>
        public const int CidrBlock_FieldNumber = 2;
        private string cidrBlock_ = "";
        /// <summary>
        /// cidr_block must be specified in CIDR notation.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string CidrBlock_ {
          get { return cidrBlock_; }
          set {
            cidrBlock_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as CidrBlock);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(CidrBlock other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (DisplayName != other.DisplayName) return false;
          if (CidrBlock_ != other.CidrBlock_) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (DisplayName.Length != 0) hash ^= DisplayName.GetHashCode();
          if (CidrBlock_.Length != 0) hash ^= CidrBlock_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (DisplayName.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(DisplayName);
          }
          if (CidrBlock_.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(CidrBlock_);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (DisplayName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayName);
          }
          if (CidrBlock_.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(CidrBlock_);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(CidrBlock other) {
          if (other == null) {
            return;
          }
          if (other.DisplayName.Length != 0) {
            DisplayName = other.DisplayName;
          }
          if (other.CidrBlock_.Length != 0) {
            CidrBlock_ = other.CidrBlock_;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                DisplayName = input.ReadString();
                break;
              }
              case 18: {
                CidrBlock_ = input.ReadString();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  /// <summary>
  /// Configuration for the legacy Attribute Based Access Control authorization
  /// mode.
  /// </summary>
  public sealed partial class LegacyAbac : pb::IMessage<LegacyAbac> {
    private static readonly pb::MessageParser<LegacyAbac> _parser = new pb::MessageParser<LegacyAbac>(() => new LegacyAbac());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LegacyAbac> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LegacyAbac() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LegacyAbac(LegacyAbac other) : this() {
      enabled_ = other.enabled_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LegacyAbac Clone() {
      return new LegacyAbac(this);
    }

    /// <summary>Field number for the "enabled" field.</summary>
    public const int EnabledFieldNumber = 1;
    private bool enabled_;
    /// <summary>
    /// Whether the ABAC authorizer is enabled for this cluster. When enabled,
    /// identities in the system, including service accounts, nodes, and
    /// controllers, will have statically granted permissions beyond those
    /// provided by the RBAC configuration or IAM.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Enabled {
      get { return enabled_; }
      set {
        enabled_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LegacyAbac);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LegacyAbac other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Enabled != other.Enabled) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Enabled != false) hash ^= Enabled.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Enabled != false) {
        output.WriteRawTag(8);
        output.WriteBool(Enabled);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Enabled != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LegacyAbac other) {
      if (other == null) {
        return;
      }
      if (other.Enabled != false) {
        Enabled = other.Enabled;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Enabled = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Configuration options for the NetworkPolicy feature.
  /// https://kubernetes.io/docs/concepts/services-networking/networkpolicies/
  /// </summary>
  public sealed partial class NetworkPolicy : pb::IMessage<NetworkPolicy> {
    private static readonly pb::MessageParser<NetworkPolicy> _parser = new pb::MessageParser<NetworkPolicy>(() => new NetworkPolicy());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NetworkPolicy> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetworkPolicy() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetworkPolicy(NetworkPolicy other) : this() {
      provider_ = other.provider_;
      enabled_ = other.enabled_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetworkPolicy Clone() {
      return new NetworkPolicy(this);
    }

    /// <summary>Field number for the "provider" field.</summary>
    public const int ProviderFieldNumber = 1;
    private global::Google.Cloud.Container.V1.NetworkPolicy.Types.Provider provider_ = 0;
    /// <summary>
    /// The selected network policy provider.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.NetworkPolicy.Types.Provider Provider {
      get { return provider_; }
      set {
        provider_ = value;
      }
    }

    /// <summary>Field number for the "enabled" field.</summary>
    public const int EnabledFieldNumber = 2;
    private bool enabled_;
    /// <summary>
    /// Whether network policy is enabled on the cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Enabled {
      get { return enabled_; }
      set {
        enabled_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NetworkPolicy);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NetworkPolicy other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Provider != other.Provider) return false;
      if (Enabled != other.Enabled) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Provider != 0) hash ^= Provider.GetHashCode();
      if (Enabled != false) hash ^= Enabled.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Provider != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Provider);
      }
      if (Enabled != false) {
        output.WriteRawTag(16);
        output.WriteBool(Enabled);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Provider != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Provider);
      }
      if (Enabled != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NetworkPolicy other) {
      if (other == null) {
        return;
      }
      if (other.Provider != 0) {
        Provider = other.Provider;
      }
      if (other.Enabled != false) {
        Enabled = other.Enabled;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Provider = (global::Google.Cloud.Container.V1.NetworkPolicy.Types.Provider) input.ReadEnum();
            break;
          }
          case 16: {
            Enabled = input.ReadBool();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the NetworkPolicy message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Allowed Network Policy providers.
      /// </summary>
      public enum Provider {
        /// <summary>
        /// Not set
        /// </summary>
        [pbr::OriginalName("PROVIDER_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Tigera (Calico Felix).
        /// </summary>
        [pbr::OriginalName("CALICO")] Calico = 1,
      }

    }
    #endregion

  }

  /// <summary>
  /// Configuration for Binary Authorization.
  /// </summary>
  public sealed partial class BinaryAuthorization : pb::IMessage<BinaryAuthorization> {
    private static readonly pb::MessageParser<BinaryAuthorization> _parser = new pb::MessageParser<BinaryAuthorization>(() => new BinaryAuthorization());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BinaryAuthorization> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BinaryAuthorization() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BinaryAuthorization(BinaryAuthorization other) : this() {
      enabled_ = other.enabled_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BinaryAuthorization Clone() {
      return new BinaryAuthorization(this);
    }

    /// <summary>Field number for the "enabled" field.</summary>
    public const int EnabledFieldNumber = 1;
    private bool enabled_;
    /// <summary>
    /// Enable Binary Authorization for this cluster. If enabled, all container
    /// images will be validated by Binary Authorization.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Enabled {
      get { return enabled_; }
      set {
        enabled_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BinaryAuthorization);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BinaryAuthorization other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Enabled != other.Enabled) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Enabled != false) hash ^= Enabled.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Enabled != false) {
        output.WriteRawTag(8);
        output.WriteBool(Enabled);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Enabled != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BinaryAuthorization other) {
      if (other == null) {
        return;
      }
      if (other.Enabled != false) {
        Enabled = other.Enabled;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Enabled = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Configuration for controlling how IPs are allocated in the cluster.
  /// </summary>
  public sealed partial class IPAllocationPolicy : pb::IMessage<IPAllocationPolicy> {
    private static readonly pb::MessageParser<IPAllocationPolicy> _parser = new pb::MessageParser<IPAllocationPolicy>(() => new IPAllocationPolicy());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IPAllocationPolicy> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IPAllocationPolicy() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IPAllocationPolicy(IPAllocationPolicy other) : this() {
      useIpAliases_ = other.useIpAliases_;
      createSubnetwork_ = other.createSubnetwork_;
      subnetworkName_ = other.subnetworkName_;
      clusterIpv4Cidr_ = other.clusterIpv4Cidr_;
      nodeIpv4Cidr_ = other.nodeIpv4Cidr_;
      servicesIpv4Cidr_ = other.servicesIpv4Cidr_;
      clusterSecondaryRangeName_ = other.clusterSecondaryRangeName_;
      servicesSecondaryRangeName_ = other.servicesSecondaryRangeName_;
      clusterIpv4CidrBlock_ = other.clusterIpv4CidrBlock_;
      nodeIpv4CidrBlock_ = other.nodeIpv4CidrBlock_;
      servicesIpv4CidrBlock_ = other.servicesIpv4CidrBlock_;
      tpuIpv4CidrBlock_ = other.tpuIpv4CidrBlock_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IPAllocationPolicy Clone() {
      return new IPAllocationPolicy(this);
    }

    /// <summary>Field number for the "use_ip_aliases" field.</summary>
    public const int UseIpAliasesFieldNumber = 1;
    private bool useIpAliases_;
    /// <summary>
    /// Whether alias IPs will be used for pod IPs in the cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool UseIpAliases {
      get { return useIpAliases_; }
      set {
        useIpAliases_ = value;
      }
    }

    /// <summary>Field number for the "create_subnetwork" field.</summary>
    public const int CreateSubnetworkFieldNumber = 2;
    private bool createSubnetwork_;
    /// <summary>
    /// Whether a new subnetwork will be created automatically for the cluster.
    ///
    /// This field is only applicable when `use_ip_aliases` is true.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CreateSubnetwork {
      get { return createSubnetwork_; }
      set {
        createSubnetwork_ = value;
      }
    }

    /// <summary>Field number for the "subnetwork_name" field.</summary>
    public const int SubnetworkNameFieldNumber = 3;
    private string subnetworkName_ = "";
    /// <summary>
    /// A custom subnetwork name to be used if `create_subnetwork` is true.  If
    /// this field is empty, then an automatic name will be chosen for the new
    /// subnetwork.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SubnetworkName {
      get { return subnetworkName_; }
      set {
        subnetworkName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cluster_ipv4_cidr" field.</summary>
    public const int ClusterIpv4CidrFieldNumber = 4;
    private string clusterIpv4Cidr_ = "";
    /// <summary>
    /// This field is deprecated, use cluster_ipv4_cidr_block.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterIpv4Cidr {
      get { return clusterIpv4Cidr_; }
      set {
        clusterIpv4Cidr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "node_ipv4_cidr" field.</summary>
    public const int NodeIpv4CidrFieldNumber = 5;
    private string nodeIpv4Cidr_ = "";
    /// <summary>
    /// This field is deprecated, use node_ipv4_cidr_block.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NodeIpv4Cidr {
      get { return nodeIpv4Cidr_; }
      set {
        nodeIpv4Cidr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "services_ipv4_cidr" field.</summary>
    public const int ServicesIpv4CidrFieldNumber = 6;
    private string servicesIpv4Cidr_ = "";
    /// <summary>
    /// This field is deprecated, use services_ipv4_cidr_block.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServicesIpv4Cidr {
      get { return servicesIpv4Cidr_; }
      set {
        servicesIpv4Cidr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cluster_secondary_range_name" field.</summary>
    public const int ClusterSecondaryRangeNameFieldNumber = 7;
    private string clusterSecondaryRangeName_ = "";
    /// <summary>
    /// The name of the secondary range to be used for the cluster CIDR
    /// block.  The secondary range will be used for pod IP
    /// addresses. This must be an existing secondary range associated
    /// with the cluster subnetwork.
    ///
    /// This field is only applicable with use_ip_aliases is true and
    /// create_subnetwork is false.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterSecondaryRangeName {
      get { return clusterSecondaryRangeName_; }
      set {
        clusterSecondaryRangeName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "services_secondary_range_name" field.</summary>
    public const int ServicesSecondaryRangeNameFieldNumber = 8;
    private string servicesSecondaryRangeName_ = "";
    /// <summary>
    /// The name of the secondary range to be used as for the services
    /// CIDR block.  The secondary range will be used for service
    /// ClusterIPs. This must be an existing secondary range associated
    /// with the cluster subnetwork.
    ///
    /// This field is only applicable with use_ip_aliases is true and
    /// create_subnetwork is false.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServicesSecondaryRangeName {
      get { return servicesSecondaryRangeName_; }
      set {
        servicesSecondaryRangeName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cluster_ipv4_cidr_block" field.</summary>
    public const int ClusterIpv4CidrBlockFieldNumber = 9;
    private string clusterIpv4CidrBlock_ = "";
    /// <summary>
    /// The IP address range for the cluster pod IPs. If this field is set, then
    /// `cluster.cluster_ipv4_cidr` must be left blank.
    ///
    /// This field is only applicable when `use_ip_aliases` is true.
    ///
    /// Set to blank to have a range chosen with the default size.
    ///
    /// Set to /netmask (e.g. `/14`) to have a range chosen with a specific
    /// netmask.
    ///
    /// Set to a
    /// [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
    /// notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g.
    /// `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range
    /// to use.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterIpv4CidrBlock {
      get { return clusterIpv4CidrBlock_; }
      set {
        clusterIpv4CidrBlock_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "node_ipv4_cidr_block" field.</summary>
    public const int NodeIpv4CidrBlockFieldNumber = 10;
    private string nodeIpv4CidrBlock_ = "";
    /// <summary>
    /// The IP address range of the instance IPs in this cluster.
    ///
    /// This is applicable only if `create_subnetwork` is true.
    ///
    /// Set to blank to have a range chosen with the default size.
    ///
    /// Set to /netmask (e.g. `/14`) to have a range chosen with a specific
    /// netmask.
    ///
    /// Set to a
    /// [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
    /// notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g.
    /// `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range
    /// to use.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NodeIpv4CidrBlock {
      get { return nodeIpv4CidrBlock_; }
      set {
        nodeIpv4CidrBlock_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "services_ipv4_cidr_block" field.</summary>
    public const int ServicesIpv4CidrBlockFieldNumber = 11;
    private string servicesIpv4CidrBlock_ = "";
    /// <summary>
    /// The IP address range of the services IPs in this cluster. If blank, a range
    /// will be automatically chosen with the default size.
    ///
    /// This field is only applicable when `use_ip_aliases` is true.
    ///
    /// Set to blank to have a range chosen with the default size.
    ///
    /// Set to /netmask (e.g. `/14`) to have a range chosen with a specific
    /// netmask.
    ///
    /// Set to a
    /// [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
    /// notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g.
    /// `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range
    /// to use.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServicesIpv4CidrBlock {
      get { return servicesIpv4CidrBlock_; }
      set {
        servicesIpv4CidrBlock_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tpu_ipv4_cidr_block" field.</summary>
    public const int TpuIpv4CidrBlockFieldNumber = 13;
    private string tpuIpv4CidrBlock_ = "";
    /// <summary>
    /// The IP address range of the Cloud TPUs in this cluster. If unspecified, a
    /// range will be automatically chosen with the default size.
    ///
    /// This field is only applicable when `use_ip_aliases` is true.
    ///
    /// If unspecified, the range will use the default size.
    ///
    /// Set to /netmask (e.g. `/14`) to have a range chosen with a specific
    /// netmask.
    ///
    /// Set to a
    /// [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
    /// notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g.
    /// `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range
    /// to use.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TpuIpv4CidrBlock {
      get { return tpuIpv4CidrBlock_; }
      set {
        tpuIpv4CidrBlock_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IPAllocationPolicy);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IPAllocationPolicy other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UseIpAliases != other.UseIpAliases) return false;
      if (CreateSubnetwork != other.CreateSubnetwork) return false;
      if (SubnetworkName != other.SubnetworkName) return false;
      if (ClusterIpv4Cidr != other.ClusterIpv4Cidr) return false;
      if (NodeIpv4Cidr != other.NodeIpv4Cidr) return false;
      if (ServicesIpv4Cidr != other.ServicesIpv4Cidr) return false;
      if (ClusterSecondaryRangeName != other.ClusterSecondaryRangeName) return false;
      if (ServicesSecondaryRangeName != other.ServicesSecondaryRangeName) return false;
      if (ClusterIpv4CidrBlock != other.ClusterIpv4CidrBlock) return false;
      if (NodeIpv4CidrBlock != other.NodeIpv4CidrBlock) return false;
      if (ServicesIpv4CidrBlock != other.ServicesIpv4CidrBlock) return false;
      if (TpuIpv4CidrBlock != other.TpuIpv4CidrBlock) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UseIpAliases != false) hash ^= UseIpAliases.GetHashCode();
      if (CreateSubnetwork != false) hash ^= CreateSubnetwork.GetHashCode();
      if (SubnetworkName.Length != 0) hash ^= SubnetworkName.GetHashCode();
      if (ClusterIpv4Cidr.Length != 0) hash ^= ClusterIpv4Cidr.GetHashCode();
      if (NodeIpv4Cidr.Length != 0) hash ^= NodeIpv4Cidr.GetHashCode();
      if (ServicesIpv4Cidr.Length != 0) hash ^= ServicesIpv4Cidr.GetHashCode();
      if (ClusterSecondaryRangeName.Length != 0) hash ^= ClusterSecondaryRangeName.GetHashCode();
      if (ServicesSecondaryRangeName.Length != 0) hash ^= ServicesSecondaryRangeName.GetHashCode();
      if (ClusterIpv4CidrBlock.Length != 0) hash ^= ClusterIpv4CidrBlock.GetHashCode();
      if (NodeIpv4CidrBlock.Length != 0) hash ^= NodeIpv4CidrBlock.GetHashCode();
      if (ServicesIpv4CidrBlock.Length != 0) hash ^= ServicesIpv4CidrBlock.GetHashCode();
      if (TpuIpv4CidrBlock.Length != 0) hash ^= TpuIpv4CidrBlock.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UseIpAliases != false) {
        output.WriteRawTag(8);
        output.WriteBool(UseIpAliases);
      }
      if (CreateSubnetwork != false) {
        output.WriteRawTag(16);
        output.WriteBool(CreateSubnetwork);
      }
      if (SubnetworkName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(SubnetworkName);
      }
      if (ClusterIpv4Cidr.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ClusterIpv4Cidr);
      }
      if (NodeIpv4Cidr.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(NodeIpv4Cidr);
      }
      if (ServicesIpv4Cidr.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ServicesIpv4Cidr);
      }
      if (ClusterSecondaryRangeName.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ClusterSecondaryRangeName);
      }
      if (ServicesSecondaryRangeName.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(ServicesSecondaryRangeName);
      }
      if (ClusterIpv4CidrBlock.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(ClusterIpv4CidrBlock);
      }
      if (NodeIpv4CidrBlock.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(NodeIpv4CidrBlock);
      }
      if (ServicesIpv4CidrBlock.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(ServicesIpv4CidrBlock);
      }
      if (TpuIpv4CidrBlock.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(TpuIpv4CidrBlock);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UseIpAliases != false) {
        size += 1 + 1;
      }
      if (CreateSubnetwork != false) {
        size += 1 + 1;
      }
      if (SubnetworkName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SubnetworkName);
      }
      if (ClusterIpv4Cidr.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterIpv4Cidr);
      }
      if (NodeIpv4Cidr.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NodeIpv4Cidr);
      }
      if (ServicesIpv4Cidr.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServicesIpv4Cidr);
      }
      if (ClusterSecondaryRangeName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterSecondaryRangeName);
      }
      if (ServicesSecondaryRangeName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServicesSecondaryRangeName);
      }
      if (ClusterIpv4CidrBlock.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterIpv4CidrBlock);
      }
      if (NodeIpv4CidrBlock.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NodeIpv4CidrBlock);
      }
      if (ServicesIpv4CidrBlock.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServicesIpv4CidrBlock);
      }
      if (TpuIpv4CidrBlock.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TpuIpv4CidrBlock);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IPAllocationPolicy other) {
      if (other == null) {
        return;
      }
      if (other.UseIpAliases != false) {
        UseIpAliases = other.UseIpAliases;
      }
      if (other.CreateSubnetwork != false) {
        CreateSubnetwork = other.CreateSubnetwork;
      }
      if (other.SubnetworkName.Length != 0) {
        SubnetworkName = other.SubnetworkName;
      }
      if (other.ClusterIpv4Cidr.Length != 0) {
        ClusterIpv4Cidr = other.ClusterIpv4Cidr;
      }
      if (other.NodeIpv4Cidr.Length != 0) {
        NodeIpv4Cidr = other.NodeIpv4Cidr;
      }
      if (other.ServicesIpv4Cidr.Length != 0) {
        ServicesIpv4Cidr = other.ServicesIpv4Cidr;
      }
      if (other.ClusterSecondaryRangeName.Length != 0) {
        ClusterSecondaryRangeName = other.ClusterSecondaryRangeName;
      }
      if (other.ServicesSecondaryRangeName.Length != 0) {
        ServicesSecondaryRangeName = other.ServicesSecondaryRangeName;
      }
      if (other.ClusterIpv4CidrBlock.Length != 0) {
        ClusterIpv4CidrBlock = other.ClusterIpv4CidrBlock;
      }
      if (other.NodeIpv4CidrBlock.Length != 0) {
        NodeIpv4CidrBlock = other.NodeIpv4CidrBlock;
      }
      if (other.ServicesIpv4CidrBlock.Length != 0) {
        ServicesIpv4CidrBlock = other.ServicesIpv4CidrBlock;
      }
      if (other.TpuIpv4CidrBlock.Length != 0) {
        TpuIpv4CidrBlock = other.TpuIpv4CidrBlock;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UseIpAliases = input.ReadBool();
            break;
          }
          case 16: {
            CreateSubnetwork = input.ReadBool();
            break;
          }
          case 26: {
            SubnetworkName = input.ReadString();
            break;
          }
          case 34: {
            ClusterIpv4Cidr = input.ReadString();
            break;
          }
          case 42: {
            NodeIpv4Cidr = input.ReadString();
            break;
          }
          case 50: {
            ServicesIpv4Cidr = input.ReadString();
            break;
          }
          case 58: {
            ClusterSecondaryRangeName = input.ReadString();
            break;
          }
          case 66: {
            ServicesSecondaryRangeName = input.ReadString();
            break;
          }
          case 74: {
            ClusterIpv4CidrBlock = input.ReadString();
            break;
          }
          case 82: {
            NodeIpv4CidrBlock = input.ReadString();
            break;
          }
          case 90: {
            ServicesIpv4CidrBlock = input.ReadString();
            break;
          }
          case 106: {
            TpuIpv4CidrBlock = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// A Google Kubernetes Engine cluster.
  /// </summary>
  public sealed partial class Cluster : pb::IMessage<Cluster> {
    private static readonly pb::MessageParser<Cluster> _parser = new pb::MessageParser<Cluster>(() => new Cluster());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Cluster> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Cluster() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Cluster(Cluster other) : this() {
      name_ = other.name_;
      description_ = other.description_;
      initialNodeCount_ = other.initialNodeCount_;
      nodeConfig_ = other.nodeConfig_ != null ? other.nodeConfig_.Clone() : null;
      masterAuth_ = other.masterAuth_ != null ? other.masterAuth_.Clone() : null;
      loggingService_ = other.loggingService_;
      monitoringService_ = other.monitoringService_;
      network_ = other.network_;
      clusterIpv4Cidr_ = other.clusterIpv4Cidr_;
      addonsConfig_ = other.addonsConfig_ != null ? other.addonsConfig_.Clone() : null;
      subnetwork_ = other.subnetwork_;
      nodePools_ = other.nodePools_.Clone();
      locations_ = other.locations_.Clone();
      enableKubernetesAlpha_ = other.enableKubernetesAlpha_;
      resourceLabels_ = other.resourceLabels_.Clone();
      labelFingerprint_ = other.labelFingerprint_;
      legacyAbac_ = other.legacyAbac_ != null ? other.legacyAbac_.Clone() : null;
      networkPolicy_ = other.networkPolicy_ != null ? other.networkPolicy_.Clone() : null;
      ipAllocationPolicy_ = other.ipAllocationPolicy_ != null ? other.ipAllocationPolicy_.Clone() : null;
      masterAuthorizedNetworksConfig_ = other.masterAuthorizedNetworksConfig_ != null ? other.masterAuthorizedNetworksConfig_.Clone() : null;
      maintenancePolicy_ = other.maintenancePolicy_ != null ? other.maintenancePolicy_.Clone() : null;
      binaryAuthorization_ = other.binaryAuthorization_ != null ? other.binaryAuthorization_.Clone() : null;
      autoscaling_ = other.autoscaling_ != null ? other.autoscaling_.Clone() : null;
      networkConfig_ = other.networkConfig_ != null ? other.networkConfig_.Clone() : null;
      defaultMaxPodsConstraint_ = other.defaultMaxPodsConstraint_ != null ? other.defaultMaxPodsConstraint_.Clone() : null;
      resourceUsageExportConfig_ = other.resourceUsageExportConfig_ != null ? other.resourceUsageExportConfig_.Clone() : null;
      authenticatorGroupsConfig_ = other.authenticatorGroupsConfig_ != null ? other.authenticatorGroupsConfig_.Clone() : null;
      privateClusterConfig_ = other.privateClusterConfig_ != null ? other.privateClusterConfig_.Clone() : null;
      databaseEncryption_ = other.databaseEncryption_ != null ? other.databaseEncryption_.Clone() : null;
      verticalPodAutoscaling_ = other.verticalPodAutoscaling_ != null ? other.verticalPodAutoscaling_.Clone() : null;
      selfLink_ = other.selfLink_;
      zone_ = other.zone_;
      endpoint_ = other.endpoint_;
      initialClusterVersion_ = other.initialClusterVersion_;
      currentMasterVersion_ = other.currentMasterVersion_;
      currentNodeVersion_ = other.currentNodeVersion_;
      createTime_ = other.createTime_;
      status_ = other.status_;
      statusMessage_ = other.statusMessage_;
      nodeIpv4CidrSize_ = other.nodeIpv4CidrSize_;
      servicesIpv4Cidr_ = other.servicesIpv4Cidr_;
      instanceGroupUrls_ = other.instanceGroupUrls_.Clone();
      currentNodeCount_ = other.currentNodeCount_;
      expireTime_ = other.expireTime_;
      location_ = other.location_;
      enableTpu_ = other.enableTpu_;
      tpuIpv4CidrBlock_ = other.tpuIpv4CidrBlock_;
      conditions_ = other.conditions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Cluster Clone() {
      return new Cluster(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// The name of this cluster. The name must be unique within this project
    /// and location (e.g. zone or region), and can be up to 40 characters with
    /// the following restrictions:
    ///
    /// * Lowercase letters, numbers, and hyphens only.
    /// * Must start with a letter.
    /// * Must end with a number or a letter.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 2;
    private string description_ = "";
    /// <summary>
    /// An optional description of this cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "initial_node_count" field.</summary>
    public const int InitialNodeCountFieldNumber = 3;
    private int initialNodeCount_;
    /// <summary>
    /// The number of nodes to create in this cluster. You must ensure that your
    /// Compute Engine &lt;a href="/compute/docs/resource-quotas">resource quota&lt;/a>
    /// is sufficient for this number of instances. You must also have available
    /// firewall and routes quota.
    /// For requests, this field should only be used in lieu of a
    /// "node_pool" object, since this configuration (along with the
    /// "node_config") will be used to create a "NodePool" object with an
    /// auto-generated name. Do not use this and a node_pool at the same time.
    ///
    /// This field is deprecated, use node_pool.initial_node_count instead.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int InitialNodeCount {
      get { return initialNodeCount_; }
      set {
        initialNodeCount_ = value;
      }
    }

    /// <summary>Field number for the "node_config" field.</summary>
    public const int NodeConfigFieldNumber = 4;
    private global::Google.Cloud.Container.V1.NodeConfig nodeConfig_;
    /// <summary>
    /// Parameters used in creating the cluster's nodes.
    /// For requests, this field should only be used in lieu of a
    /// "node_pool" object, since this configuration (along with the
    /// "initial_node_count") will be used to create a "NodePool" object with an
    /// auto-generated name. Do not use this and a node_pool at the same time.
    /// For responses, this field will be populated with the node configuration of
    /// the first node pool. (For configuration of each node pool, see
    /// `node_pool.config`)
    ///
    /// If unspecified, the defaults are used.
    /// This field is deprecated, use node_pool.config instead.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.NodeConfig NodeConfig {
      get { return nodeConfig_; }
      set {
        nodeConfig_ = value;
      }
    }

    /// <summary>Field number for the "master_auth" field.</summary>
    public const int MasterAuthFieldNumber = 5;
    private global::Google.Cloud.Container.V1.MasterAuth masterAuth_;
    /// <summary>
    /// The authentication information for accessing the master endpoint.
    /// If unspecified, the defaults are used:
    /// For clusters before v1.12, if master_auth is unspecified, `username` will
    /// be set to "admin", a random password will be generated, and a client
    /// certificate will be issued.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.MasterAuth MasterAuth {
      get { return masterAuth_; }
      set {
        masterAuth_ = value;
      }
    }

    /// <summary>Field number for the "logging_service" field.</summary>
    public const int LoggingServiceFieldNumber = 6;
    private string loggingService_ = "";
    /// <summary>
    /// The logging service the cluster should use to write logs.
    /// Currently available options:
    ///
    /// * "logging.googleapis.com/kubernetes" - the Google Cloud Logging
    /// service with Kubernetes-native resource model
    /// * `logging.googleapis.com` - the Google Cloud Logging service.
    /// * `none` - no logs will be exported from the cluster.
    /// * if left as an empty string,`logging.googleapis.com` will be used.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LoggingService {
      get { return loggingService_; }
      set {
        loggingService_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "monitoring_service" field.</summary>
    public const int MonitoringServiceFieldNumber = 7;
    private string monitoringService_ = "";
    /// <summary>
    /// The monitoring service the cluster should use to write metrics.
    /// Currently available options:
    ///
    /// * `monitoring.googleapis.com` - the Google Cloud Monitoring service.
    /// * `none` - no metrics will be exported from the cluster.
    /// * if left as an empty string, `monitoring.googleapis.com` will be used.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MonitoringService {
      get { return monitoringService_; }
      set {
        monitoringService_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "network" field.</summary>
    public const int NetworkFieldNumber = 8;
    private string network_ = "";
    /// <summary>
    /// The name of the Google Compute Engine
    /// [network](https://cloud.google.com/compute/docs/networks-and-firewalls#networks) to which the
    /// cluster is connected. If left unspecified, the `default` network
    /// will be used.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Network {
      get { return network_; }
      set {
        network_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cluster_ipv4_cidr" field.</summary>
    public const int ClusterIpv4CidrFieldNumber = 9;
    private string clusterIpv4Cidr_ = "";
    /// <summary>
    /// The IP address range of the container pods in this cluster, in
    /// [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
    /// notation (e.g. `10.96.0.0/14`). Leave blank to have
    /// one automatically chosen or specify a `/14` block in `10.0.0.0/8`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterIpv4Cidr {
      get { return clusterIpv4Cidr_; }
      set {
        clusterIpv4Cidr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "addons_config" field.</summary>
    public const int AddonsConfigFieldNumber = 10;
    private global::Google.Cloud.Container.V1.AddonsConfig addonsConfig_;
    /// <summary>
    /// Configurations for the various addons available to run in the cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.AddonsConfig AddonsConfig {
      get { return addonsConfig_; }
      set {
        addonsConfig_ = value;
      }
    }

    /// <summary>Field number for the "subnetwork" field.</summary>
    public const int SubnetworkFieldNumber = 11;
    private string subnetwork_ = "";
    /// <summary>
    /// The name of the Google Compute Engine
    /// [subnetwork](https://cloud.google.com/compute/docs/subnetworks) to which the
    /// cluster is connected.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Subnetwork {
      get { return subnetwork_; }
      set {
        subnetwork_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "node_pools" field.</summary>
    public const int NodePoolsFieldNumber = 12;
    private static readonly pb::FieldCodec<global::Google.Cloud.Container.V1.NodePool> _repeated_nodePools_codec
        = pb::FieldCodec.ForMessage(98, global::Google.Cloud.Container.V1.NodePool.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Container.V1.NodePool> nodePools_ = new pbc::RepeatedField<global::Google.Cloud.Container.V1.NodePool>();
    /// <summary>
    /// The node pools associated with this cluster.
    /// This field should not be set if "node_config" or "initial_node_count" are
    /// specified.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Container.V1.NodePool> NodePools {
      get { return nodePools_; }
    }

    /// <summary>Field number for the "locations" field.</summary>
    public const int LocationsFieldNumber = 13;
    private static readonly pb::FieldCodec<string> _repeated_locations_codec
        = pb::FieldCodec.ForString(106);
    private readonly pbc::RepeatedField<string> locations_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// The list of Google Compute Engine
    /// [zones](https://cloud.google.com/compute/docs/zones#available) in which the cluster's nodes
    /// should be located.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Locations {
      get { return locations_; }
    }

    /// <summary>Field number for the "enable_kubernetes_alpha" field.</summary>
    public const int EnableKubernetesAlphaFieldNumber = 14;
    private bool enableKubernetesAlpha_;
    /// <summary>
    /// Kubernetes alpha features are enabled on this cluster. This includes alpha
    /// API groups (e.g. v1alpha1) and features that may not be production ready in
    /// the kubernetes version of the master and nodes.
    /// The cluster has no SLA for uptime and master/node upgrades are disabled.
    /// Alpha enabled clusters are automatically deleted thirty days after
    /// creation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool EnableKubernetesAlpha {
      get { return enableKubernetesAlpha_; }
      set {
        enableKubernetesAlpha_ = value;
      }
    }

    /// <summary>Field number for the "resource_labels" field.</summary>
    public const int ResourceLabelsFieldNumber = 15;
    private static readonly pbc::MapField<string, string>.Codec _map_resourceLabels_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 122);
    private readonly pbc::MapField<string, string> resourceLabels_ = new pbc::MapField<string, string>();
    /// <summary>
    /// The resource labels for the cluster to use to annotate any related
    /// Google Compute Engine resources.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> ResourceLabels {
      get { return resourceLabels_; }
    }

    /// <summary>Field number for the "label_fingerprint" field.</summary>
    public const int LabelFingerprintFieldNumber = 16;
    private string labelFingerprint_ = "";
    /// <summary>
    /// The fingerprint of the set of labels for this cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LabelFingerprint {
      get { return labelFingerprint_; }
      set {
        labelFingerprint_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "legacy_abac" field.</summary>
    public const int LegacyAbacFieldNumber = 18;
    private global::Google.Cloud.Container.V1.LegacyAbac legacyAbac_;
    /// <summary>
    /// Configuration for the legacy ABAC authorization mode.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.LegacyAbac LegacyAbac {
      get { return legacyAbac_; }
      set {
        legacyAbac_ = value;
      }
    }

    /// <summary>Field number for the "network_policy" field.</summary>
    public const int NetworkPolicyFieldNumber = 19;
    private global::Google.Cloud.Container.V1.NetworkPolicy networkPolicy_;
    /// <summary>
    /// Configuration options for the NetworkPolicy feature.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.NetworkPolicy NetworkPolicy {
      get { return networkPolicy_; }
      set {
        networkPolicy_ = value;
      }
    }

    /// <summary>Field number for the "ip_allocation_policy" field.</summary>
    public const int IpAllocationPolicyFieldNumber = 20;
    private global::Google.Cloud.Container.V1.IPAllocationPolicy ipAllocationPolicy_;
    /// <summary>
    /// Configuration for cluster IP allocation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.IPAllocationPolicy IpAllocationPolicy {
      get { return ipAllocationPolicy_; }
      set {
        ipAllocationPolicy_ = value;
      }
    }

    /// <summary>Field number for the "master_authorized_networks_config" field.</summary>
    public const int MasterAuthorizedNetworksConfigFieldNumber = 22;
    private global::Google.Cloud.Container.V1.MasterAuthorizedNetworksConfig masterAuthorizedNetworksConfig_;
    /// <summary>
    /// The configuration options for master authorized networks feature.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.MasterAuthorizedNetworksConfig MasterAuthorizedNetworksConfig {
      get { return masterAuthorizedNetworksConfig_; }
      set {
        masterAuthorizedNetworksConfig_ = value;
      }
    }

    /// <summary>Field number for the "maintenance_policy" field.</summary>
    public const int MaintenancePolicyFieldNumber = 23;
    private global::Google.Cloud.Container.V1.MaintenancePolicy maintenancePolicy_;
    /// <summary>
    /// Configure the maintenance policy for this cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.MaintenancePolicy MaintenancePolicy {
      get { return maintenancePolicy_; }
      set {
        maintenancePolicy_ = value;
      }
    }

    /// <summary>Field number for the "binary_authorization" field.</summary>
    public const int BinaryAuthorizationFieldNumber = 24;
    private global::Google.Cloud.Container.V1.BinaryAuthorization binaryAuthorization_;
    /// <summary>
    /// Configuration for Binary Authorization.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.BinaryAuthorization BinaryAuthorization {
      get { return binaryAuthorization_; }
      set {
        binaryAuthorization_ = value;
      }
    }

    /// <summary>Field number for the "autoscaling" field.</summary>
    public const int AutoscalingFieldNumber = 26;
    private global::Google.Cloud.Container.V1.ClusterAutoscaling autoscaling_;
    /// <summary>
    /// Cluster-level autoscaling configuration.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.ClusterAutoscaling Autoscaling {
      get { return autoscaling_; }
      set {
        autoscaling_ = value;
      }
    }

    /// <summary>Field number for the "network_config" field.</summary>
    public const int NetworkConfigFieldNumber = 27;
    private global::Google.Cloud.Container.V1.NetworkConfig networkConfig_;
    /// <summary>
    /// Configuration for cluster networking.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.NetworkConfig NetworkConfig {
      get { return networkConfig_; }
      set {
        networkConfig_ = value;
      }
    }

    /// <summary>Field number for the "default_max_pods_constraint" field.</summary>
    public const int DefaultMaxPodsConstraintFieldNumber = 30;
    private global::Google.Cloud.Container.V1.MaxPodsConstraint defaultMaxPodsConstraint_;
    /// <summary>
    /// The default constraint on the maximum number of pods that can be run
    /// simultaneously on a node in the node pool of this cluster. Only honored
    /// if cluster created with IP Alias support.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.MaxPodsConstraint DefaultMaxPodsConstraint {
      get { return defaultMaxPodsConstraint_; }
      set {
        defaultMaxPodsConstraint_ = value;
      }
    }

    /// <summary>Field number for the "resource_usage_export_config" field.</summary>
    public const int ResourceUsageExportConfigFieldNumber = 33;
    private global::Google.Cloud.Container.V1.ResourceUsageExportConfig resourceUsageExportConfig_;
    /// <summary>
    /// Configuration for exporting resource usages. Resource usage export is
    /// disabled when this config is unspecified.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.ResourceUsageExportConfig ResourceUsageExportConfig {
      get { return resourceUsageExportConfig_; }
      set {
        resourceUsageExportConfig_ = value;
      }
    }

    /// <summary>Field number for the "authenticator_groups_config" field.</summary>
    public const int AuthenticatorGroupsConfigFieldNumber = 34;
    private global::Google.Cloud.Container.V1.AuthenticatorGroupsConfig authenticatorGroupsConfig_;
    /// <summary>
    /// Configuration controlling RBAC group membership information.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.AuthenticatorGroupsConfig AuthenticatorGroupsConfig {
      get { return authenticatorGroupsConfig_; }
      set {
        authenticatorGroupsConfig_ = value;
      }
    }

    /// <summary>Field number for the "private_cluster_config" field.</summary>
    public const int PrivateClusterConfigFieldNumber = 37;
    private global::Google.Cloud.Container.V1.PrivateClusterConfig privateClusterConfig_;
    /// <summary>
    /// Configuration for private cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.PrivateClusterConfig PrivateClusterConfig {
      get { return privateClusterConfig_; }
      set {
        privateClusterConfig_ = value;
      }
    }

    /// <summary>Field number for the "database_encryption" field.</summary>
    public const int DatabaseEncryptionFieldNumber = 38;
    private global::Google.Cloud.Container.V1.DatabaseEncryption databaseEncryption_;
    /// <summary>
    /// Configuration of etcd encryption.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.DatabaseEncryption DatabaseEncryption {
      get { return databaseEncryption_; }
      set {
        databaseEncryption_ = value;
      }
    }

    /// <summary>Field number for the "vertical_pod_autoscaling" field.</summary>
    public const int VerticalPodAutoscalingFieldNumber = 39;
    private global::Google.Cloud.Container.V1.VerticalPodAutoscaling verticalPodAutoscaling_;
    /// <summary>
    /// Cluster-level Vertical Pod Autoscaling configuration.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.VerticalPodAutoscaling VerticalPodAutoscaling {
      get { return verticalPodAutoscaling_; }
      set {
        verticalPodAutoscaling_ = value;
      }
    }

    /// <summary>Field number for the "self_link" field.</summary>
    public const int SelfLinkFieldNumber = 100;
    private string selfLink_ = "";
    /// <summary>
    /// [Output only] Server-defined URL for the resource.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SelfLink {
      get { return selfLink_; }
      set {
        selfLink_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "zone" field.</summary>
    public const int ZoneFieldNumber = 101;
    private string zone_ = "";
    /// <summary>
    /// [Output only] The name of the Google Compute Engine
    /// [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster
    /// resides.
    /// This field is deprecated, use location instead.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Zone {
      get { return zone_; }
      set {
        zone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "endpoint" field.</summary>
    public const int EndpointFieldNumber = 102;
    private string endpoint_ = "";
    /// <summary>
    /// [Output only] The IP address of this cluster's master endpoint.
    /// The endpoint can be accessed from the internet at
    /// `https://username:password@endpoint/`.
    ///
    /// See the `masterAuth` property of this resource for username and
    /// password information.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Endpoint {
      get { return endpoint_; }
      set {
        endpoint_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "initial_cluster_version" field.</summary>
    public const int InitialClusterVersionFieldNumber = 103;
    private string initialClusterVersion_ = "";
    /// <summary>
    /// The initial Kubernetes version for this cluster.  Valid versions are those
    /// found in validMasterVersions returned by getServerConfig.  The version can
    /// be upgraded over time; such upgrades are reflected in
    /// currentMasterVersion and currentNodeVersion.
    ///
    /// Users may specify either explicit versions offered by
    /// Kubernetes Engine or version aliases, which have the following behavior:
    ///
    /// - "latest": picks the highest valid Kubernetes version
    /// - "1.X": picks the highest valid patch+gke.N patch in the 1.X version
    /// - "1.X.Y": picks the highest valid gke.N patch in the 1.X.Y version
    /// - "1.X.Y-gke.N": picks an explicit Kubernetes version
    /// - "","-": picks the default Kubernetes version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InitialClusterVersion {
      get { return initialClusterVersion_; }
      set {
        initialClusterVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "current_master_version" field.</summary>
    public const int CurrentMasterVersionFieldNumber = 104;
    private string currentMasterVersion_ = "";
    /// <summary>
    /// [Output only] The current software version of the master endpoint.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CurrentMasterVersion {
      get { return currentMasterVersion_; }
      set {
        currentMasterVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "current_node_version" field.</summary>
    public const int CurrentNodeVersionFieldNumber = 105;
    private string currentNodeVersion_ = "";
    /// <summary>
    /// [Output only] Deprecated, use
    /// [NodePools.version](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1/projects.zones.clusters.nodePools)
    /// instead. The current version of the node software components. If they are
    /// currently at multiple versions because they're in the process of being
    /// upgraded, this reflects the minimum version of all nodes.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CurrentNodeVersion {
      get { return currentNodeVersion_; }
      set {
        currentNodeVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "create_time" field.</summary>
    public const int CreateTimeFieldNumber = 106;
    private string createTime_ = "";
    /// <summary>
    /// [Output only] The time the cluster was created, in
    /// [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreateTime {
      get { return createTime_; }
      set {
        createTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 107;
    private global::Google.Cloud.Container.V1.Cluster.Types.Status status_ = 0;
    /// <summary>
    /// [Output only] The current status of this cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.Cluster.Types.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "status_message" field.</summary>
    public const int StatusMessageFieldNumber = 108;
    private string statusMessage_ = "";
    /// <summary>
    /// [Output only] Additional information about the current status of this
    /// cluster, if available.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StatusMessage {
      get { return statusMessage_; }
      set {
        statusMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "node_ipv4_cidr_size" field.</summary>
    public const int NodeIpv4CidrSizeFieldNumber = 109;
    private int nodeIpv4CidrSize_;
    /// <summary>
    /// [Output only] The size of the address space on each node for hosting
    /// containers. This is provisioned from within the `container_ipv4_cidr`
    /// range. This field will only be set when cluster is in route-based network
    /// mode.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NodeIpv4CidrSize {
      get { return nodeIpv4CidrSize_; }
      set {
        nodeIpv4CidrSize_ = value;
      }
    }

    /// <summary>Field number for the "services_ipv4_cidr" field.</summary>
    public const int ServicesIpv4CidrFieldNumber = 110;
    private string servicesIpv4Cidr_ = "";
    /// <summary>
    /// [Output only] The IP address range of the Kubernetes services in
    /// this cluster, in
    /// [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
    /// notation (e.g. `1.2.3.4/29`). Service addresses are
    /// typically put in the last `/16` from the container CIDR.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServicesIpv4Cidr {
      get { return servicesIpv4Cidr_; }
      set {
        servicesIpv4Cidr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "instance_group_urls" field.</summary>
    public const int InstanceGroupUrlsFieldNumber = 111;
    private static readonly pb::FieldCodec<string> _repeated_instanceGroupUrls_codec
        = pb::FieldCodec.ForString(890);
    private readonly pbc::RepeatedField<string> instanceGroupUrls_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Deprecated. Use node_pools.instance_group_urls.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> InstanceGroupUrls {
      get { return instanceGroupUrls_; }
    }

    /// <summary>Field number for the "current_node_count" field.</summary>
    public const int CurrentNodeCountFieldNumber = 112;
    private int currentNodeCount_;
    /// <summary>
    /// [Output only]  The number of nodes currently in the cluster. Deprecated.
    /// Call Kubernetes API directly to retrieve node information.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurrentNodeCount {
      get { return currentNodeCount_; }
      set {
        currentNodeCount_ = value;
      }
    }

    /// <summary>Field number for the "expire_time" field.</summary>
    public const int ExpireTimeFieldNumber = 113;
    private string expireTime_ = "";
    /// <summary>
    /// [Output only] The time the cluster will be automatically
    /// deleted in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ExpireTime {
      get { return expireTime_; }
      set {
        expireTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "location" field.</summary>
    public const int LocationFieldNumber = 114;
    private string location_ = "";
    /// <summary>
    /// [Output only] The name of the Google Compute Engine
    /// [zone](https://cloud.google.com/compute/docs/regions-zones/regions-zones#available) or
    /// [region](https://cloud.google.com/compute/docs/regions-zones/regions-zones#available) in which
    /// the cluster resides.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Location {
      get { return location_; }
      set {
        location_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "enable_tpu" field.</summary>
    public const int EnableTpuFieldNumber = 115;
    private bool enableTpu_;
    /// <summary>
    /// Enable the ability to use Cloud TPUs in this cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool EnableTpu {
      get { return enableTpu_; }
      set {
        enableTpu_ = value;
      }
    }

    /// <summary>Field number for the "tpu_ipv4_cidr_block" field.</summary>
    public const int TpuIpv4CidrBlockFieldNumber = 116;
    private string tpuIpv4CidrBlock_ = "";
    /// <summary>
    /// [Output only] The IP address range of the Cloud TPUs in this cluster, in
    /// [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
    /// notation (e.g. `1.2.3.4/29`).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TpuIpv4CidrBlock {
      get { return tpuIpv4CidrBlock_; }
      set {
        tpuIpv4CidrBlock_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "conditions" field.</summary>
    public const int ConditionsFieldNumber = 118;
    private static readonly pb::FieldCodec<global::Google.Cloud.Container.V1.StatusCondition> _repeated_conditions_codec
        = pb::FieldCodec.ForMessage(946, global::Google.Cloud.Container.V1.StatusCondition.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Container.V1.StatusCondition> conditions_ = new pbc::RepeatedField<global::Google.Cloud.Container.V1.StatusCondition>();
    /// <summary>
    /// Which conditions caused the current cluster state.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Container.V1.StatusCondition> Conditions {
      get { return conditions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Cluster);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Cluster other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Description != other.Description) return false;
      if (InitialNodeCount != other.InitialNodeCount) return false;
      if (!object.Equals(NodeConfig, other.NodeConfig)) return false;
      if (!object.Equals(MasterAuth, other.MasterAuth)) return false;
      if (LoggingService != other.LoggingService) return false;
      if (MonitoringService != other.MonitoringService) return false;
      if (Network != other.Network) return false;
      if (ClusterIpv4Cidr != other.ClusterIpv4Cidr) return false;
      if (!object.Equals(AddonsConfig, other.AddonsConfig)) return false;
      if (Subnetwork != other.Subnetwork) return false;
      if(!nodePools_.Equals(other.nodePools_)) return false;
      if(!locations_.Equals(other.locations_)) return false;
      if (EnableKubernetesAlpha != other.EnableKubernetesAlpha) return false;
      if (!ResourceLabels.Equals(other.ResourceLabels)) return false;
      if (LabelFingerprint != other.LabelFingerprint) return false;
      if (!object.Equals(LegacyAbac, other.LegacyAbac)) return false;
      if (!object.Equals(NetworkPolicy, other.NetworkPolicy)) return false;
      if (!object.Equals(IpAllocationPolicy, other.IpAllocationPolicy)) return false;
      if (!object.Equals(MasterAuthorizedNetworksConfig, other.MasterAuthorizedNetworksConfig)) return false;
      if (!object.Equals(MaintenancePolicy, other.MaintenancePolicy)) return false;
      if (!object.Equals(BinaryAuthorization, other.BinaryAuthorization)) return false;
      if (!object.Equals(Autoscaling, other.Autoscaling)) return false;
      if (!object.Equals(NetworkConfig, other.NetworkConfig)) return false;
      if (!object.Equals(DefaultMaxPodsConstraint, other.DefaultMaxPodsConstraint)) return false;
      if (!object.Equals(ResourceUsageExportConfig, other.ResourceUsageExportConfig)) return false;
      if (!object.Equals(AuthenticatorGroupsConfig, other.AuthenticatorGroupsConfig)) return false;
      if (!object.Equals(PrivateClusterConfig, other.PrivateClusterConfig)) return false;
      if (!object.Equals(DatabaseEncryption, other.DatabaseEncryption)) return false;
      if (!object.Equals(VerticalPodAutoscaling, other.VerticalPodAutoscaling)) return false;
      if (SelfLink != other.SelfLink) return false;
      if (Zone != other.Zone) return false;
      if (Endpoint != other.Endpoint) return false;
      if (InitialClusterVersion != other.InitialClusterVersion) return false;
      if (CurrentMasterVersion != other.CurrentMasterVersion) return false;
      if (CurrentNodeVersion != other.CurrentNodeVersion) return false;
      if (CreateTime != other.CreateTime) return false;
      if (Status != other.Status) return false;
      if (StatusMessage != other.StatusMessage) return false;
      if (NodeIpv4CidrSize != other.NodeIpv4CidrSize) return false;
      if (ServicesIpv4Cidr != other.ServicesIpv4Cidr) return false;
      if(!instanceGroupUrls_.Equals(other.instanceGroupUrls_)) return false;
      if (CurrentNodeCount != other.CurrentNodeCount) return false;
      if (ExpireTime != other.ExpireTime) return false;
      if (Location != other.Location) return false;
      if (EnableTpu != other.EnableTpu) return false;
      if (TpuIpv4CidrBlock != other.TpuIpv4CidrBlock) return false;
      if(!conditions_.Equals(other.conditions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (InitialNodeCount != 0) hash ^= InitialNodeCount.GetHashCode();
      if (nodeConfig_ != null) hash ^= NodeConfig.GetHashCode();
      if (masterAuth_ != null) hash ^= MasterAuth.GetHashCode();
      if (LoggingService.Length != 0) hash ^= LoggingService.GetHashCode();
      if (MonitoringService.Length != 0) hash ^= MonitoringService.GetHashCode();
      if (Network.Length != 0) hash ^= Network.GetHashCode();
      if (ClusterIpv4Cidr.Length != 0) hash ^= ClusterIpv4Cidr.GetHashCode();
      if (addonsConfig_ != null) hash ^= AddonsConfig.GetHashCode();
      if (Subnetwork.Length != 0) hash ^= Subnetwork.GetHashCode();
      hash ^= nodePools_.GetHashCode();
      hash ^= locations_.GetHashCode();
      if (EnableKubernetesAlpha != false) hash ^= EnableKubernetesAlpha.GetHashCode();
      hash ^= ResourceLabels.GetHashCode();
      if (LabelFingerprint.Length != 0) hash ^= LabelFingerprint.GetHashCode();
      if (legacyAbac_ != null) hash ^= LegacyAbac.GetHashCode();
      if (networkPolicy_ != null) hash ^= NetworkPolicy.GetHashCode();
      if (ipAllocationPolicy_ != null) hash ^= IpAllocationPolicy.GetHashCode();
      if (masterAuthorizedNetworksConfig_ != null) hash ^= MasterAuthorizedNetworksConfig.GetHashCode();
      if (maintenancePolicy_ != null) hash ^= MaintenancePolicy.GetHashCode();
      if (binaryAuthorization_ != null) hash ^= BinaryAuthorization.GetHashCode();
      if (autoscaling_ != null) hash ^= Autoscaling.GetHashCode();
      if (networkConfig_ != null) hash ^= NetworkConfig.GetHashCode();
      if (defaultMaxPodsConstraint_ != null) hash ^= DefaultMaxPodsConstraint.GetHashCode();
      if (resourceUsageExportConfig_ != null) hash ^= ResourceUsageExportConfig.GetHashCode();
      if (authenticatorGroupsConfig_ != null) hash ^= AuthenticatorGroupsConfig.GetHashCode();
      if (privateClusterConfig_ != null) hash ^= PrivateClusterConfig.GetHashCode();
      if (databaseEncryption_ != null) hash ^= DatabaseEncryption.GetHashCode();
      if (verticalPodAutoscaling_ != null) hash ^= VerticalPodAutoscaling.GetHashCode();
      if (SelfLink.Length != 0) hash ^= SelfLink.GetHashCode();
      if (Zone.Length != 0) hash ^= Zone.GetHashCode();
      if (Endpoint.Length != 0) hash ^= Endpoint.GetHashCode();
      if (InitialClusterVersion.Length != 0) hash ^= InitialClusterVersion.GetHashCode();
      if (CurrentMasterVersion.Length != 0) hash ^= CurrentMasterVersion.GetHashCode();
      if (CurrentNodeVersion.Length != 0) hash ^= CurrentNodeVersion.GetHashCode();
      if (CreateTime.Length != 0) hash ^= CreateTime.GetHashCode();
      if (Status != 0) hash ^= Status.GetHashCode();
      if (StatusMessage.Length != 0) hash ^= StatusMessage.GetHashCode();
      if (NodeIpv4CidrSize != 0) hash ^= NodeIpv4CidrSize.GetHashCode();
      if (ServicesIpv4Cidr.Length != 0) hash ^= ServicesIpv4Cidr.GetHashCode();
      hash ^= instanceGroupUrls_.GetHashCode();
      if (CurrentNodeCount != 0) hash ^= CurrentNodeCount.GetHashCode();
      if (ExpireTime.Length != 0) hash ^= ExpireTime.GetHashCode();
      if (Location.Length != 0) hash ^= Location.GetHashCode();
      if (EnableTpu != false) hash ^= EnableTpu.GetHashCode();
      if (TpuIpv4CidrBlock.Length != 0) hash ^= TpuIpv4CidrBlock.GetHashCode();
      hash ^= conditions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      if (InitialNodeCount != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(InitialNodeCount);
      }
      if (nodeConfig_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(NodeConfig);
      }
      if (masterAuth_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(MasterAuth);
      }
      if (LoggingService.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(LoggingService);
      }
      if (MonitoringService.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(MonitoringService);
      }
      if (Network.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Network);
      }
      if (ClusterIpv4Cidr.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(ClusterIpv4Cidr);
      }
      if (addonsConfig_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(AddonsConfig);
      }
      if (Subnetwork.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(Subnetwork);
      }
      nodePools_.WriteTo(output, _repeated_nodePools_codec);
      locations_.WriteTo(output, _repeated_locations_codec);
      if (EnableKubernetesAlpha != false) {
        output.WriteRawTag(112);
        output.WriteBool(EnableKubernetesAlpha);
      }
      resourceLabels_.WriteTo(output, _map_resourceLabels_codec);
      if (LabelFingerprint.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(LabelFingerprint);
      }
      if (legacyAbac_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(LegacyAbac);
      }
      if (networkPolicy_ != null) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(NetworkPolicy);
      }
      if (ipAllocationPolicy_ != null) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(IpAllocationPolicy);
      }
      if (masterAuthorizedNetworksConfig_ != null) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(MasterAuthorizedNetworksConfig);
      }
      if (maintenancePolicy_ != null) {
        output.WriteRawTag(186, 1);
        output.WriteMessage(MaintenancePolicy);
      }
      if (binaryAuthorization_ != null) {
        output.WriteRawTag(194, 1);
        output.WriteMessage(BinaryAuthorization);
      }
      if (autoscaling_ != null) {
        output.WriteRawTag(210, 1);
        output.WriteMessage(Autoscaling);
      }
      if (networkConfig_ != null) {
        output.WriteRawTag(218, 1);
        output.WriteMessage(NetworkConfig);
      }
      if (defaultMaxPodsConstraint_ != null) {
        output.WriteRawTag(242, 1);
        output.WriteMessage(DefaultMaxPodsConstraint);
      }
      if (resourceUsageExportConfig_ != null) {
        output.WriteRawTag(138, 2);
        output.WriteMessage(ResourceUsageExportConfig);
      }
      if (authenticatorGroupsConfig_ != null) {
        output.WriteRawTag(146, 2);
        output.WriteMessage(AuthenticatorGroupsConfig);
      }
      if (privateClusterConfig_ != null) {
        output.WriteRawTag(170, 2);
        output.WriteMessage(PrivateClusterConfig);
      }
      if (databaseEncryption_ != null) {
        output.WriteRawTag(178, 2);
        output.WriteMessage(DatabaseEncryption);
      }
      if (verticalPodAutoscaling_ != null) {
        output.WriteRawTag(186, 2);
        output.WriteMessage(VerticalPodAutoscaling);
      }
      if (SelfLink.Length != 0) {
        output.WriteRawTag(162, 6);
        output.WriteString(SelfLink);
      }
      if (Zone.Length != 0) {
        output.WriteRawTag(170, 6);
        output.WriteString(Zone);
      }
      if (Endpoint.Length != 0) {
        output.WriteRawTag(178, 6);
        output.WriteString(Endpoint);
      }
      if (InitialClusterVersion.Length != 0) {
        output.WriteRawTag(186, 6);
        output.WriteString(InitialClusterVersion);
      }
      if (CurrentMasterVersion.Length != 0) {
        output.WriteRawTag(194, 6);
        output.WriteString(CurrentMasterVersion);
      }
      if (CurrentNodeVersion.Length != 0) {
        output.WriteRawTag(202, 6);
        output.WriteString(CurrentNodeVersion);
      }
      if (CreateTime.Length != 0) {
        output.WriteRawTag(210, 6);
        output.WriteString(CreateTime);
      }
      if (Status != 0) {
        output.WriteRawTag(216, 6);
        output.WriteEnum((int) Status);
      }
      if (StatusMessage.Length != 0) {
        output.WriteRawTag(226, 6);
        output.WriteString(StatusMessage);
      }
      if (NodeIpv4CidrSize != 0) {
        output.WriteRawTag(232, 6);
        output.WriteInt32(NodeIpv4CidrSize);
      }
      if (ServicesIpv4Cidr.Length != 0) {
        output.WriteRawTag(242, 6);
        output.WriteString(ServicesIpv4Cidr);
      }
      instanceGroupUrls_.WriteTo(output, _repeated_instanceGroupUrls_codec);
      if (CurrentNodeCount != 0) {
        output.WriteRawTag(128, 7);
        output.WriteInt32(CurrentNodeCount);
      }
      if (ExpireTime.Length != 0) {
        output.WriteRawTag(138, 7);
        output.WriteString(ExpireTime);
      }
      if (Location.Length != 0) {
        output.WriteRawTag(146, 7);
        output.WriteString(Location);
      }
      if (EnableTpu != false) {
        output.WriteRawTag(152, 7);
        output.WriteBool(EnableTpu);
      }
      if (TpuIpv4CidrBlock.Length != 0) {
        output.WriteRawTag(162, 7);
        output.WriteString(TpuIpv4CidrBlock);
      }
      conditions_.WriteTo(output, _repeated_conditions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (InitialNodeCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(InitialNodeCount);
      }
      if (nodeConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NodeConfig);
      }
      if (masterAuth_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MasterAuth);
      }
      if (LoggingService.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LoggingService);
      }
      if (MonitoringService.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MonitoringService);
      }
      if (Network.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Network);
      }
      if (ClusterIpv4Cidr.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterIpv4Cidr);
      }
      if (addonsConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AddonsConfig);
      }
      if (Subnetwork.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Subnetwork);
      }
      size += nodePools_.CalculateSize(_repeated_nodePools_codec);
      size += locations_.CalculateSize(_repeated_locations_codec);
      if (EnableKubernetesAlpha != false) {
        size += 1 + 1;
      }
      size += resourceLabels_.CalculateSize(_map_resourceLabels_codec);
      if (LabelFingerprint.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(LabelFingerprint);
      }
      if (legacyAbac_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(LegacyAbac);
      }
      if (networkPolicy_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(NetworkPolicy);
      }
      if (ipAllocationPolicy_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(IpAllocationPolicy);
      }
      if (masterAuthorizedNetworksConfig_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(MasterAuthorizedNetworksConfig);
      }
      if (maintenancePolicy_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(MaintenancePolicy);
      }
      if (binaryAuthorization_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(BinaryAuthorization);
      }
      if (autoscaling_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Autoscaling);
      }
      if (networkConfig_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(NetworkConfig);
      }
      if (defaultMaxPodsConstraint_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(DefaultMaxPodsConstraint);
      }
      if (resourceUsageExportConfig_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ResourceUsageExportConfig);
      }
      if (authenticatorGroupsConfig_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(AuthenticatorGroupsConfig);
      }
      if (privateClusterConfig_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(PrivateClusterConfig);
      }
      if (databaseEncryption_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(DatabaseEncryption);
      }
      if (verticalPodAutoscaling_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(VerticalPodAutoscaling);
      }
      if (SelfLink.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(SelfLink);
      }
      if (Zone.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Zone);
      }
      if (Endpoint.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Endpoint);
      }
      if (InitialClusterVersion.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(InitialClusterVersion);
      }
      if (CurrentMasterVersion.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CurrentMasterVersion);
      }
      if (CurrentNodeVersion.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CurrentNodeVersion);
      }
      if (CreateTime.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CreateTime);
      }
      if (Status != 0) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (StatusMessage.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(StatusMessage);
      }
      if (NodeIpv4CidrSize != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(NodeIpv4CidrSize);
      }
      if (ServicesIpv4Cidr.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ServicesIpv4Cidr);
      }
      size += instanceGroupUrls_.CalculateSize(_repeated_instanceGroupUrls_codec);
      if (CurrentNodeCount != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(CurrentNodeCount);
      }
      if (ExpireTime.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ExpireTime);
      }
      if (Location.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Location);
      }
      if (EnableTpu != false) {
        size += 2 + 1;
      }
      if (TpuIpv4CidrBlock.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(TpuIpv4CidrBlock);
      }
      size += conditions_.CalculateSize(_repeated_conditions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Cluster other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.InitialNodeCount != 0) {
        InitialNodeCount = other.InitialNodeCount;
      }
      if (other.nodeConfig_ != null) {
        if (nodeConfig_ == null) {
          NodeConfig = new global::Google.Cloud.Container.V1.NodeConfig();
        }
        NodeConfig.MergeFrom(other.NodeConfig);
      }
      if (other.masterAuth_ != null) {
        if (masterAuth_ == null) {
          MasterAuth = new global::Google.Cloud.Container.V1.MasterAuth();
        }
        MasterAuth.MergeFrom(other.MasterAuth);
      }
      if (other.LoggingService.Length != 0) {
        LoggingService = other.LoggingService;
      }
      if (other.MonitoringService.Length != 0) {
        MonitoringService = other.MonitoringService;
      }
      if (other.Network.Length != 0) {
        Network = other.Network;
      }
      if (other.ClusterIpv4Cidr.Length != 0) {
        ClusterIpv4Cidr = other.ClusterIpv4Cidr;
      }
      if (other.addonsConfig_ != null) {
        if (addonsConfig_ == null) {
          AddonsConfig = new global::Google.Cloud.Container.V1.AddonsConfig();
        }
        AddonsConfig.MergeFrom(other.AddonsConfig);
      }
      if (other.Subnetwork.Length != 0) {
        Subnetwork = other.Subnetwork;
      }
      nodePools_.Add(other.nodePools_);
      locations_.Add(other.locations_);
      if (other.EnableKubernetesAlpha != false) {
        EnableKubernetesAlpha = other.EnableKubernetesAlpha;
      }
      resourceLabels_.Add(other.resourceLabels_);
      if (other.LabelFingerprint.Length != 0) {
        LabelFingerprint = other.LabelFingerprint;
      }
      if (other.legacyAbac_ != null) {
        if (legacyAbac_ == null) {
          LegacyAbac = new global::Google.Cloud.Container.V1.LegacyAbac();
        }
        LegacyAbac.MergeFrom(other.LegacyAbac);
      }
      if (other.networkPolicy_ != null) {
        if (networkPolicy_ == null) {
          NetworkPolicy = new global::Google.Cloud.Container.V1.NetworkPolicy();
        }
        NetworkPolicy.MergeFrom(other.NetworkPolicy);
      }
      if (other.ipAllocationPolicy_ != null) {
        if (ipAllocationPolicy_ == null) {
          IpAllocationPolicy = new global::Google.Cloud.Container.V1.IPAllocationPolicy();
        }
        IpAllocationPolicy.MergeFrom(other.IpAllocationPolicy);
      }
      if (other.masterAuthorizedNetworksConfig_ != null) {
        if (masterAuthorizedNetworksConfig_ == null) {
          MasterAuthorizedNetworksConfig = new global::Google.Cloud.Container.V1.MasterAuthorizedNetworksConfig();
        }
        MasterAuthorizedNetworksConfig.MergeFrom(other.MasterAuthorizedNetworksConfig);
      }
      if (other.maintenancePolicy_ != null) {
        if (maintenancePolicy_ == null) {
          MaintenancePolicy = new global::Google.Cloud.Container.V1.MaintenancePolicy();
        }
        MaintenancePolicy.MergeFrom(other.MaintenancePolicy);
      }
      if (other.binaryAuthorization_ != null) {
        if (binaryAuthorization_ == null) {
          BinaryAuthorization = new global::Google.Cloud.Container.V1.BinaryAuthorization();
        }
        BinaryAuthorization.MergeFrom(other.BinaryAuthorization);
      }
      if (other.autoscaling_ != null) {
        if (autoscaling_ == null) {
          Autoscaling = new global::Google.Cloud.Container.V1.ClusterAutoscaling();
        }
        Autoscaling.MergeFrom(other.Autoscaling);
      }
      if (other.networkConfig_ != null) {
        if (networkConfig_ == null) {
          NetworkConfig = new global::Google.Cloud.Container.V1.NetworkConfig();
        }
        NetworkConfig.MergeFrom(other.NetworkConfig);
      }
      if (other.defaultMaxPodsConstraint_ != null) {
        if (defaultMaxPodsConstraint_ == null) {
          DefaultMaxPodsConstraint = new global::Google.Cloud.Container.V1.MaxPodsConstraint();
        }
        DefaultMaxPodsConstraint.MergeFrom(other.DefaultMaxPodsConstraint);
      }
      if (other.resourceUsageExportConfig_ != null) {
        if (resourceUsageExportConfig_ == null) {
          ResourceUsageExportConfig = new global::Google.Cloud.Container.V1.ResourceUsageExportConfig();
        }
        ResourceUsageExportConfig.MergeFrom(other.ResourceUsageExportConfig);
      }
      if (other.authenticatorGroupsConfig_ != null) {
        if (authenticatorGroupsConfig_ == null) {
          AuthenticatorGroupsConfig = new global::Google.Cloud.Container.V1.AuthenticatorGroupsConfig();
        }
        AuthenticatorGroupsConfig.MergeFrom(other.AuthenticatorGroupsConfig);
      }
      if (other.privateClusterConfig_ != null) {
        if (privateClusterConfig_ == null) {
          PrivateClusterConfig = new global::Google.Cloud.Container.V1.PrivateClusterConfig();
        }
        PrivateClusterConfig.MergeFrom(other.PrivateClusterConfig);
      }
      if (other.databaseEncryption_ != null) {
        if (databaseEncryption_ == null) {
          DatabaseEncryption = new global::Google.Cloud.Container.V1.DatabaseEncryption();
        }
        DatabaseEncryption.MergeFrom(other.DatabaseEncryption);
      }
      if (other.verticalPodAutoscaling_ != null) {
        if (verticalPodAutoscaling_ == null) {
          VerticalPodAutoscaling = new global::Google.Cloud.Container.V1.VerticalPodAutoscaling();
        }
        VerticalPodAutoscaling.MergeFrom(other.VerticalPodAutoscaling);
      }
      if (other.SelfLink.Length != 0) {
        SelfLink = other.SelfLink;
      }
      if (other.Zone.Length != 0) {
        Zone = other.Zone;
      }
      if (other.Endpoint.Length != 0) {
        Endpoint = other.Endpoint;
      }
      if (other.InitialClusterVersion.Length != 0) {
        InitialClusterVersion = other.InitialClusterVersion;
      }
      if (other.CurrentMasterVersion.Length != 0) {
        CurrentMasterVersion = other.CurrentMasterVersion;
      }
      if (other.CurrentNodeVersion.Length != 0) {
        CurrentNodeVersion = other.CurrentNodeVersion;
      }
      if (other.CreateTime.Length != 0) {
        CreateTime = other.CreateTime;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.StatusMessage.Length != 0) {
        StatusMessage = other.StatusMessage;
      }
      if (other.NodeIpv4CidrSize != 0) {
        NodeIpv4CidrSize = other.NodeIpv4CidrSize;
      }
      if (other.ServicesIpv4Cidr.Length != 0) {
        ServicesIpv4Cidr = other.ServicesIpv4Cidr;
      }
      instanceGroupUrls_.Add(other.instanceGroupUrls_);
      if (other.CurrentNodeCount != 0) {
        CurrentNodeCount = other.CurrentNodeCount;
      }
      if (other.ExpireTime.Length != 0) {
        ExpireTime = other.ExpireTime;
      }
      if (other.Location.Length != 0) {
        Location = other.Location;
      }
      if (other.EnableTpu != false) {
        EnableTpu = other.EnableTpu;
      }
      if (other.TpuIpv4CidrBlock.Length != 0) {
        TpuIpv4CidrBlock = other.TpuIpv4CidrBlock;
      }
      conditions_.Add(other.conditions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
          case 24: {
            InitialNodeCount = input.ReadInt32();
            break;
          }
          case 34: {
            if (nodeConfig_ == null) {
              NodeConfig = new global::Google.Cloud.Container.V1.NodeConfig();
            }
            input.ReadMessage(NodeConfig);
            break;
          }
          case 42: {
            if (masterAuth_ == null) {
              MasterAuth = new global::Google.Cloud.Container.V1.MasterAuth();
            }
            input.ReadMessage(MasterAuth);
            break;
          }
          case 50: {
            LoggingService = input.ReadString();
            break;
          }
          case 58: {
            MonitoringService = input.ReadString();
            break;
          }
          case 66: {
            Network = input.ReadString();
            break;
          }
          case 74: {
            ClusterIpv4Cidr = input.ReadString();
            break;
          }
          case 82: {
            if (addonsConfig_ == null) {
              AddonsConfig = new global::Google.Cloud.Container.V1.AddonsConfig();
            }
            input.ReadMessage(AddonsConfig);
            break;
          }
          case 90: {
            Subnetwork = input.ReadString();
            break;
          }
          case 98: {
            nodePools_.AddEntriesFrom(input, _repeated_nodePools_codec);
            break;
          }
          case 106: {
            locations_.AddEntriesFrom(input, _repeated_locations_codec);
            break;
          }
          case 112: {
            EnableKubernetesAlpha = input.ReadBool();
            break;
          }
          case 122: {
            resourceLabels_.AddEntriesFrom(input, _map_resourceLabels_codec);
            break;
          }
          case 130: {
            LabelFingerprint = input.ReadString();
            break;
          }
          case 146: {
            if (legacyAbac_ == null) {
              LegacyAbac = new global::Google.Cloud.Container.V1.LegacyAbac();
            }
            input.ReadMessage(LegacyAbac);
            break;
          }
          case 154: {
            if (networkPolicy_ == null) {
              NetworkPolicy = new global::Google.Cloud.Container.V1.NetworkPolicy();
            }
            input.ReadMessage(NetworkPolicy);
            break;
          }
          case 162: {
            if (ipAllocationPolicy_ == null) {
              IpAllocationPolicy = new global::Google.Cloud.Container.V1.IPAllocationPolicy();
            }
            input.ReadMessage(IpAllocationPolicy);
            break;
          }
          case 178: {
            if (masterAuthorizedNetworksConfig_ == null) {
              MasterAuthorizedNetworksConfig = new global::Google.Cloud.Container.V1.MasterAuthorizedNetworksConfig();
            }
            input.ReadMessage(MasterAuthorizedNetworksConfig);
            break;
          }
          case 186: {
            if (maintenancePolicy_ == null) {
              MaintenancePolicy = new global::Google.Cloud.Container.V1.MaintenancePolicy();
            }
            input.ReadMessage(MaintenancePolicy);
            break;
          }
          case 194: {
            if (binaryAuthorization_ == null) {
              BinaryAuthorization = new global::Google.Cloud.Container.V1.BinaryAuthorization();
            }
            input.ReadMessage(BinaryAuthorization);
            break;
          }
          case 210: {
            if (autoscaling_ == null) {
              Autoscaling = new global::Google.Cloud.Container.V1.ClusterAutoscaling();
            }
            input.ReadMessage(Autoscaling);
            break;
          }
          case 218: {
            if (networkConfig_ == null) {
              NetworkConfig = new global::Google.Cloud.Container.V1.NetworkConfig();
            }
            input.ReadMessage(NetworkConfig);
            break;
          }
          case 242: {
            if (defaultMaxPodsConstraint_ == null) {
              DefaultMaxPodsConstraint = new global::Google.Cloud.Container.V1.MaxPodsConstraint();
            }
            input.ReadMessage(DefaultMaxPodsConstraint);
            break;
          }
          case 266: {
            if (resourceUsageExportConfig_ == null) {
              ResourceUsageExportConfig = new global::Google.Cloud.Container.V1.ResourceUsageExportConfig();
            }
            input.ReadMessage(ResourceUsageExportConfig);
            break;
          }
          case 274: {
            if (authenticatorGroupsConfig_ == null) {
              AuthenticatorGroupsConfig = new global::Google.Cloud.Container.V1.AuthenticatorGroupsConfig();
            }
            input.ReadMessage(AuthenticatorGroupsConfig);
            break;
          }
          case 298: {
            if (privateClusterConfig_ == null) {
              PrivateClusterConfig = new global::Google.Cloud.Container.V1.PrivateClusterConfig();
            }
            input.ReadMessage(PrivateClusterConfig);
            break;
          }
          case 306: {
            if (databaseEncryption_ == null) {
              DatabaseEncryption = new global::Google.Cloud.Container.V1.DatabaseEncryption();
            }
            input.ReadMessage(DatabaseEncryption);
            break;
          }
          case 314: {
            if (verticalPodAutoscaling_ == null) {
              VerticalPodAutoscaling = new global::Google.Cloud.Container.V1.VerticalPodAutoscaling();
            }
            input.ReadMessage(VerticalPodAutoscaling);
            break;
          }
          case 802: {
            SelfLink = input.ReadString();
            break;
          }
          case 810: {
            Zone = input.ReadString();
            break;
          }
          case 818: {
            Endpoint = input.ReadString();
            break;
          }
          case 826: {
            InitialClusterVersion = input.ReadString();
            break;
          }
          case 834: {
            CurrentMasterVersion = input.ReadString();
            break;
          }
          case 842: {
            CurrentNodeVersion = input.ReadString();
            break;
          }
          case 850: {
            CreateTime = input.ReadString();
            break;
          }
          case 856: {
            Status = (global::Google.Cloud.Container.V1.Cluster.Types.Status) input.ReadEnum();
            break;
          }
          case 866: {
            StatusMessage = input.ReadString();
            break;
          }
          case 872: {
            NodeIpv4CidrSize = input.ReadInt32();
            break;
          }
          case 882: {
            ServicesIpv4Cidr = input.ReadString();
            break;
          }
          case 890: {
            instanceGroupUrls_.AddEntriesFrom(input, _repeated_instanceGroupUrls_codec);
            break;
          }
          case 896: {
            CurrentNodeCount = input.ReadInt32();
            break;
          }
          case 906: {
            ExpireTime = input.ReadString();
            break;
          }
          case 914: {
            Location = input.ReadString();
            break;
          }
          case 920: {
            EnableTpu = input.ReadBool();
            break;
          }
          case 930: {
            TpuIpv4CidrBlock = input.ReadString();
            break;
          }
          case 946: {
            conditions_.AddEntriesFrom(input, _repeated_conditions_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Cluster message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// The current status of the cluster.
      /// </summary>
      public enum Status {
        /// <summary>
        /// Not set.
        /// </summary>
        [pbr::OriginalName("STATUS_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// The PROVISIONING state indicates the cluster is being created.
        /// </summary>
        [pbr::OriginalName("PROVISIONING")] Provisioning = 1,
        /// <summary>
        /// The RUNNING state indicates the cluster has been created and is fully
        /// usable.
        /// </summary>
        [pbr::OriginalName("RUNNING")] Running = 2,
        /// <summary>
        /// The RECONCILING state indicates that some work is actively being done on
        /// the cluster, such as upgrading the master or node software. Details can
        /// be found in the `statusMessage` field.
        /// </summary>
        [pbr::OriginalName("RECONCILING")] Reconciling = 3,
        /// <summary>
        /// The STOPPING state indicates the cluster is being deleted.
        /// </summary>
        [pbr::OriginalName("STOPPING")] Stopping = 4,
        /// <summary>
        /// The ERROR state indicates the cluster may be unusable. Details
        /// can be found in the `statusMessage` field.
        /// </summary>
        [pbr::OriginalName("ERROR")] Error = 5,
        /// <summary>
        /// The DEGRADED state indicates the cluster requires user action to restore
        /// full functionality. Details can be found in the `statusMessage` field.
        /// </summary>
        [pbr::OriginalName("DEGRADED")] Degraded = 6,
      }

    }
    #endregion

  }

  /// <summary>
  /// ClusterUpdate describes an update to the cluster. Exactly one update can
  /// be applied to a cluster with each request, so at most one field can be
  /// provided.
  /// </summary>
  public sealed partial class ClusterUpdate : pb::IMessage<ClusterUpdate> {
    private static readonly pb::MessageParser<ClusterUpdate> _parser = new pb::MessageParser<ClusterUpdate>(() => new ClusterUpdate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClusterUpdate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClusterUpdate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClusterUpdate(ClusterUpdate other) : this() {
      desiredNodeVersion_ = other.desiredNodeVersion_;
      desiredMonitoringService_ = other.desiredMonitoringService_;
      desiredAddonsConfig_ = other.desiredAddonsConfig_ != null ? other.desiredAddonsConfig_.Clone() : null;
      desiredNodePoolId_ = other.desiredNodePoolId_;
      desiredImageType_ = other.desiredImageType_;
      desiredDatabaseEncryption_ = other.desiredDatabaseEncryption_ != null ? other.desiredDatabaseEncryption_.Clone() : null;
      desiredNodePoolAutoscaling_ = other.desiredNodePoolAutoscaling_ != null ? other.desiredNodePoolAutoscaling_.Clone() : null;
      desiredLocations_ = other.desiredLocations_.Clone();
      desiredMasterAuthorizedNetworksConfig_ = other.desiredMasterAuthorizedNetworksConfig_ != null ? other.desiredMasterAuthorizedNetworksConfig_.Clone() : null;
      desiredClusterAutoscaling_ = other.desiredClusterAutoscaling_ != null ? other.desiredClusterAutoscaling_.Clone() : null;
      desiredBinaryAuthorization_ = other.desiredBinaryAuthorization_ != null ? other.desiredBinaryAuthorization_.Clone() : null;
      desiredLoggingService_ = other.desiredLoggingService_;
      desiredResourceUsageExportConfig_ = other.desiredResourceUsageExportConfig_ != null ? other.desiredResourceUsageExportConfig_.Clone() : null;
      desiredVerticalPodAutoscaling_ = other.desiredVerticalPodAutoscaling_ != null ? other.desiredVerticalPodAutoscaling_.Clone() : null;
      desiredIntraNodeVisibilityConfig_ = other.desiredIntraNodeVisibilityConfig_ != null ? other.desiredIntraNodeVisibilityConfig_.Clone() : null;
      desiredMasterVersion_ = other.desiredMasterVersion_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClusterUpdate Clone() {
      return new ClusterUpdate(this);
    }

    /// <summary>Field number for the "desired_node_version" field.</summary>
    public const int DesiredNodeVersionFieldNumber = 4;
    private string desiredNodeVersion_ = "";
    /// <summary>
    /// The Kubernetes version to change the nodes to (typically an
    /// upgrade).
    ///
    /// Users may specify either explicit versions offered by
    /// Kubernetes Engine or version aliases, which have the following behavior:
    ///
    /// - "latest": picks the highest valid Kubernetes version
    /// - "1.X": picks the highest valid patch+gke.N patch in the 1.X version
    /// - "1.X.Y": picks the highest valid gke.N patch in the 1.X.Y version
    /// - "1.X.Y-gke.N": picks an explicit Kubernetes version
    /// - "-": picks the Kubernetes master version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DesiredNodeVersion {
      get { return desiredNodeVersion_; }
      set {
        desiredNodeVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "desired_monitoring_service" field.</summary>
    public const int DesiredMonitoringServiceFieldNumber = 5;
    private string desiredMonitoringService_ = "";
    /// <summary>
    /// The monitoring service the cluster should use to write metrics.
    /// Currently available options:
    ///
    /// * "monitoring.googleapis.com/kubernetes" - the Google Cloud Monitoring
    /// service with Kubernetes-native resource model
    /// * "monitoring.googleapis.com" - the Google Cloud Monitoring service
    /// * "none" - no metrics will be exported from the cluster
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DesiredMonitoringService {
      get { return desiredMonitoringService_; }
      set {
        desiredMonitoringService_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "desired_addons_config" field.</summary>
    public const int DesiredAddonsConfigFieldNumber = 6;
    private global::Google.Cloud.Container.V1.AddonsConfig desiredAddonsConfig_;
    /// <summary>
    /// Configurations for the various addons available to run in the cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.AddonsConfig DesiredAddonsConfig {
      get { return desiredAddonsConfig_; }
      set {
        desiredAddonsConfig_ = value;
      }
    }

    /// <summary>Field number for the "desired_node_pool_id" field.</summary>
    public const int DesiredNodePoolIdFieldNumber = 7;
    private string desiredNodePoolId_ = "";
    /// <summary>
    /// The node pool to be upgraded. This field is mandatory if
    /// "desired_node_version", "desired_image_family" or
    /// "desired_node_pool_autoscaling" is specified and there is more than one
    /// node pool on the cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DesiredNodePoolId {
      get { return desiredNodePoolId_; }
      set {
        desiredNodePoolId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "desired_image_type" field.</summary>
    public const int DesiredImageTypeFieldNumber = 8;
    private string desiredImageType_ = "";
    /// <summary>
    /// The desired image type for the node pool.
    /// NOTE: Set the "desired_node_pool" field as well.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DesiredImageType {
      get { return desiredImageType_; }
      set {
        desiredImageType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "desired_database_encryption" field.</summary>
    public const int DesiredDatabaseEncryptionFieldNumber = 46;
    private global::Google.Cloud.Container.V1.DatabaseEncryption desiredDatabaseEncryption_;
    /// <summary>
    /// Configuration of etcd encryption.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.DatabaseEncryption DesiredDatabaseEncryption {
      get { return desiredDatabaseEncryption_; }
      set {
        desiredDatabaseEncryption_ = value;
      }
    }

    /// <summary>Field number for the "desired_node_pool_autoscaling" field.</summary>
    public const int DesiredNodePoolAutoscalingFieldNumber = 9;
    private global::Google.Cloud.Container.V1.NodePoolAutoscaling desiredNodePoolAutoscaling_;
    /// <summary>
    /// Autoscaler configuration for the node pool specified in
    /// desired_node_pool_id. If there is only one pool in the
    /// cluster and desired_node_pool_id is not provided then
    /// the change applies to that single node pool.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.NodePoolAutoscaling DesiredNodePoolAutoscaling {
      get { return desiredNodePoolAutoscaling_; }
      set {
        desiredNodePoolAutoscaling_ = value;
      }
    }

    /// <summary>Field number for the "desired_locations" field.</summary>
    public const int DesiredLocationsFieldNumber = 10;
    private static readonly pb::FieldCodec<string> _repeated_desiredLocations_codec
        = pb::FieldCodec.ForString(82);
    private readonly pbc::RepeatedField<string> desiredLocations_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// The desired list of Google Compute Engine
    /// [zones](https://cloud.google.com/compute/docs/zones#available) in which the cluster's nodes
    /// should be located. Changing the locations a cluster is in will result
    /// in nodes being either created or removed from the cluster, depending on
    /// whether locations are being added or removed.
    ///
    /// This list must always include the cluster's primary zone.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> DesiredLocations {
      get { return desiredLocations_; }
    }

    /// <summary>Field number for the "desired_master_authorized_networks_config" field.</summary>
    public const int DesiredMasterAuthorizedNetworksConfigFieldNumber = 12;
    private global::Google.Cloud.Container.V1.MasterAuthorizedNetworksConfig desiredMasterAuthorizedNetworksConfig_;
    /// <summary>
    /// The desired configuration options for master authorized networks feature.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.MasterAuthorizedNetworksConfig DesiredMasterAuthorizedNetworksConfig {
      get { return desiredMasterAuthorizedNetworksConfig_; }
      set {
        desiredMasterAuthorizedNetworksConfig_ = value;
      }
    }

    /// <summary>Field number for the "desired_cluster_autoscaling" field.</summary>
    public const int DesiredClusterAutoscalingFieldNumber = 15;
    private global::Google.Cloud.Container.V1.ClusterAutoscaling desiredClusterAutoscaling_;
    /// <summary>
    /// Cluster-level autoscaling configuration.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.ClusterAutoscaling DesiredClusterAutoscaling {
      get { return desiredClusterAutoscaling_; }
      set {
        desiredClusterAutoscaling_ = value;
      }
    }

    /// <summary>Field number for the "desired_binary_authorization" field.</summary>
    public const int DesiredBinaryAuthorizationFieldNumber = 16;
    private global::Google.Cloud.Container.V1.BinaryAuthorization desiredBinaryAuthorization_;
    /// <summary>
    /// The desired configuration options for the Binary Authorization feature.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.BinaryAuthorization DesiredBinaryAuthorization {
      get { return desiredBinaryAuthorization_; }
      set {
        desiredBinaryAuthorization_ = value;
      }
    }

    /// <summary>Field number for the "desired_logging_service" field.</summary>
    public const int DesiredLoggingServiceFieldNumber = 19;
    private string desiredLoggingService_ = "";
    /// <summary>
    /// The logging service the cluster should use to write logs.
    /// Currently available options:
    ///
    /// * "logging.googleapis.com/kubernetes" - the Google Cloud Logging
    /// service with Kubernetes-native resource model
    /// * "logging.googleapis.com" - the Google Cloud Logging service
    /// * "none" - no logs will be exported from the cluster
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DesiredLoggingService {
      get { return desiredLoggingService_; }
      set {
        desiredLoggingService_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "desired_resource_usage_export_config" field.</summary>
    public const int DesiredResourceUsageExportConfigFieldNumber = 21;
    private global::Google.Cloud.Container.V1.ResourceUsageExportConfig desiredResourceUsageExportConfig_;
    /// <summary>
    /// The desired configuration for exporting resource usage.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.ResourceUsageExportConfig DesiredResourceUsageExportConfig {
      get { return desiredResourceUsageExportConfig_; }
      set {
        desiredResourceUsageExportConfig_ = value;
      }
    }

    /// <summary>Field number for the "desired_vertical_pod_autoscaling" field.</summary>
    public const int DesiredVerticalPodAutoscalingFieldNumber = 22;
    private global::Google.Cloud.Container.V1.VerticalPodAutoscaling desiredVerticalPodAutoscaling_;
    /// <summary>
    /// Cluster-level Vertical Pod Autoscaling configuration.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.VerticalPodAutoscaling DesiredVerticalPodAutoscaling {
      get { return desiredVerticalPodAutoscaling_; }
      set {
        desiredVerticalPodAutoscaling_ = value;
      }
    }

    /// <summary>Field number for the "desired_intra_node_visibility_config" field.</summary>
    public const int DesiredIntraNodeVisibilityConfigFieldNumber = 26;
    private global::Google.Cloud.Container.V1.IntraNodeVisibilityConfig desiredIntraNodeVisibilityConfig_;
    /// <summary>
    /// The desired config of Intra-node visibility.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.IntraNodeVisibilityConfig DesiredIntraNodeVisibilityConfig {
      get { return desiredIntraNodeVisibilityConfig_; }
      set {
        desiredIntraNodeVisibilityConfig_ = value;
      }
    }

    /// <summary>Field number for the "desired_master_version" field.</summary>
    public const int DesiredMasterVersionFieldNumber = 100;
    private string desiredMasterVersion_ = "";
    /// <summary>
    /// The Kubernetes version to change the master to.
    ///
    /// Users may specify either explicit versions offered by
    /// Kubernetes Engine or version aliases, which have the following behavior:
    ///
    /// - "latest": picks the highest valid Kubernetes version
    /// - "1.X": picks the highest valid patch+gke.N patch in the 1.X version
    /// - "1.X.Y": picks the highest valid gke.N patch in the 1.X.Y version
    /// - "1.X.Y-gke.N": picks an explicit Kubernetes version
    /// - "-": picks the default Kubernetes version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DesiredMasterVersion {
      get { return desiredMasterVersion_; }
      set {
        desiredMasterVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClusterUpdate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClusterUpdate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DesiredNodeVersion != other.DesiredNodeVersion) return false;
      if (DesiredMonitoringService != other.DesiredMonitoringService) return false;
      if (!object.Equals(DesiredAddonsConfig, other.DesiredAddonsConfig)) return false;
      if (DesiredNodePoolId != other.DesiredNodePoolId) return false;
      if (DesiredImageType != other.DesiredImageType) return false;
      if (!object.Equals(DesiredDatabaseEncryption, other.DesiredDatabaseEncryption)) return false;
      if (!object.Equals(DesiredNodePoolAutoscaling, other.DesiredNodePoolAutoscaling)) return false;
      if(!desiredLocations_.Equals(other.desiredLocations_)) return false;
      if (!object.Equals(DesiredMasterAuthorizedNetworksConfig, other.DesiredMasterAuthorizedNetworksConfig)) return false;
      if (!object.Equals(DesiredClusterAutoscaling, other.DesiredClusterAutoscaling)) return false;
      if (!object.Equals(DesiredBinaryAuthorization, other.DesiredBinaryAuthorization)) return false;
      if (DesiredLoggingService != other.DesiredLoggingService) return false;
      if (!object.Equals(DesiredResourceUsageExportConfig, other.DesiredResourceUsageExportConfig)) return false;
      if (!object.Equals(DesiredVerticalPodAutoscaling, other.DesiredVerticalPodAutoscaling)) return false;
      if (!object.Equals(DesiredIntraNodeVisibilityConfig, other.DesiredIntraNodeVisibilityConfig)) return false;
      if (DesiredMasterVersion != other.DesiredMasterVersion) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DesiredNodeVersion.Length != 0) hash ^= DesiredNodeVersion.GetHashCode();
      if (DesiredMonitoringService.Length != 0) hash ^= DesiredMonitoringService.GetHashCode();
      if (desiredAddonsConfig_ != null) hash ^= DesiredAddonsConfig.GetHashCode();
      if (DesiredNodePoolId.Length != 0) hash ^= DesiredNodePoolId.GetHashCode();
      if (DesiredImageType.Length != 0) hash ^= DesiredImageType.GetHashCode();
      if (desiredDatabaseEncryption_ != null) hash ^= DesiredDatabaseEncryption.GetHashCode();
      if (desiredNodePoolAutoscaling_ != null) hash ^= DesiredNodePoolAutoscaling.GetHashCode();
      hash ^= desiredLocations_.GetHashCode();
      if (desiredMasterAuthorizedNetworksConfig_ != null) hash ^= DesiredMasterAuthorizedNetworksConfig.GetHashCode();
      if (desiredClusterAutoscaling_ != null) hash ^= DesiredClusterAutoscaling.GetHashCode();
      if (desiredBinaryAuthorization_ != null) hash ^= DesiredBinaryAuthorization.GetHashCode();
      if (DesiredLoggingService.Length != 0) hash ^= DesiredLoggingService.GetHashCode();
      if (desiredResourceUsageExportConfig_ != null) hash ^= DesiredResourceUsageExportConfig.GetHashCode();
      if (desiredVerticalPodAutoscaling_ != null) hash ^= DesiredVerticalPodAutoscaling.GetHashCode();
      if (desiredIntraNodeVisibilityConfig_ != null) hash ^= DesiredIntraNodeVisibilityConfig.GetHashCode();
      if (DesiredMasterVersion.Length != 0) hash ^= DesiredMasterVersion.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (DesiredNodeVersion.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(DesiredNodeVersion);
      }
      if (DesiredMonitoringService.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(DesiredMonitoringService);
      }
      if (desiredAddonsConfig_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(DesiredAddonsConfig);
      }
      if (DesiredNodePoolId.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(DesiredNodePoolId);
      }
      if (DesiredImageType.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(DesiredImageType);
      }
      if (desiredNodePoolAutoscaling_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(DesiredNodePoolAutoscaling);
      }
      desiredLocations_.WriteTo(output, _repeated_desiredLocations_codec);
      if (desiredMasterAuthorizedNetworksConfig_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(DesiredMasterAuthorizedNetworksConfig);
      }
      if (desiredClusterAutoscaling_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(DesiredClusterAutoscaling);
      }
      if (desiredBinaryAuthorization_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(DesiredBinaryAuthorization);
      }
      if (DesiredLoggingService.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(DesiredLoggingService);
      }
      if (desiredResourceUsageExportConfig_ != null) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(DesiredResourceUsageExportConfig);
      }
      if (desiredVerticalPodAutoscaling_ != null) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(DesiredVerticalPodAutoscaling);
      }
      if (desiredIntraNodeVisibilityConfig_ != null) {
        output.WriteRawTag(210, 1);
        output.WriteMessage(DesiredIntraNodeVisibilityConfig);
      }
      if (desiredDatabaseEncryption_ != null) {
        output.WriteRawTag(242, 2);
        output.WriteMessage(DesiredDatabaseEncryption);
      }
      if (DesiredMasterVersion.Length != 0) {
        output.WriteRawTag(162, 6);
        output.WriteString(DesiredMasterVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DesiredNodeVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DesiredNodeVersion);
      }
      if (DesiredMonitoringService.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DesiredMonitoringService);
      }
      if (desiredAddonsConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DesiredAddonsConfig);
      }
      if (DesiredNodePoolId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DesiredNodePoolId);
      }
      if (DesiredImageType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DesiredImageType);
      }
      if (desiredDatabaseEncryption_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(DesiredDatabaseEncryption);
      }
      if (desiredNodePoolAutoscaling_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DesiredNodePoolAutoscaling);
      }
      size += desiredLocations_.CalculateSize(_repeated_desiredLocations_codec);
      if (desiredMasterAuthorizedNetworksConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DesiredMasterAuthorizedNetworksConfig);
      }
      if (desiredClusterAutoscaling_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DesiredClusterAutoscaling);
      }
      if (desiredBinaryAuthorization_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(DesiredBinaryAuthorization);
      }
      if (DesiredLoggingService.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(DesiredLoggingService);
      }
      if (desiredResourceUsageExportConfig_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(DesiredResourceUsageExportConfig);
      }
      if (desiredVerticalPodAutoscaling_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(DesiredVerticalPodAutoscaling);
      }
      if (desiredIntraNodeVisibilityConfig_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(DesiredIntraNodeVisibilityConfig);
      }
      if (DesiredMasterVersion.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(DesiredMasterVersion);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClusterUpdate other) {
      if (other == null) {
        return;
      }
      if (other.DesiredNodeVersion.Length != 0) {
        DesiredNodeVersion = other.DesiredNodeVersion;
      }
      if (other.DesiredMonitoringService.Length != 0) {
        DesiredMonitoringService = other.DesiredMonitoringService;
      }
      if (other.desiredAddonsConfig_ != null) {
        if (desiredAddonsConfig_ == null) {
          DesiredAddonsConfig = new global::Google.Cloud.Container.V1.AddonsConfig();
        }
        DesiredAddonsConfig.MergeFrom(other.DesiredAddonsConfig);
      }
      if (other.DesiredNodePoolId.Length != 0) {
        DesiredNodePoolId = other.DesiredNodePoolId;
      }
      if (other.DesiredImageType.Length != 0) {
        DesiredImageType = other.DesiredImageType;
      }
      if (other.desiredDatabaseEncryption_ != null) {
        if (desiredDatabaseEncryption_ == null) {
          DesiredDatabaseEncryption = new global::Google.Cloud.Container.V1.DatabaseEncryption();
        }
        DesiredDatabaseEncryption.MergeFrom(other.DesiredDatabaseEncryption);
      }
      if (other.desiredNodePoolAutoscaling_ != null) {
        if (desiredNodePoolAutoscaling_ == null) {
          DesiredNodePoolAutoscaling = new global::Google.Cloud.Container.V1.NodePoolAutoscaling();
        }
        DesiredNodePoolAutoscaling.MergeFrom(other.DesiredNodePoolAutoscaling);
      }
      desiredLocations_.Add(other.desiredLocations_);
      if (other.desiredMasterAuthorizedNetworksConfig_ != null) {
        if (desiredMasterAuthorizedNetworksConfig_ == null) {
          DesiredMasterAuthorizedNetworksConfig = new global::Google.Cloud.Container.V1.MasterAuthorizedNetworksConfig();
        }
        DesiredMasterAuthorizedNetworksConfig.MergeFrom(other.DesiredMasterAuthorizedNetworksConfig);
      }
      if (other.desiredClusterAutoscaling_ != null) {
        if (desiredClusterAutoscaling_ == null) {
          DesiredClusterAutoscaling = new global::Google.Cloud.Container.V1.ClusterAutoscaling();
        }
        DesiredClusterAutoscaling.MergeFrom(other.DesiredClusterAutoscaling);
      }
      if (other.desiredBinaryAuthorization_ != null) {
        if (desiredBinaryAuthorization_ == null) {
          DesiredBinaryAuthorization = new global::Google.Cloud.Container.V1.BinaryAuthorization();
        }
        DesiredBinaryAuthorization.MergeFrom(other.DesiredBinaryAuthorization);
      }
      if (other.DesiredLoggingService.Length != 0) {
        DesiredLoggingService = other.DesiredLoggingService;
      }
      if (other.desiredResourceUsageExportConfig_ != null) {
        if (desiredResourceUsageExportConfig_ == null) {
          DesiredResourceUsageExportConfig = new global::Google.Cloud.Container.V1.ResourceUsageExportConfig();
        }
        DesiredResourceUsageExportConfig.MergeFrom(other.DesiredResourceUsageExportConfig);
      }
      if (other.desiredVerticalPodAutoscaling_ != null) {
        if (desiredVerticalPodAutoscaling_ == null) {
          DesiredVerticalPodAutoscaling = new global::Google.Cloud.Container.V1.VerticalPodAutoscaling();
        }
        DesiredVerticalPodAutoscaling.MergeFrom(other.DesiredVerticalPodAutoscaling);
      }
      if (other.desiredIntraNodeVisibilityConfig_ != null) {
        if (desiredIntraNodeVisibilityConfig_ == null) {
          DesiredIntraNodeVisibilityConfig = new global::Google.Cloud.Container.V1.IntraNodeVisibilityConfig();
        }
        DesiredIntraNodeVisibilityConfig.MergeFrom(other.DesiredIntraNodeVisibilityConfig);
      }
      if (other.DesiredMasterVersion.Length != 0) {
        DesiredMasterVersion = other.DesiredMasterVersion;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 34: {
            DesiredNodeVersion = input.ReadString();
            break;
          }
          case 42: {
            DesiredMonitoringService = input.ReadString();
            break;
          }
          case 50: {
            if (desiredAddonsConfig_ == null) {
              DesiredAddonsConfig = new global::Google.Cloud.Container.V1.AddonsConfig();
            }
            input.ReadMessage(DesiredAddonsConfig);
            break;
          }
          case 58: {
            DesiredNodePoolId = input.ReadString();
            break;
          }
          case 66: {
            DesiredImageType = input.ReadString();
            break;
          }
          case 74: {
            if (desiredNodePoolAutoscaling_ == null) {
              DesiredNodePoolAutoscaling = new global::Google.Cloud.Container.V1.NodePoolAutoscaling();
            }
            input.ReadMessage(DesiredNodePoolAutoscaling);
            break;
          }
          case 82: {
            desiredLocations_.AddEntriesFrom(input, _repeated_desiredLocations_codec);
            break;
          }
          case 98: {
            if (desiredMasterAuthorizedNetworksConfig_ == null) {
              DesiredMasterAuthorizedNetworksConfig = new global::Google.Cloud.Container.V1.MasterAuthorizedNetworksConfig();
            }
            input.ReadMessage(DesiredMasterAuthorizedNetworksConfig);
            break;
          }
          case 122: {
            if (desiredClusterAutoscaling_ == null) {
              DesiredClusterAutoscaling = new global::Google.Cloud.Container.V1.ClusterAutoscaling();
            }
            input.ReadMessage(DesiredClusterAutoscaling);
            break;
          }
          case 130: {
            if (desiredBinaryAuthorization_ == null) {
              DesiredBinaryAuthorization = new global::Google.Cloud.Container.V1.BinaryAuthorization();
            }
            input.ReadMessage(DesiredBinaryAuthorization);
            break;
          }
          case 154: {
            DesiredLoggingService = input.ReadString();
            break;
          }
          case 170: {
            if (desiredResourceUsageExportConfig_ == null) {
              DesiredResourceUsageExportConfig = new global::Google.Cloud.Container.V1.ResourceUsageExportConfig();
            }
            input.ReadMessage(DesiredResourceUsageExportConfig);
            break;
          }
          case 178: {
            if (desiredVerticalPodAutoscaling_ == null) {
              DesiredVerticalPodAutoscaling = new global::Google.Cloud.Container.V1.VerticalPodAutoscaling();
            }
            input.ReadMessage(DesiredVerticalPodAutoscaling);
            break;
          }
          case 210: {
            if (desiredIntraNodeVisibilityConfig_ == null) {
              DesiredIntraNodeVisibilityConfig = new global::Google.Cloud.Container.V1.IntraNodeVisibilityConfig();
            }
            input.ReadMessage(DesiredIntraNodeVisibilityConfig);
            break;
          }
          case 370: {
            if (desiredDatabaseEncryption_ == null) {
              DesiredDatabaseEncryption = new global::Google.Cloud.Container.V1.DatabaseEncryption();
            }
            input.ReadMessage(DesiredDatabaseEncryption);
            break;
          }
          case 802: {
            DesiredMasterVersion = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// This operation resource represents operations that may have happened or are
  /// happening on the cluster. All fields are output only.
  /// </summary>
  public sealed partial class Operation : pb::IMessage<Operation> {
    private static readonly pb::MessageParser<Operation> _parser = new pb::MessageParser<Operation>(() => new Operation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Operation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Operation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Operation(Operation other) : this() {
      name_ = other.name_;
      zone_ = other.zone_;
      operationType_ = other.operationType_;
      status_ = other.status_;
      detail_ = other.detail_;
      statusMessage_ = other.statusMessage_;
      selfLink_ = other.selfLink_;
      targetLink_ = other.targetLink_;
      location_ = other.location_;
      startTime_ = other.startTime_;
      endTime_ = other.endTime_;
      clusterConditions_ = other.clusterConditions_.Clone();
      nodepoolConditions_ = other.nodepoolConditions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Operation Clone() {
      return new Operation(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// The server-assigned ID for the operation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "zone" field.</summary>
    public const int ZoneFieldNumber = 2;
    private string zone_ = "";
    /// <summary>
    /// The name of the Google Compute Engine
    /// [zone](https://cloud.google.com/compute/docs/zones#available) in which the operation
    /// is taking place.
    /// This field is deprecated, use location instead.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Zone {
      get { return zone_; }
      set {
        zone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "operation_type" field.</summary>
    public const int OperationTypeFieldNumber = 3;
    private global::Google.Cloud.Container.V1.Operation.Types.Type operationType_ = 0;
    /// <summary>
    /// The operation type.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.Operation.Types.Type OperationType {
      get { return operationType_; }
      set {
        operationType_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 4;
    private global::Google.Cloud.Container.V1.Operation.Types.Status status_ = 0;
    /// <summary>
    /// The current status of the operation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.Operation.Types.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "detail" field.</summary>
    public const int DetailFieldNumber = 8;
    private string detail_ = "";
    /// <summary>
    /// Detailed operation progress, if available.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Detail {
      get { return detail_; }
      set {
        detail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "status_message" field.</summary>
    public const int StatusMessageFieldNumber = 5;
    private string statusMessage_ = "";
    /// <summary>
    /// If an error has occurred, a textual description of the error.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StatusMessage {
      get { return statusMessage_; }
      set {
        statusMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "self_link" field.</summary>
    public const int SelfLinkFieldNumber = 6;
    private string selfLink_ = "";
    /// <summary>
    /// Server-defined URL for the resource.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SelfLink {
      get { return selfLink_; }
      set {
        selfLink_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "target_link" field.</summary>
    public const int TargetLinkFieldNumber = 7;
    private string targetLink_ = "";
    /// <summary>
    /// Server-defined URL for the target of the operation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TargetLink {
      get { return targetLink_; }
      set {
        targetLink_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "location" field.</summary>
    public const int LocationFieldNumber = 9;
    private string location_ = "";
    /// <summary>
    /// [Output only] The name of the Google Compute Engine
    /// [zone](https://cloud.google.com/compute/docs/regions-zones/regions-zones#available) or
    /// [region](https://cloud.google.com/compute/docs/regions-zones/regions-zones#available) in which
    /// the cluster resides.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Location {
      get { return location_; }
      set {
        location_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "start_time" field.</summary>
    public const int StartTimeFieldNumber = 10;
    private string startTime_ = "";
    /// <summary>
    /// [Output only] The time the operation started, in
    /// [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StartTime {
      get { return startTime_; }
      set {
        startTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "end_time" field.</summary>
    public const int EndTimeFieldNumber = 11;
    private string endTime_ = "";
    /// <summary>
    /// [Output only] The time the operation completed, in
    /// [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EndTime {
      get { return endTime_; }
      set {
        endTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cluster_conditions" field.</summary>
    public const int ClusterConditionsFieldNumber = 13;
    private static readonly pb::FieldCodec<global::Google.Cloud.Container.V1.StatusCondition> _repeated_clusterConditions_codec
        = pb::FieldCodec.ForMessage(106, global::Google.Cloud.Container.V1.StatusCondition.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Container.V1.StatusCondition> clusterConditions_ = new pbc::RepeatedField<global::Google.Cloud.Container.V1.StatusCondition>();
    /// <summary>
    /// Which conditions caused the current cluster state.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Container.V1.StatusCondition> ClusterConditions {
      get { return clusterConditions_; }
    }

    /// <summary>Field number for the "nodepool_conditions" field.</summary>
    public const int NodepoolConditionsFieldNumber = 14;
    private static readonly pb::FieldCodec<global::Google.Cloud.Container.V1.StatusCondition> _repeated_nodepoolConditions_codec
        = pb::FieldCodec.ForMessage(114, global::Google.Cloud.Container.V1.StatusCondition.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Container.V1.StatusCondition> nodepoolConditions_ = new pbc::RepeatedField<global::Google.Cloud.Container.V1.StatusCondition>();
    /// <summary>
    /// Which conditions caused the current node pool state.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Container.V1.StatusCondition> NodepoolConditions {
      get { return nodepoolConditions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Operation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Operation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Zone != other.Zone) return false;
      if (OperationType != other.OperationType) return false;
      if (Status != other.Status) return false;
      if (Detail != other.Detail) return false;
      if (StatusMessage != other.StatusMessage) return false;
      if (SelfLink != other.SelfLink) return false;
      if (TargetLink != other.TargetLink) return false;
      if (Location != other.Location) return false;
      if (StartTime != other.StartTime) return false;
      if (EndTime != other.EndTime) return false;
      if(!clusterConditions_.Equals(other.clusterConditions_)) return false;
      if(!nodepoolConditions_.Equals(other.nodepoolConditions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Zone.Length != 0) hash ^= Zone.GetHashCode();
      if (OperationType != 0) hash ^= OperationType.GetHashCode();
      if (Status != 0) hash ^= Status.GetHashCode();
      if (Detail.Length != 0) hash ^= Detail.GetHashCode();
      if (StatusMessage.Length != 0) hash ^= StatusMessage.GetHashCode();
      if (SelfLink.Length != 0) hash ^= SelfLink.GetHashCode();
      if (TargetLink.Length != 0) hash ^= TargetLink.GetHashCode();
      if (Location.Length != 0) hash ^= Location.GetHashCode();
      if (StartTime.Length != 0) hash ^= StartTime.GetHashCode();
      if (EndTime.Length != 0) hash ^= EndTime.GetHashCode();
      hash ^= clusterConditions_.GetHashCode();
      hash ^= nodepoolConditions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Zone.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Zone);
      }
      if (OperationType != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) OperationType);
      }
      if (Status != 0) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Status);
      }
      if (StatusMessage.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(StatusMessage);
      }
      if (SelfLink.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(SelfLink);
      }
      if (TargetLink.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(TargetLink);
      }
      if (Detail.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Detail);
      }
      if (Location.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Location);
      }
      if (StartTime.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(StartTime);
      }
      if (EndTime.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(EndTime);
      }
      clusterConditions_.WriteTo(output, _repeated_clusterConditions_codec);
      nodepoolConditions_.WriteTo(output, _repeated_nodepoolConditions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Zone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Zone);
      }
      if (OperationType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) OperationType);
      }
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (Detail.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Detail);
      }
      if (StatusMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StatusMessage);
      }
      if (SelfLink.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SelfLink);
      }
      if (TargetLink.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TargetLink);
      }
      if (Location.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Location);
      }
      if (StartTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StartTime);
      }
      if (EndTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EndTime);
      }
      size += clusterConditions_.CalculateSize(_repeated_clusterConditions_codec);
      size += nodepoolConditions_.CalculateSize(_repeated_nodepoolConditions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Operation other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Zone.Length != 0) {
        Zone = other.Zone;
      }
      if (other.OperationType != 0) {
        OperationType = other.OperationType;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.Detail.Length != 0) {
        Detail = other.Detail;
      }
      if (other.StatusMessage.Length != 0) {
        StatusMessage = other.StatusMessage;
      }
      if (other.SelfLink.Length != 0) {
        SelfLink = other.SelfLink;
      }
      if (other.TargetLink.Length != 0) {
        TargetLink = other.TargetLink;
      }
      if (other.Location.Length != 0) {
        Location = other.Location;
      }
      if (other.StartTime.Length != 0) {
        StartTime = other.StartTime;
      }
      if (other.EndTime.Length != 0) {
        EndTime = other.EndTime;
      }
      clusterConditions_.Add(other.clusterConditions_);
      nodepoolConditions_.Add(other.nodepoolConditions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Zone = input.ReadString();
            break;
          }
          case 24: {
            OperationType = (global::Google.Cloud.Container.V1.Operation.Types.Type) input.ReadEnum();
            break;
          }
          case 32: {
            Status = (global::Google.Cloud.Container.V1.Operation.Types.Status) input.ReadEnum();
            break;
          }
          case 42: {
            StatusMessage = input.ReadString();
            break;
          }
          case 50: {
            SelfLink = input.ReadString();
            break;
          }
          case 58: {
            TargetLink = input.ReadString();
            break;
          }
          case 66: {
            Detail = input.ReadString();
            break;
          }
          case 74: {
            Location = input.ReadString();
            break;
          }
          case 82: {
            StartTime = input.ReadString();
            break;
          }
          case 90: {
            EndTime = input.ReadString();
            break;
          }
          case 106: {
            clusterConditions_.AddEntriesFrom(input, _repeated_clusterConditions_codec);
            break;
          }
          case 114: {
            nodepoolConditions_.AddEntriesFrom(input, _repeated_nodepoolConditions_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Operation message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Current status of the operation.
      /// </summary>
      public enum Status {
        /// <summary>
        /// Not set.
        /// </summary>
        [pbr::OriginalName("STATUS_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// The operation has been created.
        /// </summary>
        [pbr::OriginalName("PENDING")] Pending = 1,
        /// <summary>
        /// The operation is currently running.
        /// </summary>
        [pbr::OriginalName("RUNNING")] Running = 2,
        /// <summary>
        /// The operation is done, either cancelled or completed.
        /// </summary>
        [pbr::OriginalName("DONE")] Done = 3,
        /// <summary>
        /// The operation is aborting.
        /// </summary>
        [pbr::OriginalName("ABORTING")] Aborting = 4,
      }

      /// <summary>
      /// Operation type.
      /// </summary>
      public enum Type {
        /// <summary>
        /// Not set.
        /// </summary>
        [pbr::OriginalName("TYPE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Cluster create.
        /// </summary>
        [pbr::OriginalName("CREATE_CLUSTER")] CreateCluster = 1,
        /// <summary>
        /// Cluster delete.
        /// </summary>
        [pbr::OriginalName("DELETE_CLUSTER")] DeleteCluster = 2,
        /// <summary>
        /// A master upgrade.
        /// </summary>
        [pbr::OriginalName("UPGRADE_MASTER")] UpgradeMaster = 3,
        /// <summary>
        /// A node upgrade.
        /// </summary>
        [pbr::OriginalName("UPGRADE_NODES")] UpgradeNodes = 4,
        /// <summary>
        /// Cluster repair.
        /// </summary>
        [pbr::OriginalName("REPAIR_CLUSTER")] RepairCluster = 5,
        /// <summary>
        /// Cluster update.
        /// </summary>
        [pbr::OriginalName("UPDATE_CLUSTER")] UpdateCluster = 6,
        /// <summary>
        /// Node pool create.
        /// </summary>
        [pbr::OriginalName("CREATE_NODE_POOL")] CreateNodePool = 7,
        /// <summary>
        /// Node pool delete.
        /// </summary>
        [pbr::OriginalName("DELETE_NODE_POOL")] DeleteNodePool = 8,
        /// <summary>
        /// Set node pool management.
        /// </summary>
        [pbr::OriginalName("SET_NODE_POOL_MANAGEMENT")] SetNodePoolManagement = 9,
        /// <summary>
        /// Automatic node pool repair.
        /// </summary>
        [pbr::OriginalName("AUTO_REPAIR_NODES")] AutoRepairNodes = 10,
        /// <summary>
        /// Automatic node upgrade.
        /// </summary>
        [pbr::OriginalName("AUTO_UPGRADE_NODES")] AutoUpgradeNodes = 11,
        /// <summary>
        /// Set labels.
        /// </summary>
        [pbr::OriginalName("SET_LABELS")] SetLabels = 12,
        /// <summary>
        /// Set/generate master auth materials
        /// </summary>
        [pbr::OriginalName("SET_MASTER_AUTH")] SetMasterAuth = 13,
        /// <summary>
        /// Set node pool size.
        /// </summary>
        [pbr::OriginalName("SET_NODE_POOL_SIZE")] SetNodePoolSize = 14,
        /// <summary>
        /// Updates network policy for a cluster.
        /// </summary>
        [pbr::OriginalName("SET_NETWORK_POLICY")] SetNetworkPolicy = 15,
        /// <summary>
        /// Set the maintenance policy.
        /// </summary>
        [pbr::OriginalName("SET_MAINTENANCE_POLICY")] SetMaintenancePolicy = 16,
      }

    }
    #endregion

  }

  /// <summary>
  /// CreateClusterRequest creates a cluster.
  /// </summary>
  public sealed partial class CreateClusterRequest : pb::IMessage<CreateClusterRequest> {
    private static readonly pb::MessageParser<CreateClusterRequest> _parser = new pb::MessageParser<CreateClusterRequest>(() => new CreateClusterRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateClusterRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateClusterRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateClusterRequest(CreateClusterRequest other) : this() {
      projectId_ = other.projectId_;
      zone_ = other.zone_;
      cluster_ = other.cluster_ != null ? other.cluster_.Clone() : null;
      parent_ = other.parent_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateClusterRequest Clone() {
      return new CreateClusterRequest(this);
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 1;
    private string projectId_ = "";
    /// <summary>
    /// Required. Deprecated. The Google Developers Console [project ID or project
    /// number](https://support.google.com/cloud/answer/6158840).
    /// This field has been deprecated and replaced by the parent field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "zone" field.</summary>
    public const int ZoneFieldNumber = 2;
    private string zone_ = "";
    /// <summary>
    /// Required. Deprecated. The name of the Google Compute Engine
    /// [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster
    /// resides.
    /// This field has been deprecated and replaced by the parent field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Zone {
      get { return zone_; }
      set {
        zone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cluster" field.</summary>
    public const int ClusterFieldNumber = 3;
    private global::Google.Cloud.Container.V1.Cluster cluster_;
    /// <summary>
    /// Required. A [cluster
    /// resource](https://cloud.google.com/container-engine/reference/rest/v1/projects.zones.clusters)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.Cluster Cluster {
      get { return cluster_; }
      set {
        cluster_ = value;
      }
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 5;
    private string parent_ = "";
    /// <summary>
    /// The parent (project and location) where the cluster will be created.
    /// Specified in the format 'projects/*/locations/*'.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateClusterRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateClusterRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProjectId != other.ProjectId) return false;
      if (Zone != other.Zone) return false;
      if (!object.Equals(Cluster, other.Cluster)) return false;
      if (Parent != other.Parent) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (Zone.Length != 0) hash ^= Zone.GetHashCode();
      if (cluster_ != null) hash ^= Cluster.GetHashCode();
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (Zone.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Zone);
      }
      if (cluster_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Cluster);
      }
      if (Parent.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Parent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (Zone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Zone);
      }
      if (cluster_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Cluster);
      }
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateClusterRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.Zone.Length != 0) {
        Zone = other.Zone;
      }
      if (other.cluster_ != null) {
        if (cluster_ == null) {
          Cluster = new global::Google.Cloud.Container.V1.Cluster();
        }
        Cluster.MergeFrom(other.Cluster);
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 18: {
            Zone = input.ReadString();
            break;
          }
          case 26: {
            if (cluster_ == null) {
              Cluster = new global::Google.Cloud.Container.V1.Cluster();
            }
            input.ReadMessage(Cluster);
            break;
          }
          case 42: {
            Parent = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// GetClusterRequest gets the settings of a cluster.
  /// </summary>
  public sealed partial class GetClusterRequest : pb::IMessage<GetClusterRequest> {
    private static readonly pb::MessageParser<GetClusterRequest> _parser = new pb::MessageParser<GetClusterRequest>(() => new GetClusterRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetClusterRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetClusterRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetClusterRequest(GetClusterRequest other) : this() {
      projectId_ = other.projectId_;
      zone_ = other.zone_;
      clusterId_ = other.clusterId_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetClusterRequest Clone() {
      return new GetClusterRequest(this);
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 1;
    private string projectId_ = "";
    /// <summary>
    /// Required. Deprecated. The Google Developers Console [project ID or project
    /// number](https://support.google.com/cloud/answer/6158840).
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "zone" field.</summary>
    public const int ZoneFieldNumber = 2;
    private string zone_ = "";
    /// <summary>
    /// Required. Deprecated. The name of the Google Compute Engine
    /// [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster
    /// resides.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Zone {
      get { return zone_; }
      set {
        zone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cluster_id" field.</summary>
    public const int ClusterIdFieldNumber = 3;
    private string clusterId_ = "";
    /// <summary>
    /// Required. Deprecated. The name of the cluster to retrieve.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterId {
      get { return clusterId_; }
      set {
        clusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 5;
    private string name_ = "";
    /// <summary>
    /// The name (project, location, cluster) of the cluster to retrieve.
    /// Specified in the format 'projects/*/locations/*/clusters/*'.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetClusterRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetClusterRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProjectId != other.ProjectId) return false;
      if (Zone != other.Zone) return false;
      if (ClusterId != other.ClusterId) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (Zone.Length != 0) hash ^= Zone.GetHashCode();
      if (ClusterId.Length != 0) hash ^= ClusterId.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (Zone.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Zone);
      }
      if (ClusterId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ClusterId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (Zone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Zone);
      }
      if (ClusterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterId);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetClusterRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.Zone.Length != 0) {
        Zone = other.Zone;
      }
      if (other.ClusterId.Length != 0) {
        ClusterId = other.ClusterId;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 18: {
            Zone = input.ReadString();
            break;
          }
          case 26: {
            ClusterId = input.ReadString();
            break;
          }
          case 42: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// UpdateClusterRequest updates the settings of a cluster.
  /// </summary>
  public sealed partial class UpdateClusterRequest : pb::IMessage<UpdateClusterRequest> {
    private static readonly pb::MessageParser<UpdateClusterRequest> _parser = new pb::MessageParser<UpdateClusterRequest>(() => new UpdateClusterRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateClusterRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateClusterRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateClusterRequest(UpdateClusterRequest other) : this() {
      projectId_ = other.projectId_;
      zone_ = other.zone_;
      clusterId_ = other.clusterId_;
      update_ = other.update_ != null ? other.update_.Clone() : null;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateClusterRequest Clone() {
      return new UpdateClusterRequest(this);
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 1;
    private string projectId_ = "";
    /// <summary>
    /// Required. Deprecated. The Google Developers Console [project ID or project
    /// number](https://support.google.com/cloud/answer/6158840).
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "zone" field.</summary>
    public const int ZoneFieldNumber = 2;
    private string zone_ = "";
    /// <summary>
    /// Required. Deprecated. The name of the Google Compute Engine
    /// [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster
    /// resides.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Zone {
      get { return zone_; }
      set {
        zone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cluster_id" field.</summary>
    public const int ClusterIdFieldNumber = 3;
    private string clusterId_ = "";
    /// <summary>
    /// Required. Deprecated. The name of the cluster to upgrade.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterId {
      get { return clusterId_; }
      set {
        clusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "update" field.</summary>
    public const int UpdateFieldNumber = 4;
    private global::Google.Cloud.Container.V1.ClusterUpdate update_;
    /// <summary>
    /// Required. A description of the update.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.ClusterUpdate Update {
      get { return update_; }
      set {
        update_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 5;
    private string name_ = "";
    /// <summary>
    /// The name (project, location, cluster) of the cluster to update.
    /// Specified in the format 'projects/*/locations/*/clusters/*'.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateClusterRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateClusterRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProjectId != other.ProjectId) return false;
      if (Zone != other.Zone) return false;
      if (ClusterId != other.ClusterId) return false;
      if (!object.Equals(Update, other.Update)) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (Zone.Length != 0) hash ^= Zone.GetHashCode();
      if (ClusterId.Length != 0) hash ^= ClusterId.GetHashCode();
      if (update_ != null) hash ^= Update.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (Zone.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Zone);
      }
      if (ClusterId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ClusterId);
      }
      if (update_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Update);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (Zone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Zone);
      }
      if (ClusterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterId);
      }
      if (update_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Update);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateClusterRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.Zone.Length != 0) {
        Zone = other.Zone;
      }
      if (other.ClusterId.Length != 0) {
        ClusterId = other.ClusterId;
      }
      if (other.update_ != null) {
        if (update_ == null) {
          Update = new global::Google.Cloud.Container.V1.ClusterUpdate();
        }
        Update.MergeFrom(other.Update);
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 18: {
            Zone = input.ReadString();
            break;
          }
          case 26: {
            ClusterId = input.ReadString();
            break;
          }
          case 34: {
            if (update_ == null) {
              Update = new global::Google.Cloud.Container.V1.ClusterUpdate();
            }
            input.ReadMessage(Update);
            break;
          }
          case 42: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// UpdateNodePoolRequests update a node pool's image and/or version.
  /// </summary>
  public sealed partial class UpdateNodePoolRequest : pb::IMessage<UpdateNodePoolRequest> {
    private static readonly pb::MessageParser<UpdateNodePoolRequest> _parser = new pb::MessageParser<UpdateNodePoolRequest>(() => new UpdateNodePoolRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateNodePoolRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateNodePoolRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateNodePoolRequest(UpdateNodePoolRequest other) : this() {
      projectId_ = other.projectId_;
      zone_ = other.zone_;
      clusterId_ = other.clusterId_;
      nodePoolId_ = other.nodePoolId_;
      nodeVersion_ = other.nodeVersion_;
      imageType_ = other.imageType_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateNodePoolRequest Clone() {
      return new UpdateNodePoolRequest(this);
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 1;
    private string projectId_ = "";
    /// <summary>
    /// Required. Deprecated. The Google Developers Console [project ID or project
    /// number](https://support.google.com/cloud/answer/6158840).
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "zone" field.</summary>
    public const int ZoneFieldNumber = 2;
    private string zone_ = "";
    /// <summary>
    /// Required. Deprecated. The name of the Google Compute Engine
    /// [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster
    /// resides.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Zone {
      get { return zone_; }
      set {
        zone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cluster_id" field.</summary>
    public const int ClusterIdFieldNumber = 3;
    private string clusterId_ = "";
    /// <summary>
    /// Required. Deprecated. The name of the cluster to upgrade.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterId {
      get { return clusterId_; }
      set {
        clusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "node_pool_id" field.</summary>
    public const int NodePoolIdFieldNumber = 4;
    private string nodePoolId_ = "";
    /// <summary>
    /// Required. Deprecated. The name of the node pool to upgrade.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NodePoolId {
      get { return nodePoolId_; }
      set {
        nodePoolId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "node_version" field.</summary>
    public const int NodeVersionFieldNumber = 5;
    private string nodeVersion_ = "";
    /// <summary>
    /// Required. The Kubernetes version to change the nodes to (typically an
    /// upgrade).
    ///
    /// Users may specify either explicit versions offered by Kubernetes Engine or
    /// version aliases, which have the following behavior:
    ///
    /// - "latest": picks the highest valid Kubernetes version
    /// - "1.X": picks the highest valid patch+gke.N patch in the 1.X version
    /// - "1.X.Y": picks the highest valid gke.N patch in the 1.X.Y version
    /// - "1.X.Y-gke.N": picks an explicit Kubernetes version
    /// - "-": picks the Kubernetes master version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NodeVersion {
      get { return nodeVersion_; }
      set {
        nodeVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "image_type" field.</summary>
    public const int ImageTypeFieldNumber = 6;
    private string imageType_ = "";
    /// <summary>
    /// Required. The desired image type for the node pool.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ImageType {
      get { return imageType_; }
      set {
        imageType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 8;
    private string name_ = "";
    /// <summary>
    /// The name (project, location, cluster, node pool) of the node pool to
    /// update. Specified in the format
    /// 'projects/*/locations/*/clusters/*/nodePools/*'.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateNodePoolRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateNodePoolRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProjectId != other.ProjectId) return false;
      if (Zone != other.Zone) return false;
      if (ClusterId != other.ClusterId) return false;
      if (NodePoolId != other.NodePoolId) return false;
      if (NodeVersion != other.NodeVersion) return false;
      if (ImageType != other.ImageType) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (Zone.Length != 0) hash ^= Zone.GetHashCode();
      if (ClusterId.Length != 0) hash ^= ClusterId.GetHashCode();
      if (NodePoolId.Length != 0) hash ^= NodePoolId.GetHashCode();
      if (NodeVersion.Length != 0) hash ^= NodeVersion.GetHashCode();
      if (ImageType.Length != 0) hash ^= ImageType.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (Zone.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Zone);
      }
      if (ClusterId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ClusterId);
      }
      if (NodePoolId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(NodePoolId);
      }
      if (NodeVersion.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(NodeVersion);
      }
      if (ImageType.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ImageType);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (Zone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Zone);
      }
      if (ClusterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterId);
      }
      if (NodePoolId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NodePoolId);
      }
      if (NodeVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NodeVersion);
      }
      if (ImageType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ImageType);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateNodePoolRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.Zone.Length != 0) {
        Zone = other.Zone;
      }
      if (other.ClusterId.Length != 0) {
        ClusterId = other.ClusterId;
      }
      if (other.NodePoolId.Length != 0) {
        NodePoolId = other.NodePoolId;
      }
      if (other.NodeVersion.Length != 0) {
        NodeVersion = other.NodeVersion;
      }
      if (other.ImageType.Length != 0) {
        ImageType = other.ImageType;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 18: {
            Zone = input.ReadString();
            break;
          }
          case 26: {
            ClusterId = input.ReadString();
            break;
          }
          case 34: {
            NodePoolId = input.ReadString();
            break;
          }
          case 42: {
            NodeVersion = input.ReadString();
            break;
          }
          case 50: {
            ImageType = input.ReadString();
            break;
          }
          case 66: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// SetNodePoolAutoscalingRequest sets the autoscaler settings of a node pool.
  /// </summary>
  public sealed partial class SetNodePoolAutoscalingRequest : pb::IMessage<SetNodePoolAutoscalingRequest> {
    private static readonly pb::MessageParser<SetNodePoolAutoscalingRequest> _parser = new pb::MessageParser<SetNodePoolAutoscalingRequest>(() => new SetNodePoolAutoscalingRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetNodePoolAutoscalingRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetNodePoolAutoscalingRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetNodePoolAutoscalingRequest(SetNodePoolAutoscalingRequest other) : this() {
      projectId_ = other.projectId_;
      zone_ = other.zone_;
      clusterId_ = other.clusterId_;
      nodePoolId_ = other.nodePoolId_;
      autoscaling_ = other.autoscaling_ != null ? other.autoscaling_.Clone() : null;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetNodePoolAutoscalingRequest Clone() {
      return new SetNodePoolAutoscalingRequest(this);
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 1;
    private string projectId_ = "";
    /// <summary>
    /// Required. Deprecated. The Google Developers Console [project ID or project
    /// number](https://support.google.com/cloud/answer/6158840).
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "zone" field.</summary>
    public const int ZoneFieldNumber = 2;
    private string zone_ = "";
    /// <summary>
    /// Required. Deprecated. The name of the Google Compute Engine
    /// [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster
    /// resides.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Zone {
      get { return zone_; }
      set {
        zone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cluster_id" field.</summary>
    public const int ClusterIdFieldNumber = 3;
    private string clusterId_ = "";
    /// <summary>
    /// Required. Deprecated. The name of the cluster to upgrade.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterId {
      get { return clusterId_; }
      set {
        clusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "node_pool_id" field.</summary>
    public const int NodePoolIdFieldNumber = 4;
    private string nodePoolId_ = "";
    /// <summary>
    /// Required. Deprecated. The name of the node pool to upgrade.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NodePoolId {
      get { return nodePoolId_; }
      set {
        nodePoolId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "autoscaling" field.</summary>
    public const int AutoscalingFieldNumber = 5;
    private global::Google.Cloud.Container.V1.NodePoolAutoscaling autoscaling_;
    /// <summary>
    /// Required. Autoscaling configuration for the node pool.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.NodePoolAutoscaling Autoscaling {
      get { return autoscaling_; }
      set {
        autoscaling_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 6;
    private string name_ = "";
    /// <summary>
    /// The name (project, location, cluster, node pool) of the node pool to set
    /// autoscaler settings. Specified in the format
    /// 'projects/*/locations/*/clusters/*/nodePools/*'.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetNodePoolAutoscalingRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetNodePoolAutoscalingRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProjectId != other.ProjectId) return false;
      if (Zone != other.Zone) return false;
      if (ClusterId != other.ClusterId) return false;
      if (NodePoolId != other.NodePoolId) return false;
      if (!object.Equals(Autoscaling, other.Autoscaling)) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (Zone.Length != 0) hash ^= Zone.GetHashCode();
      if (ClusterId.Length != 0) hash ^= ClusterId.GetHashCode();
      if (NodePoolId.Length != 0) hash ^= NodePoolId.GetHashCode();
      if (autoscaling_ != null) hash ^= Autoscaling.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (Zone.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Zone);
      }
      if (ClusterId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ClusterId);
      }
      if (NodePoolId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(NodePoolId);
      }
      if (autoscaling_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Autoscaling);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (Zone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Zone);
      }
      if (ClusterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterId);
      }
      if (NodePoolId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NodePoolId);
      }
      if (autoscaling_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Autoscaling);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetNodePoolAutoscalingRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.Zone.Length != 0) {
        Zone = other.Zone;
      }
      if (other.ClusterId.Length != 0) {
        ClusterId = other.ClusterId;
      }
      if (other.NodePoolId.Length != 0) {
        NodePoolId = other.NodePoolId;
      }
      if (other.autoscaling_ != null) {
        if (autoscaling_ == null) {
          Autoscaling = new global::Google.Cloud.Container.V1.NodePoolAutoscaling();
        }
        Autoscaling.MergeFrom(other.Autoscaling);
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 18: {
            Zone = input.ReadString();
            break;
          }
          case 26: {
            ClusterId = input.ReadString();
            break;
          }
          case 34: {
            NodePoolId = input.ReadString();
            break;
          }
          case 42: {
            if (autoscaling_ == null) {
              Autoscaling = new global::Google.Cloud.Container.V1.NodePoolAutoscaling();
            }
            input.ReadMessage(Autoscaling);
            break;
          }
          case 50: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// SetLoggingServiceRequest sets the logging service of a cluster.
  /// </summary>
  public sealed partial class SetLoggingServiceRequest : pb::IMessage<SetLoggingServiceRequest> {
    private static readonly pb::MessageParser<SetLoggingServiceRequest> _parser = new pb::MessageParser<SetLoggingServiceRequest>(() => new SetLoggingServiceRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetLoggingServiceRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetLoggingServiceRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetLoggingServiceRequest(SetLoggingServiceRequest other) : this() {
      projectId_ = other.projectId_;
      zone_ = other.zone_;
      clusterId_ = other.clusterId_;
      loggingService_ = other.loggingService_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetLoggingServiceRequest Clone() {
      return new SetLoggingServiceRequest(this);
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 1;
    private string projectId_ = "";
    /// <summary>
    /// Required. Deprecated. The Google Developers Console [project ID or project
    /// number](https://support.google.com/cloud/answer/6158840).
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "zone" field.</summary>
    public const int ZoneFieldNumber = 2;
    private string zone_ = "";
    /// <summary>
    /// Required. Deprecated. The name of the Google Compute Engine
    /// [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster
    /// resides.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Zone {
      get { return zone_; }
      set {
        zone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cluster_id" field.</summary>
    public const int ClusterIdFieldNumber = 3;
    private string clusterId_ = "";
    /// <summary>
    /// Required. Deprecated. The name of the cluster to upgrade.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterId {
      get { return clusterId_; }
      set {
        clusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "logging_service" field.</summary>
    public const int LoggingServiceFieldNumber = 4;
    private string loggingService_ = "";
    /// <summary>
    /// Required. The logging service the cluster should use to write metrics.
    /// Currently available options:
    ///
    /// * "logging.googleapis.com" - the Google Cloud Logging service
    /// * "none" - no metrics will be exported from the cluster
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LoggingService {
      get { return loggingService_; }
      set {
        loggingService_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 5;
    private string name_ = "";
    /// <summary>
    /// The name (project, location, cluster) of the cluster to set logging.
    /// Specified in the format 'projects/*/locations/*/clusters/*'.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetLoggingServiceRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetLoggingServiceRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProjectId != other.ProjectId) return false;
      if (Zone != other.Zone) return false;
      if (ClusterId != other.ClusterId) return false;
      if (LoggingService != other.LoggingService) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (Zone.Length != 0) hash ^= Zone.GetHashCode();
      if (ClusterId.Length != 0) hash ^= ClusterId.GetHashCode();
      if (LoggingService.Length != 0) hash ^= LoggingService.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (Zone.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Zone);
      }
      if (ClusterId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ClusterId);
      }
      if (LoggingService.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(LoggingService);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (Zone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Zone);
      }
      if (ClusterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterId);
      }
      if (LoggingService.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LoggingService);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetLoggingServiceRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.Zone.Length != 0) {
        Zone = other.Zone;
      }
      if (other.ClusterId.Length != 0) {
        ClusterId = other.ClusterId;
      }
      if (other.LoggingService.Length != 0) {
        LoggingService = other.LoggingService;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 18: {
            Zone = input.ReadString();
            break;
          }
          case 26: {
            ClusterId = input.ReadString();
            break;
          }
          case 34: {
            LoggingService = input.ReadString();
            break;
          }
          case 42: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// SetMonitoringServiceRequest sets the monitoring service of a cluster.
  /// </summary>
  public sealed partial class SetMonitoringServiceRequest : pb::IMessage<SetMonitoringServiceRequest> {
    private static readonly pb::MessageParser<SetMonitoringServiceRequest> _parser = new pb::MessageParser<SetMonitoringServiceRequest>(() => new SetMonitoringServiceRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetMonitoringServiceRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetMonitoringServiceRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetMonitoringServiceRequest(SetMonitoringServiceRequest other) : this() {
      projectId_ = other.projectId_;
      zone_ = other.zone_;
      clusterId_ = other.clusterId_;
      monitoringService_ = other.monitoringService_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetMonitoringServiceRequest Clone() {
      return new SetMonitoringServiceRequest(this);
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 1;
    private string projectId_ = "";
    /// <summary>
    /// Required. Deprecated. The Google Developers Console [project ID or project
    /// number](https://support.google.com/cloud/answer/6158840).
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "zone" field.</summary>
    public const int ZoneFieldNumber = 2;
    private string zone_ = "";
    /// <summary>
    /// Required. Deprecated. The name of the Google Compute Engine
    /// [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster
    /// resides.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Zone {
      get { return zone_; }
      set {
        zone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cluster_id" field.</summary>
    public const int ClusterIdFieldNumber = 3;
    private string clusterId_ = "";
    /// <summary>
    /// Required. Deprecated. The name of the cluster to upgrade.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterId {
      get { return clusterId_; }
      set {
        clusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "monitoring_service" field.</summary>
    public const int MonitoringServiceFieldNumber = 4;
    private string monitoringService_ = "";
    /// <summary>
    /// Required. The monitoring service the cluster should use to write metrics.
    /// Currently available options:
    ///
    /// * "monitoring.googleapis.com/kubernetes" - the Google Cloud Monitoring
    /// service with Kubernetes-native resource model
    /// * "monitoring.googleapis.com" - the Google Cloud Monitoring service
    /// * "none" - no metrics will be exported from the cluster
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MonitoringService {
      get { return monitoringService_; }
      set {
        monitoringService_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 6;
    private string name_ = "";
    /// <summary>
    /// The name (project, location, cluster) of the cluster to set monitoring.
    /// Specified in the format 'projects/*/locations/*/clusters/*'.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetMonitoringServiceRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetMonitoringServiceRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProjectId != other.ProjectId) return false;
      if (Zone != other.Zone) return false;
      if (ClusterId != other.ClusterId) return false;
      if (MonitoringService != other.MonitoringService) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (Zone.Length != 0) hash ^= Zone.GetHashCode();
      if (ClusterId.Length != 0) hash ^= ClusterId.GetHashCode();
      if (MonitoringService.Length != 0) hash ^= MonitoringService.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (Zone.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Zone);
      }
      if (ClusterId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ClusterId);
      }
      if (MonitoringService.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(MonitoringService);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (Zone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Zone);
      }
      if (ClusterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterId);
      }
      if (MonitoringService.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MonitoringService);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetMonitoringServiceRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.Zone.Length != 0) {
        Zone = other.Zone;
      }
      if (other.ClusterId.Length != 0) {
        ClusterId = other.ClusterId;
      }
      if (other.MonitoringService.Length != 0) {
        MonitoringService = other.MonitoringService;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 18: {
            Zone = input.ReadString();
            break;
          }
          case 26: {
            ClusterId = input.ReadString();
            break;
          }
          case 34: {
            MonitoringService = input.ReadString();
            break;
          }
          case 50: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// SetAddonsConfigRequest sets the addons associated with the cluster.
  /// </summary>
  public sealed partial class SetAddonsConfigRequest : pb::IMessage<SetAddonsConfigRequest> {
    private static readonly pb::MessageParser<SetAddonsConfigRequest> _parser = new pb::MessageParser<SetAddonsConfigRequest>(() => new SetAddonsConfigRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetAddonsConfigRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetAddonsConfigRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetAddonsConfigRequest(SetAddonsConfigRequest other) : this() {
      projectId_ = other.projectId_;
      zone_ = other.zone_;
      clusterId_ = other.clusterId_;
      addonsConfig_ = other.addonsConfig_ != null ? other.addonsConfig_.Clone() : null;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetAddonsConfigRequest Clone() {
      return new SetAddonsConfigRequest(this);
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 1;
    private string projectId_ = "";
    /// <summary>
    /// Required. Deprecated. The Google Developers Console [project ID or project
    /// number](https://support.google.com/cloud/answer/6158840).
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "zone" field.</summary>
    public const int ZoneFieldNumber = 2;
    private string zone_ = "";
    /// <summary>
    /// Required. Deprecated. The name of the Google Compute Engine
    /// [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster
    /// resides.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Zone {
      get { return zone_; }
      set {
        zone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cluster_id" field.</summary>
    public const int ClusterIdFieldNumber = 3;
    private string clusterId_ = "";
    /// <summary>
    /// Required. Deprecated. The name of the cluster to upgrade.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterId {
      get { return clusterId_; }
      set {
        clusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "addons_config" field.</summary>
    public const int AddonsConfigFieldNumber = 4;
    private global::Google.Cloud.Container.V1.AddonsConfig addonsConfig_;
    /// <summary>
    /// Required. The desired configurations for the various addons available to run in the
    /// cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.AddonsConfig AddonsConfig {
      get { return addonsConfig_; }
      set {
        addonsConfig_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 6;
    private string name_ = "";
    /// <summary>
    /// The name (project, location, cluster) of the cluster to set addons.
    /// Specified in the format 'projects/*/locations/*/clusters/*'.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetAddonsConfigRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetAddonsConfigRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProjectId != other.ProjectId) return false;
      if (Zone != other.Zone) return false;
      if (ClusterId != other.ClusterId) return false;
      if (!object.Equals(AddonsConfig, other.AddonsConfig)) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (Zone.Length != 0) hash ^= Zone.GetHashCode();
      if (ClusterId.Length != 0) hash ^= ClusterId.GetHashCode();
      if (addonsConfig_ != null) hash ^= AddonsConfig.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (Zone.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Zone);
      }
      if (ClusterId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ClusterId);
      }
      if (addonsConfig_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(AddonsConfig);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (Zone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Zone);
      }
      if (ClusterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterId);
      }
      if (addonsConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AddonsConfig);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetAddonsConfigRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.Zone.Length != 0) {
        Zone = other.Zone;
      }
      if (other.ClusterId.Length != 0) {
        ClusterId = other.ClusterId;
      }
      if (other.addonsConfig_ != null) {
        if (addonsConfig_ == null) {
          AddonsConfig = new global::Google.Cloud.Container.V1.AddonsConfig();
        }
        AddonsConfig.MergeFrom(other.AddonsConfig);
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 18: {
            Zone = input.ReadString();
            break;
          }
          case 26: {
            ClusterId = input.ReadString();
            break;
          }
          case 34: {
            if (addonsConfig_ == null) {
              AddonsConfig = new global::Google.Cloud.Container.V1.AddonsConfig();
            }
            input.ReadMessage(AddonsConfig);
            break;
          }
          case 50: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// SetLocationsRequest sets the locations of the cluster.
  /// </summary>
  public sealed partial class SetLocationsRequest : pb::IMessage<SetLocationsRequest> {
    private static readonly pb::MessageParser<SetLocationsRequest> _parser = new pb::MessageParser<SetLocationsRequest>(() => new SetLocationsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetLocationsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetLocationsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetLocationsRequest(SetLocationsRequest other) : this() {
      projectId_ = other.projectId_;
      zone_ = other.zone_;
      clusterId_ = other.clusterId_;
      locations_ = other.locations_.Clone();
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetLocationsRequest Clone() {
      return new SetLocationsRequest(this);
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 1;
    private string projectId_ = "";
    /// <summary>
    /// Required. Deprecated. The Google Developers Console [project ID or project
    /// number](https://support.google.com/cloud/answer/6158840).
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "zone" field.</summary>
    public const int ZoneFieldNumber = 2;
    private string zone_ = "";
    /// <summary>
    /// Required. Deprecated. The name of the Google Compute Engine
    /// [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster
    /// resides.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Zone {
      get { return zone_; }
      set {
        zone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cluster_id" field.</summary>
    public const int ClusterIdFieldNumber = 3;
    private string clusterId_ = "";
    /// <summary>
    /// Required. Deprecated. The name of the cluster to upgrade.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterId {
      get { return clusterId_; }
      set {
        clusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "locations" field.</summary>
    public const int LocationsFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_locations_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> locations_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Required. The desired list of Google Compute Engine
    /// [zones](https://cloud.google.com/compute/docs/zones#available) in which the cluster's nodes
    /// should be located. Changing the locations a cluster is in will result
    /// in nodes being either created or removed from the cluster, depending on
    /// whether locations are being added or removed.
    ///
    /// This list must always include the cluster's primary zone.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Locations {
      get { return locations_; }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 6;
    private string name_ = "";
    /// <summary>
    /// The name (project, location, cluster) of the cluster to set locations.
    /// Specified in the format 'projects/*/locations/*/clusters/*'.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetLocationsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetLocationsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProjectId != other.ProjectId) return false;
      if (Zone != other.Zone) return false;
      if (ClusterId != other.ClusterId) return false;
      if(!locations_.Equals(other.locations_)) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (Zone.Length != 0) hash ^= Zone.GetHashCode();
      if (ClusterId.Length != 0) hash ^= ClusterId.GetHashCode();
      hash ^= locations_.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (Zone.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Zone);
      }
      if (ClusterId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ClusterId);
      }
      locations_.WriteTo(output, _repeated_locations_codec);
      if (Name.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (Zone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Zone);
      }
      if (ClusterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterId);
      }
      size += locations_.CalculateSize(_repeated_locations_codec);
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetLocationsRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.Zone.Length != 0) {
        Zone = other.Zone;
      }
      if (other.ClusterId.Length != 0) {
        ClusterId = other.ClusterId;
      }
      locations_.Add(other.locations_);
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 18: {
            Zone = input.ReadString();
            break;
          }
          case 26: {
            ClusterId = input.ReadString();
            break;
          }
          case 34: {
            locations_.AddEntriesFrom(input, _repeated_locations_codec);
            break;
          }
          case 50: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// UpdateMasterRequest updates the master of the cluster.
  /// </summary>
  public sealed partial class UpdateMasterRequest : pb::IMessage<UpdateMasterRequest> {
    private static readonly pb::MessageParser<UpdateMasterRequest> _parser = new pb::MessageParser<UpdateMasterRequest>(() => new UpdateMasterRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateMasterRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateMasterRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateMasterRequest(UpdateMasterRequest other) : this() {
      projectId_ = other.projectId_;
      zone_ = other.zone_;
      clusterId_ = other.clusterId_;
      masterVersion_ = other.masterVersion_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateMasterRequest Clone() {
      return new UpdateMasterRequest(this);
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 1;
    private string projectId_ = "";
    /// <summary>
    /// Required. Deprecated. The Google Developers Console [project ID or project
    /// number](https://support.google.com/cloud/answer/6158840).
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "zone" field.</summary>
    public const int ZoneFieldNumber = 2;
    private string zone_ = "";
    /// <summary>
    /// Required. Deprecated. The name of the Google Compute Engine
    /// [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster
    /// resides.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Zone {
      get { return zone_; }
      set {
        zone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cluster_id" field.</summary>
    public const int ClusterIdFieldNumber = 3;
    private string clusterId_ = "";
    /// <summary>
    /// Required. Deprecated. The name of the cluster to upgrade.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterId {
      get { return clusterId_; }
      set {
        clusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "master_version" field.</summary>
    public const int MasterVersionFieldNumber = 4;
    private string masterVersion_ = "";
    /// <summary>
    /// Required. The Kubernetes version to change the master to.
    ///
    /// Users may specify either explicit versions offered by Kubernetes Engine or
    /// version aliases, which have the following behavior:
    ///
    /// - "latest": picks the highest valid Kubernetes version
    /// - "1.X": picks the highest valid patch+gke.N patch in the 1.X version
    /// - "1.X.Y": picks the highest valid gke.N patch in the 1.X.Y version
    /// - "1.X.Y-gke.N": picks an explicit Kubernetes version
    /// - "-": picks the default Kubernetes version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MasterVersion {
      get { return masterVersion_; }
      set {
        masterVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 7;
    private string name_ = "";
    /// <summary>
    /// The name (project, location, cluster) of the cluster to update.
    /// Specified in the format 'projects/*/locations/*/clusters/*'.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateMasterRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateMasterRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProjectId != other.ProjectId) return false;
      if (Zone != other.Zone) return false;
      if (ClusterId != other.ClusterId) return false;
      if (MasterVersion != other.MasterVersion) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (Zone.Length != 0) hash ^= Zone.GetHashCode();
      if (ClusterId.Length != 0) hash ^= ClusterId.GetHashCode();
      if (MasterVersion.Length != 0) hash ^= MasterVersion.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (Zone.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Zone);
      }
      if (ClusterId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ClusterId);
      }
      if (MasterVersion.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(MasterVersion);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (Zone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Zone);
      }
      if (ClusterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterId);
      }
      if (MasterVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MasterVersion);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateMasterRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.Zone.Length != 0) {
        Zone = other.Zone;
      }
      if (other.ClusterId.Length != 0) {
        ClusterId = other.ClusterId;
      }
      if (other.MasterVersion.Length != 0) {
        MasterVersion = other.MasterVersion;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 18: {
            Zone = input.ReadString();
            break;
          }
          case 26: {
            ClusterId = input.ReadString();
            break;
          }
          case 34: {
            MasterVersion = input.ReadString();
            break;
          }
          case 58: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// SetMasterAuthRequest updates the admin password of a cluster.
  /// </summary>
  public sealed partial class SetMasterAuthRequest : pb::IMessage<SetMasterAuthRequest> {
    private static readonly pb::MessageParser<SetMasterAuthRequest> _parser = new pb::MessageParser<SetMasterAuthRequest>(() => new SetMasterAuthRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetMasterAuthRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetMasterAuthRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetMasterAuthRequest(SetMasterAuthRequest other) : this() {
      projectId_ = other.projectId_;
      zone_ = other.zone_;
      clusterId_ = other.clusterId_;
      action_ = other.action_;
      update_ = other.update_ != null ? other.update_.Clone() : null;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetMasterAuthRequest Clone() {
      return new SetMasterAuthRequest(this);
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 1;
    private string projectId_ = "";
    /// <summary>
    /// Required. Deprecated. The Google Developers Console [project ID or project
    /// number](https://support.google.com/cloud/answer/6158840).
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "zone" field.</summary>
    public const int ZoneFieldNumber = 2;
    private string zone_ = "";
    /// <summary>
    /// Required. Deprecated. The name of the Google Compute Engine
    /// [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster
    /// resides.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Zone {
      get { return zone_; }
      set {
        zone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cluster_id" field.</summary>
    public const int ClusterIdFieldNumber = 3;
    private string clusterId_ = "";
    /// <summary>
    /// Required. Deprecated. The name of the cluster to upgrade.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterId {
      get { return clusterId_; }
      set {
        clusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "action" field.</summary>
    public const int ActionFieldNumber = 4;
    private global::Google.Cloud.Container.V1.SetMasterAuthRequest.Types.Action action_ = 0;
    /// <summary>
    /// Required. The exact form of action to be taken on the master auth.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.SetMasterAuthRequest.Types.Action Action {
      get { return action_; }
      set {
        action_ = value;
      }
    }

    /// <summary>Field number for the "update" field.</summary>
    public const int UpdateFieldNumber = 5;
    private global::Google.Cloud.Container.V1.MasterAuth update_;
    /// <summary>
    /// Required. A description of the update.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.MasterAuth Update {
      get { return update_; }
      set {
        update_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 7;
    private string name_ = "";
    /// <summary>
    /// The name (project, location, cluster) of the cluster to set auth.
    /// Specified in the format 'projects/*/locations/*/clusters/*'.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetMasterAuthRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetMasterAuthRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProjectId != other.ProjectId) return false;
      if (Zone != other.Zone) return false;
      if (ClusterId != other.ClusterId) return false;
      if (Action != other.Action) return false;
      if (!object.Equals(Update, other.Update)) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (Zone.Length != 0) hash ^= Zone.GetHashCode();
      if (ClusterId.Length != 0) hash ^= ClusterId.GetHashCode();
      if (Action != 0) hash ^= Action.GetHashCode();
      if (update_ != null) hash ^= Update.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (Zone.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Zone);
      }
      if (ClusterId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ClusterId);
      }
      if (Action != 0) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Action);
      }
      if (update_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Update);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (Zone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Zone);
      }
      if (ClusterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterId);
      }
      if (Action != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Action);
      }
      if (update_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Update);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetMasterAuthRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.Zone.Length != 0) {
        Zone = other.Zone;
      }
      if (other.ClusterId.Length != 0) {
        ClusterId = other.ClusterId;
      }
      if (other.Action != 0) {
        Action = other.Action;
      }
      if (other.update_ != null) {
        if (update_ == null) {
          Update = new global::Google.Cloud.Container.V1.MasterAuth();
        }
        Update.MergeFrom(other.Update);
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 18: {
            Zone = input.ReadString();
            break;
          }
          case 26: {
            ClusterId = input.ReadString();
            break;
          }
          case 32: {
            Action = (global::Google.Cloud.Container.V1.SetMasterAuthRequest.Types.Action) input.ReadEnum();
            break;
          }
          case 42: {
            if (update_ == null) {
              Update = new global::Google.Cloud.Container.V1.MasterAuth();
            }
            input.ReadMessage(Update);
            break;
          }
          case 58: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the SetMasterAuthRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Operation type: what type update to perform.
      /// </summary>
      public enum Action {
        /// <summary>
        /// Operation is unknown and will error out.
        /// </summary>
        [pbr::OriginalName("UNKNOWN")] Unknown = 0,
        /// <summary>
        /// Set the password to a user generated value.
        /// </summary>
        [pbr::OriginalName("SET_PASSWORD")] SetPassword = 1,
        /// <summary>
        /// Generate a new password and set it to that.
        /// </summary>
        [pbr::OriginalName("GENERATE_PASSWORD")] GeneratePassword = 2,
        /// <summary>
        /// Set the username.  If an empty username is provided, basic authentication
        /// is disabled for the cluster.  If a non-empty username is provided, basic
        /// authentication is enabled, with either a provided password or a generated
        /// one.
        /// </summary>
        [pbr::OriginalName("SET_USERNAME")] SetUsername = 3,
      }

    }
    #endregion

  }

  /// <summary>
  /// DeleteClusterRequest deletes a cluster.
  /// </summary>
  public sealed partial class DeleteClusterRequest : pb::IMessage<DeleteClusterRequest> {
    private static readonly pb::MessageParser<DeleteClusterRequest> _parser = new pb::MessageParser<DeleteClusterRequest>(() => new DeleteClusterRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteClusterRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteClusterRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteClusterRequest(DeleteClusterRequest other) : this() {
      projectId_ = other.projectId_;
      zone_ = other.zone_;
      clusterId_ = other.clusterId_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteClusterRequest Clone() {
      return new DeleteClusterRequest(this);
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 1;
    private string projectId_ = "";
    /// <summary>
    /// Required. Deprecated. The Google Developers Console [project ID or project
    /// number](https://support.google.com/cloud/answer/6158840).
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "zone" field.</summary>
    public const int ZoneFieldNumber = 2;
    private string zone_ = "";
    /// <summary>
    /// Required. Deprecated. The name of the Google Compute Engine
    /// [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster
    /// resides.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Zone {
      get { return zone_; }
      set {
        zone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cluster_id" field.</summary>
    public const int ClusterIdFieldNumber = 3;
    private string clusterId_ = "";
    /// <summary>
    /// Required. Deprecated. The name of the cluster to delete.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterId {
      get { return clusterId_; }
      set {
        clusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 4;
    private string name_ = "";
    /// <summary>
    /// The name (project, location, cluster) of the cluster to delete.
    /// Specified in the format 'projects/*/locations/*/clusters/*'.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteClusterRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteClusterRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProjectId != other.ProjectId) return false;
      if (Zone != other.Zone) return false;
      if (ClusterId != other.ClusterId) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (Zone.Length != 0) hash ^= Zone.GetHashCode();
      if (ClusterId.Length != 0) hash ^= ClusterId.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (Zone.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Zone);
      }
      if (ClusterId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ClusterId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (Zone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Zone);
      }
      if (ClusterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterId);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteClusterRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.Zone.Length != 0) {
        Zone = other.Zone;
      }
      if (other.ClusterId.Length != 0) {
        ClusterId = other.ClusterId;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 18: {
            Zone = input.ReadString();
            break;
          }
          case 26: {
            ClusterId = input.ReadString();
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// ListClustersRequest lists clusters.
  /// </summary>
  public sealed partial class ListClustersRequest : pb::IMessage<ListClustersRequest> {
    private static readonly pb::MessageParser<ListClustersRequest> _parser = new pb::MessageParser<ListClustersRequest>(() => new ListClustersRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListClustersRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListClustersRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListClustersRequest(ListClustersRequest other) : this() {
      projectId_ = other.projectId_;
      zone_ = other.zone_;
      parent_ = other.parent_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListClustersRequest Clone() {
      return new ListClustersRequest(this);
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 1;
    private string projectId_ = "";
    /// <summary>
    /// Required. Deprecated. The Google Developers Console [project ID or project
    /// number](https://support.google.com/cloud/answer/6158840).
    /// This field has been deprecated and replaced by the parent field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "zone" field.</summary>
    public const int ZoneFieldNumber = 2;
    private string zone_ = "";
    /// <summary>
    /// Required. Deprecated. The name of the Google Compute Engine
    /// [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster
    /// resides, or "-" for all zones.
    /// This field has been deprecated and replaced by the parent field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Zone {
      get { return zone_; }
      set {
        zone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 4;
    private string parent_ = "";
    /// <summary>
    /// The parent (project and location) where the clusters will be listed.
    /// Specified in the format 'projects/*/locations/*'.
    /// Location "-" matches all zones and all regions.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListClustersRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListClustersRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProjectId != other.ProjectId) return false;
      if (Zone != other.Zone) return false;
      if (Parent != other.Parent) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (Zone.Length != 0) hash ^= Zone.GetHashCode();
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (Zone.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Zone);
      }
      if (Parent.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Parent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (Zone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Zone);
      }
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListClustersRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.Zone.Length != 0) {
        Zone = other.Zone;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 18: {
            Zone = input.ReadString();
            break;
          }
          case 34: {
            Parent = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// ListClustersResponse is the result of ListClustersRequest.
  /// </summary>
  public sealed partial class ListClustersResponse : pb::IMessage<ListClustersResponse> {
    private static readonly pb::MessageParser<ListClustersResponse> _parser = new pb::MessageParser<ListClustersResponse>(() => new ListClustersResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListClustersResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListClustersResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListClustersResponse(ListClustersResponse other) : this() {
      clusters_ = other.clusters_.Clone();
      missingZones_ = other.missingZones_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListClustersResponse Clone() {
      return new ListClustersResponse(this);
    }

    /// <summary>Field number for the "clusters" field.</summary>
    public const int ClustersFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.Container.V1.Cluster> _repeated_clusters_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.Container.V1.Cluster.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Container.V1.Cluster> clusters_ = new pbc::RepeatedField<global::Google.Cloud.Container.V1.Cluster>();
    /// <summary>
    /// A list of clusters in the project in the specified zone, or
    /// across all ones.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Container.V1.Cluster> Clusters {
      get { return clusters_; }
    }

    /// <summary>Field number for the "missing_zones" field.</summary>
    public const int MissingZonesFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_missingZones_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> missingZones_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// If any zones are listed here, the list of clusters returned
    /// may be missing those zones.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> MissingZones {
      get { return missingZones_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListClustersResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListClustersResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!clusters_.Equals(other.clusters_)) return false;
      if(!missingZones_.Equals(other.missingZones_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= clusters_.GetHashCode();
      hash ^= missingZones_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      clusters_.WriteTo(output, _repeated_clusters_codec);
      missingZones_.WriteTo(output, _repeated_missingZones_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += clusters_.CalculateSize(_repeated_clusters_codec);
      size += missingZones_.CalculateSize(_repeated_missingZones_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListClustersResponse other) {
      if (other == null) {
        return;
      }
      clusters_.Add(other.clusters_);
      missingZones_.Add(other.missingZones_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            clusters_.AddEntriesFrom(input, _repeated_clusters_codec);
            break;
          }
          case 18: {
            missingZones_.AddEntriesFrom(input, _repeated_missingZones_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// GetOperationRequest gets a single operation.
  /// </summary>
  public sealed partial class GetOperationRequest : pb::IMessage<GetOperationRequest> {
    private static readonly pb::MessageParser<GetOperationRequest> _parser = new pb::MessageParser<GetOperationRequest>(() => new GetOperationRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetOperationRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetOperationRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetOperationRequest(GetOperationRequest other) : this() {
      projectId_ = other.projectId_;
      zone_ = other.zone_;
      operationId_ = other.operationId_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetOperationRequest Clone() {
      return new GetOperationRequest(this);
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 1;
    private string projectId_ = "";
    /// <summary>
    /// Required. Deprecated. The Google Developers Console [project ID or project
    /// number](https://support.google.com/cloud/answer/6158840).
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "zone" field.</summary>
    public const int ZoneFieldNumber = 2;
    private string zone_ = "";
    /// <summary>
    /// Required. Deprecated. The name of the Google Compute Engine
    /// [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster
    /// resides.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Zone {
      get { return zone_; }
      set {
        zone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "operation_id" field.</summary>
    public const int OperationIdFieldNumber = 3;
    private string operationId_ = "";
    /// <summary>
    /// Required. Deprecated. The server-assigned `name` of the operation.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OperationId {
      get { return operationId_; }
      set {
        operationId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 5;
    private string name_ = "";
    /// <summary>
    /// The name (project, location, operation id) of the operation to get.
    /// Specified in the format 'projects/*/locations/*/operations/*'.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetOperationRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetOperationRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProjectId != other.ProjectId) return false;
      if (Zone != other.Zone) return false;
      if (OperationId != other.OperationId) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (Zone.Length != 0) hash ^= Zone.GetHashCode();
      if (OperationId.Length != 0) hash ^= OperationId.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (Zone.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Zone);
      }
      if (OperationId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(OperationId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (Zone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Zone);
      }
      if (OperationId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OperationId);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetOperationRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.Zone.Length != 0) {
        Zone = other.Zone;
      }
      if (other.OperationId.Length != 0) {
        OperationId = other.OperationId;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 18: {
            Zone = input.ReadString();
            break;
          }
          case 26: {
            OperationId = input.ReadString();
            break;
          }
          case 42: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// ListOperationsRequest lists operations.
  /// </summary>
  public sealed partial class ListOperationsRequest : pb::IMessage<ListOperationsRequest> {
    private static readonly pb::MessageParser<ListOperationsRequest> _parser = new pb::MessageParser<ListOperationsRequest>(() => new ListOperationsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListOperationsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListOperationsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListOperationsRequest(ListOperationsRequest other) : this() {
      projectId_ = other.projectId_;
      zone_ = other.zone_;
      parent_ = other.parent_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListOperationsRequest Clone() {
      return new ListOperationsRequest(this);
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 1;
    private string projectId_ = "";
    /// <summary>
    /// Required. Deprecated. The Google Developers Console [project ID or project
    /// number](https://support.google.com/cloud/answer/6158840).
    /// This field has been deprecated and replaced by the parent field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "zone" field.</summary>
    public const int ZoneFieldNumber = 2;
    private string zone_ = "";
    /// <summary>
    /// Required. Deprecated. The name of the Google Compute Engine
    /// [zone](https://cloud.google.com/compute/docs/zones#available) to return operations for, or `-` for
    /// all zones. This field has been deprecated and replaced by the parent field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Zone {
      get { return zone_; }
      set {
        zone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 4;
    private string parent_ = "";
    /// <summary>
    /// The parent (project and location) where the operations will be listed.
    /// Specified in the format 'projects/*/locations/*'.
    /// Location "-" matches all zones and all regions.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListOperationsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListOperationsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProjectId != other.ProjectId) return false;
      if (Zone != other.Zone) return false;
      if (Parent != other.Parent) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (Zone.Length != 0) hash ^= Zone.GetHashCode();
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (Zone.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Zone);
      }
      if (Parent.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Parent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (Zone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Zone);
      }
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListOperationsRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.Zone.Length != 0) {
        Zone = other.Zone;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 18: {
            Zone = input.ReadString();
            break;
          }
          case 34: {
            Parent = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// CancelOperationRequest cancels a single operation.
  /// </summary>
  public sealed partial class CancelOperationRequest : pb::IMessage<CancelOperationRequest> {
    private static readonly pb::MessageParser<CancelOperationRequest> _parser = new pb::MessageParser<CancelOperationRequest>(() => new CancelOperationRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CancelOperationRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CancelOperationRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CancelOperationRequest(CancelOperationRequest other) : this() {
      projectId_ = other.projectId_;
      zone_ = other.zone_;
      operationId_ = other.operationId_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CancelOperationRequest Clone() {
      return new CancelOperationRequest(this);
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 1;
    private string projectId_ = "";
    /// <summary>
    /// Required. Deprecated. The Google Developers Console [project ID or project
    /// number](https://support.google.com/cloud/answer/6158840).
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "zone" field.</summary>
    public const int ZoneFieldNumber = 2;
    private string zone_ = "";
    /// <summary>
    /// Required. Deprecated. The name of the Google Compute Engine
    /// [zone](https://cloud.google.com/compute/docs/zones#available) in which the operation resides.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Zone {
      get { return zone_; }
      set {
        zone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "operation_id" field.</summary>
    public const int OperationIdFieldNumber = 3;
    private string operationId_ = "";
    /// <summary>
    /// Required. Deprecated. The server-assigned `name` of the operation.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OperationId {
      get { return operationId_; }
      set {
        operationId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 4;
    private string name_ = "";
    /// <summary>
    /// The name (project, location, operation id) of the operation to cancel.
    /// Specified in the format 'projects/*/locations/*/operations/*'.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CancelOperationRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CancelOperationRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProjectId != other.ProjectId) return false;
      if (Zone != other.Zone) return false;
      if (OperationId != other.OperationId) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (Zone.Length != 0) hash ^= Zone.GetHashCode();
      if (OperationId.Length != 0) hash ^= OperationId.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (Zone.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Zone);
      }
      if (OperationId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(OperationId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (Zone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Zone);
      }
      if (OperationId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OperationId);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CancelOperationRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.Zone.Length != 0) {
        Zone = other.Zone;
      }
      if (other.OperationId.Length != 0) {
        OperationId = other.OperationId;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 18: {
            Zone = input.ReadString();
            break;
          }
          case 26: {
            OperationId = input.ReadString();
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// ListOperationsResponse is the result of ListOperationsRequest.
  /// </summary>
  public sealed partial class ListOperationsResponse : pb::IMessage<ListOperationsResponse> {
    private static readonly pb::MessageParser<ListOperationsResponse> _parser = new pb::MessageParser<ListOperationsResponse>(() => new ListOperationsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListOperationsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[38]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListOperationsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListOperationsResponse(ListOperationsResponse other) : this() {
      operations_ = other.operations_.Clone();
      missingZones_ = other.missingZones_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListOperationsResponse Clone() {
      return new ListOperationsResponse(this);
    }

    /// <summary>Field number for the "operations" field.</summary>
    public const int OperationsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.Container.V1.Operation> _repeated_operations_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.Container.V1.Operation.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Container.V1.Operation> operations_ = new pbc::RepeatedField<global::Google.Cloud.Container.V1.Operation>();
    /// <summary>
    /// A list of operations in the project in the specified zone.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Container.V1.Operation> Operations {
      get { return operations_; }
    }

    /// <summary>Field number for the "missing_zones" field.</summary>
    public const int MissingZonesFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_missingZones_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> missingZones_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// If any zones are listed here, the list of operations returned
    /// may be missing the operations from those zones.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> MissingZones {
      get { return missingZones_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListOperationsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListOperationsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!operations_.Equals(other.operations_)) return false;
      if(!missingZones_.Equals(other.missingZones_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= operations_.GetHashCode();
      hash ^= missingZones_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      operations_.WriteTo(output, _repeated_operations_codec);
      missingZones_.WriteTo(output, _repeated_missingZones_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += operations_.CalculateSize(_repeated_operations_codec);
      size += missingZones_.CalculateSize(_repeated_missingZones_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListOperationsResponse other) {
      if (other == null) {
        return;
      }
      operations_.Add(other.operations_);
      missingZones_.Add(other.missingZones_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            operations_.AddEntriesFrom(input, _repeated_operations_codec);
            break;
          }
          case 18: {
            missingZones_.AddEntriesFrom(input, _repeated_missingZones_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Gets the current Kubernetes Engine service configuration.
  /// </summary>
  public sealed partial class GetServerConfigRequest : pb::IMessage<GetServerConfigRequest> {
    private static readonly pb::MessageParser<GetServerConfigRequest> _parser = new pb::MessageParser<GetServerConfigRequest>(() => new GetServerConfigRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetServerConfigRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[39]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetServerConfigRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetServerConfigRequest(GetServerConfigRequest other) : this() {
      projectId_ = other.projectId_;
      zone_ = other.zone_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetServerConfigRequest Clone() {
      return new GetServerConfigRequest(this);
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 1;
    private string projectId_ = "";
    /// <summary>
    /// Required. Deprecated. The Google Developers Console [project ID or project
    /// number](https://support.google.com/cloud/answer/6158840).
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "zone" field.</summary>
    public const int ZoneFieldNumber = 2;
    private string zone_ = "";
    /// <summary>
    /// Required. Deprecated. The name of the Google Compute Engine
    /// [zone](https://cloud.google.com/compute/docs/zones#available) to return operations for.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Zone {
      get { return zone_; }
      set {
        zone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 4;
    private string name_ = "";
    /// <summary>
    /// The name (project and location) of the server config to get,
    /// specified in the format 'projects/*/locations/*'.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetServerConfigRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetServerConfigRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProjectId != other.ProjectId) return false;
      if (Zone != other.Zone) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (Zone.Length != 0) hash ^= Zone.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (Zone.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Zone);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (Zone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Zone);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetServerConfigRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.Zone.Length != 0) {
        Zone = other.Zone;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 18: {
            Zone = input.ReadString();
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Kubernetes Engine service configuration.
  /// </summary>
  public sealed partial class ServerConfig : pb::IMessage<ServerConfig> {
    private static readonly pb::MessageParser<ServerConfig> _parser = new pb::MessageParser<ServerConfig>(() => new ServerConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ServerConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[40]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerConfig(ServerConfig other) : this() {
      defaultClusterVersion_ = other.defaultClusterVersion_;
      validNodeVersions_ = other.validNodeVersions_.Clone();
      defaultImageType_ = other.defaultImageType_;
      validImageTypes_ = other.validImageTypes_.Clone();
      validMasterVersions_ = other.validMasterVersions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerConfig Clone() {
      return new ServerConfig(this);
    }

    /// <summary>Field number for the "default_cluster_version" field.</summary>
    public const int DefaultClusterVersionFieldNumber = 1;
    private string defaultClusterVersion_ = "";
    /// <summary>
    /// Version of Kubernetes the service deploys by default.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DefaultClusterVersion {
      get { return defaultClusterVersion_; }
      set {
        defaultClusterVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "valid_node_versions" field.</summary>
    public const int ValidNodeVersionsFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_validNodeVersions_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> validNodeVersions_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// List of valid node upgrade target versions.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> ValidNodeVersions {
      get { return validNodeVersions_; }
    }

    /// <summary>Field number for the "default_image_type" field.</summary>
    public const int DefaultImageTypeFieldNumber = 4;
    private string defaultImageType_ = "";
    /// <summary>
    /// Default image type.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DefaultImageType {
      get { return defaultImageType_; }
      set {
        defaultImageType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "valid_image_types" field.</summary>
    public const int ValidImageTypesFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _repeated_validImageTypes_codec
        = pb::FieldCodec.ForString(42);
    private readonly pbc::RepeatedField<string> validImageTypes_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// List of valid image types.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> ValidImageTypes {
      get { return validImageTypes_; }
    }

    /// <summary>Field number for the "valid_master_versions" field.</summary>
    public const int ValidMasterVersionsFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _repeated_validMasterVersions_codec
        = pb::FieldCodec.ForString(50);
    private readonly pbc::RepeatedField<string> validMasterVersions_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// List of valid master versions.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> ValidMasterVersions {
      get { return validMasterVersions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ServerConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ServerConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DefaultClusterVersion != other.DefaultClusterVersion) return false;
      if(!validNodeVersions_.Equals(other.validNodeVersions_)) return false;
      if (DefaultImageType != other.DefaultImageType) return false;
      if(!validImageTypes_.Equals(other.validImageTypes_)) return false;
      if(!validMasterVersions_.Equals(other.validMasterVersions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DefaultClusterVersion.Length != 0) hash ^= DefaultClusterVersion.GetHashCode();
      hash ^= validNodeVersions_.GetHashCode();
      if (DefaultImageType.Length != 0) hash ^= DefaultImageType.GetHashCode();
      hash ^= validImageTypes_.GetHashCode();
      hash ^= validMasterVersions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (DefaultClusterVersion.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DefaultClusterVersion);
      }
      validNodeVersions_.WriteTo(output, _repeated_validNodeVersions_codec);
      if (DefaultImageType.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(DefaultImageType);
      }
      validImageTypes_.WriteTo(output, _repeated_validImageTypes_codec);
      validMasterVersions_.WriteTo(output, _repeated_validMasterVersions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DefaultClusterVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DefaultClusterVersion);
      }
      size += validNodeVersions_.CalculateSize(_repeated_validNodeVersions_codec);
      if (DefaultImageType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DefaultImageType);
      }
      size += validImageTypes_.CalculateSize(_repeated_validImageTypes_codec);
      size += validMasterVersions_.CalculateSize(_repeated_validMasterVersions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ServerConfig other) {
      if (other == null) {
        return;
      }
      if (other.DefaultClusterVersion.Length != 0) {
        DefaultClusterVersion = other.DefaultClusterVersion;
      }
      validNodeVersions_.Add(other.validNodeVersions_);
      if (other.DefaultImageType.Length != 0) {
        DefaultImageType = other.DefaultImageType;
      }
      validImageTypes_.Add(other.validImageTypes_);
      validMasterVersions_.Add(other.validMasterVersions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DefaultClusterVersion = input.ReadString();
            break;
          }
          case 26: {
            validNodeVersions_.AddEntriesFrom(input, _repeated_validNodeVersions_codec);
            break;
          }
          case 34: {
            DefaultImageType = input.ReadString();
            break;
          }
          case 42: {
            validImageTypes_.AddEntriesFrom(input, _repeated_validImageTypes_codec);
            break;
          }
          case 50: {
            validMasterVersions_.AddEntriesFrom(input, _repeated_validMasterVersions_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// CreateNodePoolRequest creates a node pool for a cluster.
  /// </summary>
  public sealed partial class CreateNodePoolRequest : pb::IMessage<CreateNodePoolRequest> {
    private static readonly pb::MessageParser<CreateNodePoolRequest> _parser = new pb::MessageParser<CreateNodePoolRequest>(() => new CreateNodePoolRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateNodePoolRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[41]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateNodePoolRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateNodePoolRequest(CreateNodePoolRequest other) : this() {
      projectId_ = other.projectId_;
      zone_ = other.zone_;
      clusterId_ = other.clusterId_;
      nodePool_ = other.nodePool_ != null ? other.nodePool_.Clone() : null;
      parent_ = other.parent_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateNodePoolRequest Clone() {
      return new CreateNodePoolRequest(this);
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 1;
    private string projectId_ = "";
    /// <summary>
    /// Required. Deprecated. The Google Developers Console [project ID or project
    /// number](https://developers.google.com/console/help/new/#projectnumber).
    /// This field has been deprecated and replaced by the parent field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "zone" field.</summary>
    public const int ZoneFieldNumber = 2;
    private string zone_ = "";
    /// <summary>
    /// Required. Deprecated. The name of the Google Compute Engine
    /// [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster
    /// resides.
    /// This field has been deprecated and replaced by the parent field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Zone {
      get { return zone_; }
      set {
        zone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cluster_id" field.</summary>
    public const int ClusterIdFieldNumber = 3;
    private string clusterId_ = "";
    /// <summary>
    /// Required. Deprecated. The name of the cluster.
    /// This field has been deprecated and replaced by the parent field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterId {
      get { return clusterId_; }
      set {
        clusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "node_pool" field.</summary>
    public const int NodePoolFieldNumber = 4;
    private global::Google.Cloud.Container.V1.NodePool nodePool_;
    /// <summary>
    /// Required. The node pool to create.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.NodePool NodePool {
      get { return nodePool_; }
      set {
        nodePool_ = value;
      }
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 6;
    private string parent_ = "";
    /// <summary>
    /// The parent (project, location, cluster id) where the node pool will be
    /// created. Specified in the format
    /// 'projects/*/locations/*/clusters/*'.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateNodePoolRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateNodePoolRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProjectId != other.ProjectId) return false;
      if (Zone != other.Zone) return false;
      if (ClusterId != other.ClusterId) return false;
      if (!object.Equals(NodePool, other.NodePool)) return false;
      if (Parent != other.Parent) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (Zone.Length != 0) hash ^= Zone.GetHashCode();
      if (ClusterId.Length != 0) hash ^= ClusterId.GetHashCode();
      if (nodePool_ != null) hash ^= NodePool.GetHashCode();
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (Zone.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Zone);
      }
      if (ClusterId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ClusterId);
      }
      if (nodePool_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(NodePool);
      }
      if (Parent.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Parent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (Zone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Zone);
      }
      if (ClusterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterId);
      }
      if (nodePool_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NodePool);
      }
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateNodePoolRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.Zone.Length != 0) {
        Zone = other.Zone;
      }
      if (other.ClusterId.Length != 0) {
        ClusterId = other.ClusterId;
      }
      if (other.nodePool_ != null) {
        if (nodePool_ == null) {
          NodePool = new global::Google.Cloud.Container.V1.NodePool();
        }
        NodePool.MergeFrom(other.NodePool);
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 18: {
            Zone = input.ReadString();
            break;
          }
          case 26: {
            ClusterId = input.ReadString();
            break;
          }
          case 34: {
            if (nodePool_ == null) {
              NodePool = new global::Google.Cloud.Container.V1.NodePool();
            }
            input.ReadMessage(NodePool);
            break;
          }
          case 50: {
            Parent = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// DeleteNodePoolRequest deletes a node pool for a cluster.
  /// </summary>
  public sealed partial class DeleteNodePoolRequest : pb::IMessage<DeleteNodePoolRequest> {
    private static readonly pb::MessageParser<DeleteNodePoolRequest> _parser = new pb::MessageParser<DeleteNodePoolRequest>(() => new DeleteNodePoolRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteNodePoolRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[42]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteNodePoolRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteNodePoolRequest(DeleteNodePoolRequest other) : this() {
      projectId_ = other.projectId_;
      zone_ = other.zone_;
      clusterId_ = other.clusterId_;
      nodePoolId_ = other.nodePoolId_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteNodePoolRequest Clone() {
      return new DeleteNodePoolRequest(this);
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 1;
    private string projectId_ = "";
    /// <summary>
    /// Required. Deprecated. The Google Developers Console [project ID or project
    /// number](https://developers.google.com/console/help/new/#projectnumber).
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "zone" field.</summary>
    public const int ZoneFieldNumber = 2;
    private string zone_ = "";
    /// <summary>
    /// Required. Deprecated. The name of the Google Compute Engine
    /// [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster
    /// resides.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Zone {
      get { return zone_; }
      set {
        zone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cluster_id" field.</summary>
    public const int ClusterIdFieldNumber = 3;
    private string clusterId_ = "";
    /// <summary>
    /// Required. Deprecated. The name of the cluster.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterId {
      get { return clusterId_; }
      set {
        clusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "node_pool_id" field.</summary>
    public const int NodePoolIdFieldNumber = 4;
    private string nodePoolId_ = "";
    /// <summary>
    /// Required. Deprecated. The name of the node pool to delete.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NodePoolId {
      get { return nodePoolId_; }
      set {
        nodePoolId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 6;
    private string name_ = "";
    /// <summary>
    /// The name (project, location, cluster, node pool id) of the node pool to
    /// delete. Specified in the format
    /// 'projects/*/locations/*/clusters/*/nodePools/*'.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteNodePoolRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteNodePoolRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProjectId != other.ProjectId) return false;
      if (Zone != other.Zone) return false;
      if (ClusterId != other.ClusterId) return false;
      if (NodePoolId != other.NodePoolId) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (Zone.Length != 0) hash ^= Zone.GetHashCode();
      if (ClusterId.Length != 0) hash ^= ClusterId.GetHashCode();
      if (NodePoolId.Length != 0) hash ^= NodePoolId.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (Zone.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Zone);
      }
      if (ClusterId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ClusterId);
      }
      if (NodePoolId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(NodePoolId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (Zone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Zone);
      }
      if (ClusterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterId);
      }
      if (NodePoolId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NodePoolId);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteNodePoolRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.Zone.Length != 0) {
        Zone = other.Zone;
      }
      if (other.ClusterId.Length != 0) {
        ClusterId = other.ClusterId;
      }
      if (other.NodePoolId.Length != 0) {
        NodePoolId = other.NodePoolId;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 18: {
            Zone = input.ReadString();
            break;
          }
          case 26: {
            ClusterId = input.ReadString();
            break;
          }
          case 34: {
            NodePoolId = input.ReadString();
            break;
          }
          case 50: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// ListNodePoolsRequest lists the node pool(s) for a cluster.
  /// </summary>
  public sealed partial class ListNodePoolsRequest : pb::IMessage<ListNodePoolsRequest> {
    private static readonly pb::MessageParser<ListNodePoolsRequest> _parser = new pb::MessageParser<ListNodePoolsRequest>(() => new ListNodePoolsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListNodePoolsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[43]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListNodePoolsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListNodePoolsRequest(ListNodePoolsRequest other) : this() {
      projectId_ = other.projectId_;
      zone_ = other.zone_;
      clusterId_ = other.clusterId_;
      parent_ = other.parent_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListNodePoolsRequest Clone() {
      return new ListNodePoolsRequest(this);
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 1;
    private string projectId_ = "";
    /// <summary>
    /// Required. Deprecated. The Google Developers Console [project ID or project
    /// number](https://developers.google.com/console/help/new/#projectnumber).
    /// This field has been deprecated and replaced by the parent field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "zone" field.</summary>
    public const int ZoneFieldNumber = 2;
    private string zone_ = "";
    /// <summary>
    /// Required. Deprecated. The name of the Google Compute Engine
    /// [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster
    /// resides.
    /// This field has been deprecated and replaced by the parent field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Zone {
      get { return zone_; }
      set {
        zone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cluster_id" field.</summary>
    public const int ClusterIdFieldNumber = 3;
    private string clusterId_ = "";
    /// <summary>
    /// Required. Deprecated. The name of the cluster.
    /// This field has been deprecated and replaced by the parent field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterId {
      get { return clusterId_; }
      set {
        clusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 5;
    private string parent_ = "";
    /// <summary>
    /// The parent (project, location, cluster id) where the node pools will be
    /// listed. Specified in the format 'projects/*/locations/*/clusters/*'.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListNodePoolsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListNodePoolsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProjectId != other.ProjectId) return false;
      if (Zone != other.Zone) return false;
      if (ClusterId != other.ClusterId) return false;
      if (Parent != other.Parent) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (Zone.Length != 0) hash ^= Zone.GetHashCode();
      if (ClusterId.Length != 0) hash ^= ClusterId.GetHashCode();
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (Zone.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Zone);
      }
      if (ClusterId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ClusterId);
      }
      if (Parent.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Parent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (Zone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Zone);
      }
      if (ClusterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterId);
      }
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListNodePoolsRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.Zone.Length != 0) {
        Zone = other.Zone;
      }
      if (other.ClusterId.Length != 0) {
        ClusterId = other.ClusterId;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 18: {
            Zone = input.ReadString();
            break;
          }
          case 26: {
            ClusterId = input.ReadString();
            break;
          }
          case 42: {
            Parent = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// GetNodePoolRequest retrieves a node pool for a cluster.
  /// </summary>
  public sealed partial class GetNodePoolRequest : pb::IMessage<GetNodePoolRequest> {
    private static readonly pb::MessageParser<GetNodePoolRequest> _parser = new pb::MessageParser<GetNodePoolRequest>(() => new GetNodePoolRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetNodePoolRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[44]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetNodePoolRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetNodePoolRequest(GetNodePoolRequest other) : this() {
      projectId_ = other.projectId_;
      zone_ = other.zone_;
      clusterId_ = other.clusterId_;
      nodePoolId_ = other.nodePoolId_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetNodePoolRequest Clone() {
      return new GetNodePoolRequest(this);
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 1;
    private string projectId_ = "";
    /// <summary>
    /// Required. Deprecated. The Google Developers Console [project ID or project
    /// number](https://developers.google.com/console/help/new/#projectnumber).
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "zone" field.</summary>
    public const int ZoneFieldNumber = 2;
    private string zone_ = "";
    /// <summary>
    /// Required. Deprecated. The name of the Google Compute Engine
    /// [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster
    /// resides.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Zone {
      get { return zone_; }
      set {
        zone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cluster_id" field.</summary>
    public const int ClusterIdFieldNumber = 3;
    private string clusterId_ = "";
    /// <summary>
    /// Required. Deprecated. The name of the cluster.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterId {
      get { return clusterId_; }
      set {
        clusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "node_pool_id" field.</summary>
    public const int NodePoolIdFieldNumber = 4;
    private string nodePoolId_ = "";
    /// <summary>
    /// Required. Deprecated. The name of the node pool.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NodePoolId {
      get { return nodePoolId_; }
      set {
        nodePoolId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 6;
    private string name_ = "";
    /// <summary>
    /// The name (project, location, cluster, node pool id) of the node pool to
    /// get. Specified in the format
    /// 'projects/*/locations/*/clusters/*/nodePools/*'.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetNodePoolRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetNodePoolRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProjectId != other.ProjectId) return false;
      if (Zone != other.Zone) return false;
      if (ClusterId != other.ClusterId) return false;
      if (NodePoolId != other.NodePoolId) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (Zone.Length != 0) hash ^= Zone.GetHashCode();
      if (ClusterId.Length != 0) hash ^= ClusterId.GetHashCode();
      if (NodePoolId.Length != 0) hash ^= NodePoolId.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (Zone.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Zone);
      }
      if (ClusterId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ClusterId);
      }
      if (NodePoolId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(NodePoolId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (Zone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Zone);
      }
      if (ClusterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterId);
      }
      if (NodePoolId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NodePoolId);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetNodePoolRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.Zone.Length != 0) {
        Zone = other.Zone;
      }
      if (other.ClusterId.Length != 0) {
        ClusterId = other.ClusterId;
      }
      if (other.NodePoolId.Length != 0) {
        NodePoolId = other.NodePoolId;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 18: {
            Zone = input.ReadString();
            break;
          }
          case 26: {
            ClusterId = input.ReadString();
            break;
          }
          case 34: {
            NodePoolId = input.ReadString();
            break;
          }
          case 50: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// NodePool contains the name and configuration for a cluster's node pool.
  /// Node pools are a set of nodes (i.e. VM's), with a common configuration and
  /// specification, under the control of the cluster master. They may have a set
  /// of Kubernetes labels applied to them, which may be used to reference them
  /// during pod scheduling. They may also be resized up or down, to accommodate
  /// the workload.
  /// </summary>
  public sealed partial class NodePool : pb::IMessage<NodePool> {
    private static readonly pb::MessageParser<NodePool> _parser = new pb::MessageParser<NodePool>(() => new NodePool());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NodePool> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[45]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NodePool() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NodePool(NodePool other) : this() {
      name_ = other.name_;
      config_ = other.config_ != null ? other.config_.Clone() : null;
      initialNodeCount_ = other.initialNodeCount_;
      selfLink_ = other.selfLink_;
      version_ = other.version_;
      instanceGroupUrls_ = other.instanceGroupUrls_.Clone();
      status_ = other.status_;
      statusMessage_ = other.statusMessage_;
      autoscaling_ = other.autoscaling_ != null ? other.autoscaling_.Clone() : null;
      management_ = other.management_ != null ? other.management_.Clone() : null;
      maxPodsConstraint_ = other.maxPodsConstraint_ != null ? other.maxPodsConstraint_.Clone() : null;
      conditions_ = other.conditions_.Clone();
      podIpv4CidrSize_ = other.podIpv4CidrSize_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NodePool Clone() {
      return new NodePool(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// The name of the node pool.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "config" field.</summary>
    public const int ConfigFieldNumber = 2;
    private global::Google.Cloud.Container.V1.NodeConfig config_;
    /// <summary>
    /// The node configuration of the pool.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.NodeConfig Config {
      get { return config_; }
      set {
        config_ = value;
      }
    }

    /// <summary>Field number for the "initial_node_count" field.</summary>
    public const int InitialNodeCountFieldNumber = 3;
    private int initialNodeCount_;
    /// <summary>
    /// The initial node count for the pool. You must ensure that your
    /// Compute Engine &lt;a href="/compute/docs/resource-quotas">resource quota&lt;/a>
    /// is sufficient for this number of instances. You must also have available
    /// firewall and routes quota.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int InitialNodeCount {
      get { return initialNodeCount_; }
      set {
        initialNodeCount_ = value;
      }
    }

    /// <summary>Field number for the "self_link" field.</summary>
    public const int SelfLinkFieldNumber = 100;
    private string selfLink_ = "";
    /// <summary>
    /// [Output only] Server-defined URL for the resource.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SelfLink {
      get { return selfLink_; }
      set {
        selfLink_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 101;
    private string version_ = "";
    /// <summary>
    /// The version of the Kubernetes of this node.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Version {
      get { return version_; }
      set {
        version_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "instance_group_urls" field.</summary>
    public const int InstanceGroupUrlsFieldNumber = 102;
    private static readonly pb::FieldCodec<string> _repeated_instanceGroupUrls_codec
        = pb::FieldCodec.ForString(818);
    private readonly pbc::RepeatedField<string> instanceGroupUrls_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// [Output only] The resource URLs of the [managed instance
    /// groups](https://cloud.google.com/compute/docs/instance-groups/creating-groups-of-managed-instances)
    /// associated with this node pool.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> InstanceGroupUrls {
      get { return instanceGroupUrls_; }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 103;
    private global::Google.Cloud.Container.V1.NodePool.Types.Status status_ = 0;
    /// <summary>
    /// [Output only] The status of the nodes in this pool instance.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.NodePool.Types.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "status_message" field.</summary>
    public const int StatusMessageFieldNumber = 104;
    private string statusMessage_ = "";
    /// <summary>
    /// [Output only] Additional information about the current status of this
    /// node pool instance, if available.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StatusMessage {
      get { return statusMessage_; }
      set {
        statusMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "autoscaling" field.</summary>
    public const int AutoscalingFieldNumber = 4;
    private global::Google.Cloud.Container.V1.NodePoolAutoscaling autoscaling_;
    /// <summary>
    /// Autoscaler configuration for this NodePool. Autoscaler is enabled
    /// only if a valid configuration is present.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.NodePoolAutoscaling Autoscaling {
      get { return autoscaling_; }
      set {
        autoscaling_ = value;
      }
    }

    /// <summary>Field number for the "management" field.</summary>
    public const int ManagementFieldNumber = 5;
    private global::Google.Cloud.Container.V1.NodeManagement management_;
    /// <summary>
    /// NodeManagement configuration for this NodePool.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.NodeManagement Management {
      get { return management_; }
      set {
        management_ = value;
      }
    }

    /// <summary>Field number for the "max_pods_constraint" field.</summary>
    public const int MaxPodsConstraintFieldNumber = 6;
    private global::Google.Cloud.Container.V1.MaxPodsConstraint maxPodsConstraint_;
    /// <summary>
    /// The constraint on the maximum number of pods that can be run
    /// simultaneously on a node in the node pool.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.MaxPodsConstraint MaxPodsConstraint {
      get { return maxPodsConstraint_; }
      set {
        maxPodsConstraint_ = value;
      }
    }

    /// <summary>Field number for the "conditions" field.</summary>
    public const int ConditionsFieldNumber = 105;
    private static readonly pb::FieldCodec<global::Google.Cloud.Container.V1.StatusCondition> _repeated_conditions_codec
        = pb::FieldCodec.ForMessage(842, global::Google.Cloud.Container.V1.StatusCondition.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Container.V1.StatusCondition> conditions_ = new pbc::RepeatedField<global::Google.Cloud.Container.V1.StatusCondition>();
    /// <summary>
    /// Which conditions caused the current node pool state.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Container.V1.StatusCondition> Conditions {
      get { return conditions_; }
    }

    /// <summary>Field number for the "pod_ipv4_cidr_size" field.</summary>
    public const int PodIpv4CidrSizeFieldNumber = 7;
    private int podIpv4CidrSize_;
    /// <summary>
    /// [Output only] The pod CIDR block size per node in this node pool.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PodIpv4CidrSize {
      get { return podIpv4CidrSize_; }
      set {
        podIpv4CidrSize_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NodePool);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NodePool other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (!object.Equals(Config, other.Config)) return false;
      if (InitialNodeCount != other.InitialNodeCount) return false;
      if (SelfLink != other.SelfLink) return false;
      if (Version != other.Version) return false;
      if(!instanceGroupUrls_.Equals(other.instanceGroupUrls_)) return false;
      if (Status != other.Status) return false;
      if (StatusMessage != other.StatusMessage) return false;
      if (!object.Equals(Autoscaling, other.Autoscaling)) return false;
      if (!object.Equals(Management, other.Management)) return false;
      if (!object.Equals(MaxPodsConstraint, other.MaxPodsConstraint)) return false;
      if(!conditions_.Equals(other.conditions_)) return false;
      if (PodIpv4CidrSize != other.PodIpv4CidrSize) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (config_ != null) hash ^= Config.GetHashCode();
      if (InitialNodeCount != 0) hash ^= InitialNodeCount.GetHashCode();
      if (SelfLink.Length != 0) hash ^= SelfLink.GetHashCode();
      if (Version.Length != 0) hash ^= Version.GetHashCode();
      hash ^= instanceGroupUrls_.GetHashCode();
      if (Status != 0) hash ^= Status.GetHashCode();
      if (StatusMessage.Length != 0) hash ^= StatusMessage.GetHashCode();
      if (autoscaling_ != null) hash ^= Autoscaling.GetHashCode();
      if (management_ != null) hash ^= Management.GetHashCode();
      if (maxPodsConstraint_ != null) hash ^= MaxPodsConstraint.GetHashCode();
      hash ^= conditions_.GetHashCode();
      if (PodIpv4CidrSize != 0) hash ^= PodIpv4CidrSize.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (config_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Config);
      }
      if (InitialNodeCount != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(InitialNodeCount);
      }
      if (autoscaling_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Autoscaling);
      }
      if (management_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Management);
      }
      if (maxPodsConstraint_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(MaxPodsConstraint);
      }
      if (PodIpv4CidrSize != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(PodIpv4CidrSize);
      }
      if (SelfLink.Length != 0) {
        output.WriteRawTag(162, 6);
        output.WriteString(SelfLink);
      }
      if (Version.Length != 0) {
        output.WriteRawTag(170, 6);
        output.WriteString(Version);
      }
      instanceGroupUrls_.WriteTo(output, _repeated_instanceGroupUrls_codec);
      if (Status != 0) {
        output.WriteRawTag(184, 6);
        output.WriteEnum((int) Status);
      }
      if (StatusMessage.Length != 0) {
        output.WriteRawTag(194, 6);
        output.WriteString(StatusMessage);
      }
      conditions_.WriteTo(output, _repeated_conditions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (config_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Config);
      }
      if (InitialNodeCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(InitialNodeCount);
      }
      if (SelfLink.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(SelfLink);
      }
      if (Version.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Version);
      }
      size += instanceGroupUrls_.CalculateSize(_repeated_instanceGroupUrls_codec);
      if (Status != 0) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (StatusMessage.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(StatusMessage);
      }
      if (autoscaling_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Autoscaling);
      }
      if (management_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Management);
      }
      if (maxPodsConstraint_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MaxPodsConstraint);
      }
      size += conditions_.CalculateSize(_repeated_conditions_codec);
      if (PodIpv4CidrSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PodIpv4CidrSize);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NodePool other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.config_ != null) {
        if (config_ == null) {
          Config = new global::Google.Cloud.Container.V1.NodeConfig();
        }
        Config.MergeFrom(other.Config);
      }
      if (other.InitialNodeCount != 0) {
        InitialNodeCount = other.InitialNodeCount;
      }
      if (other.SelfLink.Length != 0) {
        SelfLink = other.SelfLink;
      }
      if (other.Version.Length != 0) {
        Version = other.Version;
      }
      instanceGroupUrls_.Add(other.instanceGroupUrls_);
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.StatusMessage.Length != 0) {
        StatusMessage = other.StatusMessage;
      }
      if (other.autoscaling_ != null) {
        if (autoscaling_ == null) {
          Autoscaling = new global::Google.Cloud.Container.V1.NodePoolAutoscaling();
        }
        Autoscaling.MergeFrom(other.Autoscaling);
      }
      if (other.management_ != null) {
        if (management_ == null) {
          Management = new global::Google.Cloud.Container.V1.NodeManagement();
        }
        Management.MergeFrom(other.Management);
      }
      if (other.maxPodsConstraint_ != null) {
        if (maxPodsConstraint_ == null) {
          MaxPodsConstraint = new global::Google.Cloud.Container.V1.MaxPodsConstraint();
        }
        MaxPodsConstraint.MergeFrom(other.MaxPodsConstraint);
      }
      conditions_.Add(other.conditions_);
      if (other.PodIpv4CidrSize != 0) {
        PodIpv4CidrSize = other.PodIpv4CidrSize;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            if (config_ == null) {
              Config = new global::Google.Cloud.Container.V1.NodeConfig();
            }
            input.ReadMessage(Config);
            break;
          }
          case 24: {
            InitialNodeCount = input.ReadInt32();
            break;
          }
          case 34: {
            if (autoscaling_ == null) {
              Autoscaling = new global::Google.Cloud.Container.V1.NodePoolAutoscaling();
            }
            input.ReadMessage(Autoscaling);
            break;
          }
          case 42: {
            if (management_ == null) {
              Management = new global::Google.Cloud.Container.V1.NodeManagement();
            }
            input.ReadMessage(Management);
            break;
          }
          case 50: {
            if (maxPodsConstraint_ == null) {
              MaxPodsConstraint = new global::Google.Cloud.Container.V1.MaxPodsConstraint();
            }
            input.ReadMessage(MaxPodsConstraint);
            break;
          }
          case 56: {
            PodIpv4CidrSize = input.ReadInt32();
            break;
          }
          case 802: {
            SelfLink = input.ReadString();
            break;
          }
          case 810: {
            Version = input.ReadString();
            break;
          }
          case 818: {
            instanceGroupUrls_.AddEntriesFrom(input, _repeated_instanceGroupUrls_codec);
            break;
          }
          case 824: {
            Status = (global::Google.Cloud.Container.V1.NodePool.Types.Status) input.ReadEnum();
            break;
          }
          case 834: {
            StatusMessage = input.ReadString();
            break;
          }
          case 842: {
            conditions_.AddEntriesFrom(input, _repeated_conditions_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the NodePool message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// The current status of the node pool instance.
      /// </summary>
      public enum Status {
        /// <summary>
        /// Not set.
        /// </summary>
        [pbr::OriginalName("STATUS_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// The PROVISIONING state indicates the node pool is being created.
        /// </summary>
        [pbr::OriginalName("PROVISIONING")] Provisioning = 1,
        /// <summary>
        /// The RUNNING state indicates the node pool has been created
        /// and is fully usable.
        /// </summary>
        [pbr::OriginalName("RUNNING")] Running = 2,
        /// <summary>
        /// The RUNNING_WITH_ERROR state indicates the node pool has been created
        /// and is partially usable. Some error state has occurred and some
        /// functionality may be impaired. Customer may need to reissue a request
        /// or trigger a new update.
        /// </summary>
        [pbr::OriginalName("RUNNING_WITH_ERROR")] RunningWithError = 3,
        /// <summary>
        /// The RECONCILING state indicates that some work is actively being done on
        /// the node pool, such as upgrading node software. Details can
        /// be found in the `statusMessage` field.
        /// </summary>
        [pbr::OriginalName("RECONCILING")] Reconciling = 4,
        /// <summary>
        /// The STOPPING state indicates the node pool is being deleted.
        /// </summary>
        [pbr::OriginalName("STOPPING")] Stopping = 5,
        /// <summary>
        /// The ERROR state indicates the node pool may be unusable. Details
        /// can be found in the `statusMessage` field.
        /// </summary>
        [pbr::OriginalName("ERROR")] Error = 6,
      }

    }
    #endregion

  }

  /// <summary>
  /// NodeManagement defines the set of node management services turned on for the
  /// node pool.
  /// </summary>
  public sealed partial class NodeManagement : pb::IMessage<NodeManagement> {
    private static readonly pb::MessageParser<NodeManagement> _parser = new pb::MessageParser<NodeManagement>(() => new NodeManagement());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NodeManagement> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[46]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NodeManagement() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NodeManagement(NodeManagement other) : this() {
      autoUpgrade_ = other.autoUpgrade_;
      autoRepair_ = other.autoRepair_;
      upgradeOptions_ = other.upgradeOptions_ != null ? other.upgradeOptions_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NodeManagement Clone() {
      return new NodeManagement(this);
    }

    /// <summary>Field number for the "auto_upgrade" field.</summary>
    public const int AutoUpgradeFieldNumber = 1;
    private bool autoUpgrade_;
    /// <summary>
    /// A flag that specifies whether node auto-upgrade is enabled for the node
    /// pool. If enabled, node auto-upgrade helps keep the nodes in your node pool
    /// up to date with the latest release version of Kubernetes.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool AutoUpgrade {
      get { return autoUpgrade_; }
      set {
        autoUpgrade_ = value;
      }
    }

    /// <summary>Field number for the "auto_repair" field.</summary>
    public const int AutoRepairFieldNumber = 2;
    private bool autoRepair_;
    /// <summary>
    /// A flag that specifies whether the node auto-repair is enabled for the node
    /// pool. If enabled, the nodes in this node pool will be monitored and, if
    /// they fail health checks too many times, an automatic repair action will be
    /// triggered.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool AutoRepair {
      get { return autoRepair_; }
      set {
        autoRepair_ = value;
      }
    }

    /// <summary>Field number for the "upgrade_options" field.</summary>
    public const int UpgradeOptionsFieldNumber = 10;
    private global::Google.Cloud.Container.V1.AutoUpgradeOptions upgradeOptions_;
    /// <summary>
    /// Specifies the Auto Upgrade knobs for the node pool.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.AutoUpgradeOptions UpgradeOptions {
      get { return upgradeOptions_; }
      set {
        upgradeOptions_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NodeManagement);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NodeManagement other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AutoUpgrade != other.AutoUpgrade) return false;
      if (AutoRepair != other.AutoRepair) return false;
      if (!object.Equals(UpgradeOptions, other.UpgradeOptions)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AutoUpgrade != false) hash ^= AutoUpgrade.GetHashCode();
      if (AutoRepair != false) hash ^= AutoRepair.GetHashCode();
      if (upgradeOptions_ != null) hash ^= UpgradeOptions.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AutoUpgrade != false) {
        output.WriteRawTag(8);
        output.WriteBool(AutoUpgrade);
      }
      if (AutoRepair != false) {
        output.WriteRawTag(16);
        output.WriteBool(AutoRepair);
      }
      if (upgradeOptions_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(UpgradeOptions);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AutoUpgrade != false) {
        size += 1 + 1;
      }
      if (AutoRepair != false) {
        size += 1 + 1;
      }
      if (upgradeOptions_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpgradeOptions);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NodeManagement other) {
      if (other == null) {
        return;
      }
      if (other.AutoUpgrade != false) {
        AutoUpgrade = other.AutoUpgrade;
      }
      if (other.AutoRepair != false) {
        AutoRepair = other.AutoRepair;
      }
      if (other.upgradeOptions_ != null) {
        if (upgradeOptions_ == null) {
          UpgradeOptions = new global::Google.Cloud.Container.V1.AutoUpgradeOptions();
        }
        UpgradeOptions.MergeFrom(other.UpgradeOptions);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AutoUpgrade = input.ReadBool();
            break;
          }
          case 16: {
            AutoRepair = input.ReadBool();
            break;
          }
          case 82: {
            if (upgradeOptions_ == null) {
              UpgradeOptions = new global::Google.Cloud.Container.V1.AutoUpgradeOptions();
            }
            input.ReadMessage(UpgradeOptions);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// AutoUpgradeOptions defines the set of options for the user to control how
  /// the Auto Upgrades will proceed.
  /// </summary>
  public sealed partial class AutoUpgradeOptions : pb::IMessage<AutoUpgradeOptions> {
    private static readonly pb::MessageParser<AutoUpgradeOptions> _parser = new pb::MessageParser<AutoUpgradeOptions>(() => new AutoUpgradeOptions());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AutoUpgradeOptions> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[47]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AutoUpgradeOptions() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AutoUpgradeOptions(AutoUpgradeOptions other) : this() {
      autoUpgradeStartTime_ = other.autoUpgradeStartTime_;
      description_ = other.description_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AutoUpgradeOptions Clone() {
      return new AutoUpgradeOptions(this);
    }

    /// <summary>Field number for the "auto_upgrade_start_time" field.</summary>
    public const int AutoUpgradeStartTimeFieldNumber = 1;
    private string autoUpgradeStartTime_ = "";
    /// <summary>
    /// [Output only] This field is set when upgrades are about to commence
    /// with the approximate start time for the upgrades, in
    /// [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AutoUpgradeStartTime {
      get { return autoUpgradeStartTime_; }
      set {
        autoUpgradeStartTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 2;
    private string description_ = "";
    /// <summary>
    /// [Output only] This field is set when upgrades are about to commence
    /// with the description of the upgrade.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AutoUpgradeOptions);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AutoUpgradeOptions other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AutoUpgradeStartTime != other.AutoUpgradeStartTime) return false;
      if (Description != other.Description) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AutoUpgradeStartTime.Length != 0) hash ^= AutoUpgradeStartTime.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AutoUpgradeStartTime.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AutoUpgradeStartTime);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AutoUpgradeStartTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AutoUpgradeStartTime);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AutoUpgradeOptions other) {
      if (other == null) {
        return;
      }
      if (other.AutoUpgradeStartTime.Length != 0) {
        AutoUpgradeStartTime = other.AutoUpgradeStartTime;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AutoUpgradeStartTime = input.ReadString();
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// MaintenancePolicy defines the maintenance policy to be used for the cluster.
  /// </summary>
  public sealed partial class MaintenancePolicy : pb::IMessage<MaintenancePolicy> {
    private static readonly pb::MessageParser<MaintenancePolicy> _parser = new pb::MessageParser<MaintenancePolicy>(() => new MaintenancePolicy());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MaintenancePolicy> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[48]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MaintenancePolicy() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MaintenancePolicy(MaintenancePolicy other) : this() {
      window_ = other.window_ != null ? other.window_.Clone() : null;
      resourceVersion_ = other.resourceVersion_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MaintenancePolicy Clone() {
      return new MaintenancePolicy(this);
    }

    /// <summary>Field number for the "window" field.</summary>
    public const int WindowFieldNumber = 1;
    private global::Google.Cloud.Container.V1.MaintenanceWindow window_;
    /// <summary>
    /// Specifies the maintenance window in which maintenance may be performed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.MaintenanceWindow Window {
      get { return window_; }
      set {
        window_ = value;
      }
    }

    /// <summary>Field number for the "resource_version" field.</summary>
    public const int ResourceVersionFieldNumber = 3;
    private string resourceVersion_ = "";
    /// <summary>
    /// A hash identifying the version of this policy, so that updates to fields of
    /// the policy won't accidentally undo intermediate changes (and so that users
    /// of the API unaware of some fields won't accidentally remove other fields).
    /// Make a &lt;code>get()&lt;/code> request to the cluster to get the current
    /// resource version and include it with requests to set the policy.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ResourceVersion {
      get { return resourceVersion_; }
      set {
        resourceVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MaintenancePolicy);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MaintenancePolicy other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Window, other.Window)) return false;
      if (ResourceVersion != other.ResourceVersion) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (window_ != null) hash ^= Window.GetHashCode();
      if (ResourceVersion.Length != 0) hash ^= ResourceVersion.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (window_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Window);
      }
      if (ResourceVersion.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ResourceVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (window_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Window);
      }
      if (ResourceVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ResourceVersion);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MaintenancePolicy other) {
      if (other == null) {
        return;
      }
      if (other.window_ != null) {
        if (window_ == null) {
          Window = new global::Google.Cloud.Container.V1.MaintenanceWindow();
        }
        Window.MergeFrom(other.Window);
      }
      if (other.ResourceVersion.Length != 0) {
        ResourceVersion = other.ResourceVersion;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (window_ == null) {
              Window = new global::Google.Cloud.Container.V1.MaintenanceWindow();
            }
            input.ReadMessage(Window);
            break;
          }
          case 26: {
            ResourceVersion = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// MaintenanceWindow defines the maintenance window to be used for the cluster.
  /// </summary>
  public sealed partial class MaintenanceWindow : pb::IMessage<MaintenanceWindow> {
    private static readonly pb::MessageParser<MaintenanceWindow> _parser = new pb::MessageParser<MaintenanceWindow>(() => new MaintenanceWindow());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MaintenanceWindow> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[49]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MaintenanceWindow() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MaintenanceWindow(MaintenanceWindow other) : this() {
      maintenanceExclusions_ = other.maintenanceExclusions_.Clone();
      switch (other.PolicyCase) {
        case PolicyOneofCase.DailyMaintenanceWindow:
          DailyMaintenanceWindow = other.DailyMaintenanceWindow.Clone();
          break;
        case PolicyOneofCase.RecurringWindow:
          RecurringWindow = other.RecurringWindow.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MaintenanceWindow Clone() {
      return new MaintenanceWindow(this);
    }

    /// <summary>Field number for the "daily_maintenance_window" field.</summary>
    public const int DailyMaintenanceWindowFieldNumber = 2;
    /// <summary>
    /// DailyMaintenanceWindow specifies a daily maintenance operation window.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.DailyMaintenanceWindow DailyMaintenanceWindow {
      get { return policyCase_ == PolicyOneofCase.DailyMaintenanceWindow ? (global::Google.Cloud.Container.V1.DailyMaintenanceWindow) policy_ : null; }
      set {
        policy_ = value;
        policyCase_ = value == null ? PolicyOneofCase.None : PolicyOneofCase.DailyMaintenanceWindow;
      }
    }

    /// <summary>Field number for the "recurring_window" field.</summary>
    public const int RecurringWindowFieldNumber = 3;
    /// <summary>
    /// RecurringWindow specifies some number of recurring time periods for
    /// maintenance to occur. The time windows may be overlapping. If no
    /// maintenance windows are set, maintenance can occur at any time.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.RecurringTimeWindow RecurringWindow {
      get { return policyCase_ == PolicyOneofCase.RecurringWindow ? (global::Google.Cloud.Container.V1.RecurringTimeWindow) policy_ : null; }
      set {
        policy_ = value;
        policyCase_ = value == null ? PolicyOneofCase.None : PolicyOneofCase.RecurringWindow;
      }
    }

    /// <summary>Field number for the "maintenance_exclusions" field.</summary>
    public const int MaintenanceExclusionsFieldNumber = 4;
    private static readonly pbc::MapField<string, global::Google.Cloud.Container.V1.TimeWindow>.Codec _map_maintenanceExclusions_codec
        = new pbc::MapField<string, global::Google.Cloud.Container.V1.TimeWindow>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForMessage(18, global::Google.Cloud.Container.V1.TimeWindow.Parser), 34);
    private readonly pbc::MapField<string, global::Google.Cloud.Container.V1.TimeWindow> maintenanceExclusions_ = new pbc::MapField<string, global::Google.Cloud.Container.V1.TimeWindow>();
    /// <summary>
    /// Exceptions to maintenance window. Non-emergency maintenance should not
    /// occur in these windows.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::Google.Cloud.Container.V1.TimeWindow> MaintenanceExclusions {
      get { return maintenanceExclusions_; }
    }

    private object policy_;
    /// <summary>Enum of possible cases for the "policy" oneof.</summary>
    public enum PolicyOneofCase {
      None = 0,
      DailyMaintenanceWindow = 2,
      RecurringWindow = 3,
    }
    private PolicyOneofCase policyCase_ = PolicyOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PolicyOneofCase PolicyCase {
      get { return policyCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPolicy() {
      policyCase_ = PolicyOneofCase.None;
      policy_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MaintenanceWindow);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MaintenanceWindow other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(DailyMaintenanceWindow, other.DailyMaintenanceWindow)) return false;
      if (!object.Equals(RecurringWindow, other.RecurringWindow)) return false;
      if (!MaintenanceExclusions.Equals(other.MaintenanceExclusions)) return false;
      if (PolicyCase != other.PolicyCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (policyCase_ == PolicyOneofCase.DailyMaintenanceWindow) hash ^= DailyMaintenanceWindow.GetHashCode();
      if (policyCase_ == PolicyOneofCase.RecurringWindow) hash ^= RecurringWindow.GetHashCode();
      hash ^= MaintenanceExclusions.GetHashCode();
      hash ^= (int) policyCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (policyCase_ == PolicyOneofCase.DailyMaintenanceWindow) {
        output.WriteRawTag(18);
        output.WriteMessage(DailyMaintenanceWindow);
      }
      if (policyCase_ == PolicyOneofCase.RecurringWindow) {
        output.WriteRawTag(26);
        output.WriteMessage(RecurringWindow);
      }
      maintenanceExclusions_.WriteTo(output, _map_maintenanceExclusions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (policyCase_ == PolicyOneofCase.DailyMaintenanceWindow) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DailyMaintenanceWindow);
      }
      if (policyCase_ == PolicyOneofCase.RecurringWindow) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RecurringWindow);
      }
      size += maintenanceExclusions_.CalculateSize(_map_maintenanceExclusions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MaintenanceWindow other) {
      if (other == null) {
        return;
      }
      maintenanceExclusions_.Add(other.maintenanceExclusions_);
      switch (other.PolicyCase) {
        case PolicyOneofCase.DailyMaintenanceWindow:
          if (DailyMaintenanceWindow == null) {
            DailyMaintenanceWindow = new global::Google.Cloud.Container.V1.DailyMaintenanceWindow();
          }
          DailyMaintenanceWindow.MergeFrom(other.DailyMaintenanceWindow);
          break;
        case PolicyOneofCase.RecurringWindow:
          if (RecurringWindow == null) {
            RecurringWindow = new global::Google.Cloud.Container.V1.RecurringTimeWindow();
          }
          RecurringWindow.MergeFrom(other.RecurringWindow);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            global::Google.Cloud.Container.V1.DailyMaintenanceWindow subBuilder = new global::Google.Cloud.Container.V1.DailyMaintenanceWindow();
            if (policyCase_ == PolicyOneofCase.DailyMaintenanceWindow) {
              subBuilder.MergeFrom(DailyMaintenanceWindow);
            }
            input.ReadMessage(subBuilder);
            DailyMaintenanceWindow = subBuilder;
            break;
          }
          case 26: {
            global::Google.Cloud.Container.V1.RecurringTimeWindow subBuilder = new global::Google.Cloud.Container.V1.RecurringTimeWindow();
            if (policyCase_ == PolicyOneofCase.RecurringWindow) {
              subBuilder.MergeFrom(RecurringWindow);
            }
            input.ReadMessage(subBuilder);
            RecurringWindow = subBuilder;
            break;
          }
          case 34: {
            maintenanceExclusions_.AddEntriesFrom(input, _map_maintenanceExclusions_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Represents an arbitrary window of time.
  /// </summary>
  public sealed partial class TimeWindow : pb::IMessage<TimeWindow> {
    private static readonly pb::MessageParser<TimeWindow> _parser = new pb::MessageParser<TimeWindow>(() => new TimeWindow());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TimeWindow> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[50]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimeWindow() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimeWindow(TimeWindow other) : this() {
      startTime_ = other.startTime_ != null ? other.startTime_.Clone() : null;
      endTime_ = other.endTime_ != null ? other.endTime_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimeWindow Clone() {
      return new TimeWindow(this);
    }

    /// <summary>Field number for the "start_time" field.</summary>
    public const int StartTimeFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Timestamp startTime_;
    /// <summary>
    /// The time that the window first starts.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp StartTime {
      get { return startTime_; }
      set {
        startTime_ = value;
      }
    }

    /// <summary>Field number for the "end_time" field.</summary>
    public const int EndTimeFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp endTime_;
    /// <summary>
    /// The time that the window ends. The end time should take place after the
    /// start time.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp EndTime {
      get { return endTime_; }
      set {
        endTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TimeWindow);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TimeWindow other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(StartTime, other.StartTime)) return false;
      if (!object.Equals(EndTime, other.EndTime)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (startTime_ != null) hash ^= StartTime.GetHashCode();
      if (endTime_ != null) hash ^= EndTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (startTime_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(StartTime);
      }
      if (endTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(EndTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (startTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartTime);
      }
      if (endTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EndTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TimeWindow other) {
      if (other == null) {
        return;
      }
      if (other.startTime_ != null) {
        if (startTime_ == null) {
          StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        StartTime.MergeFrom(other.StartTime);
      }
      if (other.endTime_ != null) {
        if (endTime_ == null) {
          EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        EndTime.MergeFrom(other.EndTime);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (startTime_ == null) {
              StartTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartTime);
            break;
          }
          case 18: {
            if (endTime_ == null) {
              EndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndTime);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Represents an arbitrary window of time that recurs.
  /// </summary>
  public sealed partial class RecurringTimeWindow : pb::IMessage<RecurringTimeWindow> {
    private static readonly pb::MessageParser<RecurringTimeWindow> _parser = new pb::MessageParser<RecurringTimeWindow>(() => new RecurringTimeWindow());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RecurringTimeWindow> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[51]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecurringTimeWindow() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecurringTimeWindow(RecurringTimeWindow other) : this() {
      window_ = other.window_ != null ? other.window_.Clone() : null;
      recurrence_ = other.recurrence_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecurringTimeWindow Clone() {
      return new RecurringTimeWindow(this);
    }

    /// <summary>Field number for the "window" field.</summary>
    public const int WindowFieldNumber = 1;
    private global::Google.Cloud.Container.V1.TimeWindow window_;
    /// <summary>
    /// The window of the first recurrence.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.TimeWindow Window {
      get { return window_; }
      set {
        window_ = value;
      }
    }

    /// <summary>Field number for the "recurrence" field.</summary>
    public const int RecurrenceFieldNumber = 2;
    private string recurrence_ = "";
    /// <summary>
    /// An RRULE (https://tools.ietf.org/html/rfc5545#section-3.8.5.3) for how
    /// this window reccurs. They go on for the span of time between the start and
    /// end time.
    ///
    /// For example, to have something repeat every weekday, you'd use:
    ///   &lt;code>FREQ=WEEKLY;BYDAY=MO,TU,WE,TH,FR&lt;/code>
    /// To repeat some window daily (equivalent to the DailyMaintenanceWindow):
    ///   &lt;code>FREQ=DAILY&lt;/code>
    /// For the first weekend of every month:
    ///   &lt;code>FREQ=MONTHLY;BYSETPOS=1;BYDAY=SA,SU&lt;/code>
    /// This specifies how frequently the window starts. Eg, if you wanted to have
    /// a 9-5 UTC-4 window every weekday, you'd use something like:
    /// &lt;code>
    ///   start time = 2019-01-01T09:00:00-0400
    ///   end time = 2019-01-01T17:00:00-0400
    ///   recurrence = FREQ=WEEKLY;BYDAY=MO,TU,WE,TH,FR
    /// &lt;/code>
    /// Windows can span multiple days. Eg, to make the window encompass every
    /// weekend from midnight Saturday till the last minute of Sunday UTC:
    /// &lt;code>
    ///   start time = 2019-01-05T00:00:00Z
    ///   end time = 2019-01-07T23:59:00Z
    ///   recurrence = FREQ=WEEKLY;BYDAY=SA
    /// &lt;/code>
    /// Note the start and end time's specific dates are largely arbitrary except
    /// to specify duration of the window and when it first starts.
    /// The FREQ values of HOURLY, MINUTELY, and SECONDLY are not supported.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Recurrence {
      get { return recurrence_; }
      set {
        recurrence_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RecurringTimeWindow);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RecurringTimeWindow other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Window, other.Window)) return false;
      if (Recurrence != other.Recurrence) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (window_ != null) hash ^= Window.GetHashCode();
      if (Recurrence.Length != 0) hash ^= Recurrence.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (window_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Window);
      }
      if (Recurrence.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Recurrence);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (window_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Window);
      }
      if (Recurrence.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Recurrence);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RecurringTimeWindow other) {
      if (other == null) {
        return;
      }
      if (other.window_ != null) {
        if (window_ == null) {
          Window = new global::Google.Cloud.Container.V1.TimeWindow();
        }
        Window.MergeFrom(other.Window);
      }
      if (other.Recurrence.Length != 0) {
        Recurrence = other.Recurrence;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (window_ == null) {
              Window = new global::Google.Cloud.Container.V1.TimeWindow();
            }
            input.ReadMessage(Window);
            break;
          }
          case 18: {
            Recurrence = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Time window specified for daily maintenance operations.
  /// </summary>
  public sealed partial class DailyMaintenanceWindow : pb::IMessage<DailyMaintenanceWindow> {
    private static readonly pb::MessageParser<DailyMaintenanceWindow> _parser = new pb::MessageParser<DailyMaintenanceWindow>(() => new DailyMaintenanceWindow());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DailyMaintenanceWindow> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[52]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DailyMaintenanceWindow() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DailyMaintenanceWindow(DailyMaintenanceWindow other) : this() {
      startTime_ = other.startTime_;
      duration_ = other.duration_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DailyMaintenanceWindow Clone() {
      return new DailyMaintenanceWindow(this);
    }

    /// <summary>Field number for the "start_time" field.</summary>
    public const int StartTimeFieldNumber = 2;
    private string startTime_ = "";
    /// <summary>
    /// Time within the maintenance window to start the maintenance operations.
    /// Time format should be in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt)
    /// format "HH:MM", where HH : [00-23] and MM : [00-59] GMT.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StartTime {
      get { return startTime_; }
      set {
        startTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "duration" field.</summary>
    public const int DurationFieldNumber = 3;
    private string duration_ = "";
    /// <summary>
    /// [Output only] Duration of the time window, automatically chosen to be
    /// smallest possible in the given scenario.
    /// Duration will be in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt)
    /// format "PTnHnMnS".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Duration {
      get { return duration_; }
      set {
        duration_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DailyMaintenanceWindow);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DailyMaintenanceWindow other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StartTime != other.StartTime) return false;
      if (Duration != other.Duration) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StartTime.Length != 0) hash ^= StartTime.GetHashCode();
      if (Duration.Length != 0) hash ^= Duration.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (StartTime.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(StartTime);
      }
      if (Duration.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Duration);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StartTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StartTime);
      }
      if (Duration.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Duration);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DailyMaintenanceWindow other) {
      if (other == null) {
        return;
      }
      if (other.StartTime.Length != 0) {
        StartTime = other.StartTime;
      }
      if (other.Duration.Length != 0) {
        Duration = other.Duration;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            StartTime = input.ReadString();
            break;
          }
          case 26: {
            Duration = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// SetNodePoolManagementRequest sets the node management properties of a node
  /// pool.
  /// </summary>
  public sealed partial class SetNodePoolManagementRequest : pb::IMessage<SetNodePoolManagementRequest> {
    private static readonly pb::MessageParser<SetNodePoolManagementRequest> _parser = new pb::MessageParser<SetNodePoolManagementRequest>(() => new SetNodePoolManagementRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetNodePoolManagementRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[53]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetNodePoolManagementRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetNodePoolManagementRequest(SetNodePoolManagementRequest other) : this() {
      projectId_ = other.projectId_;
      zone_ = other.zone_;
      clusterId_ = other.clusterId_;
      nodePoolId_ = other.nodePoolId_;
      management_ = other.management_ != null ? other.management_.Clone() : null;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetNodePoolManagementRequest Clone() {
      return new SetNodePoolManagementRequest(this);
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 1;
    private string projectId_ = "";
    /// <summary>
    /// Required. Deprecated. The Google Developers Console [project ID or project
    /// number](https://support.google.com/cloud/answer/6158840).
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "zone" field.</summary>
    public const int ZoneFieldNumber = 2;
    private string zone_ = "";
    /// <summary>
    /// Required. Deprecated. The name of the Google Compute Engine
    /// [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster
    /// resides.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Zone {
      get { return zone_; }
      set {
        zone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cluster_id" field.</summary>
    public const int ClusterIdFieldNumber = 3;
    private string clusterId_ = "";
    /// <summary>
    /// Required. Deprecated. The name of the cluster to update.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterId {
      get { return clusterId_; }
      set {
        clusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "node_pool_id" field.</summary>
    public const int NodePoolIdFieldNumber = 4;
    private string nodePoolId_ = "";
    /// <summary>
    /// Required. Deprecated. The name of the node pool to update.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NodePoolId {
      get { return nodePoolId_; }
      set {
        nodePoolId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "management" field.</summary>
    public const int ManagementFieldNumber = 5;
    private global::Google.Cloud.Container.V1.NodeManagement management_;
    /// <summary>
    /// Required. NodeManagement configuration for the node pool.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.NodeManagement Management {
      get { return management_; }
      set {
        management_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 7;
    private string name_ = "";
    /// <summary>
    /// The name (project, location, cluster, node pool id) of the node pool to set
    /// management properties. Specified in the format
    /// 'projects/*/locations/*/clusters/*/nodePools/*'.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetNodePoolManagementRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetNodePoolManagementRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProjectId != other.ProjectId) return false;
      if (Zone != other.Zone) return false;
      if (ClusterId != other.ClusterId) return false;
      if (NodePoolId != other.NodePoolId) return false;
      if (!object.Equals(Management, other.Management)) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (Zone.Length != 0) hash ^= Zone.GetHashCode();
      if (ClusterId.Length != 0) hash ^= ClusterId.GetHashCode();
      if (NodePoolId.Length != 0) hash ^= NodePoolId.GetHashCode();
      if (management_ != null) hash ^= Management.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (Zone.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Zone);
      }
      if (ClusterId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ClusterId);
      }
      if (NodePoolId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(NodePoolId);
      }
      if (management_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Management);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (Zone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Zone);
      }
      if (ClusterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterId);
      }
      if (NodePoolId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NodePoolId);
      }
      if (management_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Management);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetNodePoolManagementRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.Zone.Length != 0) {
        Zone = other.Zone;
      }
      if (other.ClusterId.Length != 0) {
        ClusterId = other.ClusterId;
      }
      if (other.NodePoolId.Length != 0) {
        NodePoolId = other.NodePoolId;
      }
      if (other.management_ != null) {
        if (management_ == null) {
          Management = new global::Google.Cloud.Container.V1.NodeManagement();
        }
        Management.MergeFrom(other.Management);
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 18: {
            Zone = input.ReadString();
            break;
          }
          case 26: {
            ClusterId = input.ReadString();
            break;
          }
          case 34: {
            NodePoolId = input.ReadString();
            break;
          }
          case 42: {
            if (management_ == null) {
              Management = new global::Google.Cloud.Container.V1.NodeManagement();
            }
            input.ReadMessage(Management);
            break;
          }
          case 58: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// SetNodePoolSizeRequest sets the size a node
  /// pool.
  /// </summary>
  public sealed partial class SetNodePoolSizeRequest : pb::IMessage<SetNodePoolSizeRequest> {
    private static readonly pb::MessageParser<SetNodePoolSizeRequest> _parser = new pb::MessageParser<SetNodePoolSizeRequest>(() => new SetNodePoolSizeRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetNodePoolSizeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[54]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetNodePoolSizeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetNodePoolSizeRequest(SetNodePoolSizeRequest other) : this() {
      projectId_ = other.projectId_;
      zone_ = other.zone_;
      clusterId_ = other.clusterId_;
      nodePoolId_ = other.nodePoolId_;
      nodeCount_ = other.nodeCount_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetNodePoolSizeRequest Clone() {
      return new SetNodePoolSizeRequest(this);
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 1;
    private string projectId_ = "";
    /// <summary>
    /// Required. Deprecated. The Google Developers Console [project ID or project
    /// number](https://support.google.com/cloud/answer/6158840).
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "zone" field.</summary>
    public const int ZoneFieldNumber = 2;
    private string zone_ = "";
    /// <summary>
    /// Required. Deprecated. The name of the Google Compute Engine
    /// [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster
    /// resides.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Zone {
      get { return zone_; }
      set {
        zone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cluster_id" field.</summary>
    public const int ClusterIdFieldNumber = 3;
    private string clusterId_ = "";
    /// <summary>
    /// Required. Deprecated. The name of the cluster to update.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterId {
      get { return clusterId_; }
      set {
        clusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "node_pool_id" field.</summary>
    public const int NodePoolIdFieldNumber = 4;
    private string nodePoolId_ = "";
    /// <summary>
    /// Required. Deprecated. The name of the node pool to update.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NodePoolId {
      get { return nodePoolId_; }
      set {
        nodePoolId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "node_count" field.</summary>
    public const int NodeCountFieldNumber = 5;
    private int nodeCount_;
    /// <summary>
    /// Required. The desired node count for the pool.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NodeCount {
      get { return nodeCount_; }
      set {
        nodeCount_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 7;
    private string name_ = "";
    /// <summary>
    /// The name (project, location, cluster, node pool id) of the node pool to set
    /// size.
    /// Specified in the format 'projects/*/locations/*/clusters/*/nodePools/*'.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetNodePoolSizeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetNodePoolSizeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProjectId != other.ProjectId) return false;
      if (Zone != other.Zone) return false;
      if (ClusterId != other.ClusterId) return false;
      if (NodePoolId != other.NodePoolId) return false;
      if (NodeCount != other.NodeCount) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (Zone.Length != 0) hash ^= Zone.GetHashCode();
      if (ClusterId.Length != 0) hash ^= ClusterId.GetHashCode();
      if (NodePoolId.Length != 0) hash ^= NodePoolId.GetHashCode();
      if (NodeCount != 0) hash ^= NodeCount.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (Zone.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Zone);
      }
      if (ClusterId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ClusterId);
      }
      if (NodePoolId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(NodePoolId);
      }
      if (NodeCount != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(NodeCount);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (Zone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Zone);
      }
      if (ClusterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterId);
      }
      if (NodePoolId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NodePoolId);
      }
      if (NodeCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NodeCount);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetNodePoolSizeRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.Zone.Length != 0) {
        Zone = other.Zone;
      }
      if (other.ClusterId.Length != 0) {
        ClusterId = other.ClusterId;
      }
      if (other.NodePoolId.Length != 0) {
        NodePoolId = other.NodePoolId;
      }
      if (other.NodeCount != 0) {
        NodeCount = other.NodeCount;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 18: {
            Zone = input.ReadString();
            break;
          }
          case 26: {
            ClusterId = input.ReadString();
            break;
          }
          case 34: {
            NodePoolId = input.ReadString();
            break;
          }
          case 40: {
            NodeCount = input.ReadInt32();
            break;
          }
          case 58: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// RollbackNodePoolUpgradeRequest rollbacks the previously Aborted or Failed
  /// NodePool upgrade. This will be an no-op if the last upgrade successfully
  /// completed.
  /// </summary>
  public sealed partial class RollbackNodePoolUpgradeRequest : pb::IMessage<RollbackNodePoolUpgradeRequest> {
    private static readonly pb::MessageParser<RollbackNodePoolUpgradeRequest> _parser = new pb::MessageParser<RollbackNodePoolUpgradeRequest>(() => new RollbackNodePoolUpgradeRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RollbackNodePoolUpgradeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[55]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RollbackNodePoolUpgradeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RollbackNodePoolUpgradeRequest(RollbackNodePoolUpgradeRequest other) : this() {
      projectId_ = other.projectId_;
      zone_ = other.zone_;
      clusterId_ = other.clusterId_;
      nodePoolId_ = other.nodePoolId_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RollbackNodePoolUpgradeRequest Clone() {
      return new RollbackNodePoolUpgradeRequest(this);
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 1;
    private string projectId_ = "";
    /// <summary>
    /// Required. Deprecated. The Google Developers Console [project ID or project
    /// number](https://support.google.com/cloud/answer/6158840).
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "zone" field.</summary>
    public const int ZoneFieldNumber = 2;
    private string zone_ = "";
    /// <summary>
    /// Required. Deprecated. The name of the Google Compute Engine
    /// [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster
    /// resides.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Zone {
      get { return zone_; }
      set {
        zone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cluster_id" field.</summary>
    public const int ClusterIdFieldNumber = 3;
    private string clusterId_ = "";
    /// <summary>
    /// Required. Deprecated. The name of the cluster to rollback.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterId {
      get { return clusterId_; }
      set {
        clusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "node_pool_id" field.</summary>
    public const int NodePoolIdFieldNumber = 4;
    private string nodePoolId_ = "";
    /// <summary>
    /// Required. Deprecated. The name of the node pool to rollback.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NodePoolId {
      get { return nodePoolId_; }
      set {
        nodePoolId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 6;
    private string name_ = "";
    /// <summary>
    /// The name (project, location, cluster, node pool id) of the node poll to
    /// rollback upgrade.
    /// Specified in the format 'projects/*/locations/*/clusters/*/nodePools/*'.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RollbackNodePoolUpgradeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RollbackNodePoolUpgradeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProjectId != other.ProjectId) return false;
      if (Zone != other.Zone) return false;
      if (ClusterId != other.ClusterId) return false;
      if (NodePoolId != other.NodePoolId) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (Zone.Length != 0) hash ^= Zone.GetHashCode();
      if (ClusterId.Length != 0) hash ^= ClusterId.GetHashCode();
      if (NodePoolId.Length != 0) hash ^= NodePoolId.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (Zone.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Zone);
      }
      if (ClusterId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ClusterId);
      }
      if (NodePoolId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(NodePoolId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (Zone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Zone);
      }
      if (ClusterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterId);
      }
      if (NodePoolId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NodePoolId);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RollbackNodePoolUpgradeRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.Zone.Length != 0) {
        Zone = other.Zone;
      }
      if (other.ClusterId.Length != 0) {
        ClusterId = other.ClusterId;
      }
      if (other.NodePoolId.Length != 0) {
        NodePoolId = other.NodePoolId;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 18: {
            Zone = input.ReadString();
            break;
          }
          case 26: {
            ClusterId = input.ReadString();
            break;
          }
          case 34: {
            NodePoolId = input.ReadString();
            break;
          }
          case 50: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// ListNodePoolsResponse is the result of ListNodePoolsRequest.
  /// </summary>
  public sealed partial class ListNodePoolsResponse : pb::IMessage<ListNodePoolsResponse> {
    private static readonly pb::MessageParser<ListNodePoolsResponse> _parser = new pb::MessageParser<ListNodePoolsResponse>(() => new ListNodePoolsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListNodePoolsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[56]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListNodePoolsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListNodePoolsResponse(ListNodePoolsResponse other) : this() {
      nodePools_ = other.nodePools_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListNodePoolsResponse Clone() {
      return new ListNodePoolsResponse(this);
    }

    /// <summary>Field number for the "node_pools" field.</summary>
    public const int NodePoolsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.Container.V1.NodePool> _repeated_nodePools_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.Container.V1.NodePool.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Container.V1.NodePool> nodePools_ = new pbc::RepeatedField<global::Google.Cloud.Container.V1.NodePool>();
    /// <summary>
    /// A list of node pools for a cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Container.V1.NodePool> NodePools {
      get { return nodePools_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListNodePoolsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListNodePoolsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!nodePools_.Equals(other.nodePools_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= nodePools_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      nodePools_.WriteTo(output, _repeated_nodePools_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += nodePools_.CalculateSize(_repeated_nodePools_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListNodePoolsResponse other) {
      if (other == null) {
        return;
      }
      nodePools_.Add(other.nodePools_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            nodePools_.AddEntriesFrom(input, _repeated_nodePools_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// ClusterAutoscaling contains global, per-cluster information
  /// required by Cluster Autoscaler to automatically adjust
  /// the size of the cluster and create/delete
  /// node pools based on the current needs.
  /// </summary>
  public sealed partial class ClusterAutoscaling : pb::IMessage<ClusterAutoscaling> {
    private static readonly pb::MessageParser<ClusterAutoscaling> _parser = new pb::MessageParser<ClusterAutoscaling>(() => new ClusterAutoscaling());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClusterAutoscaling> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[57]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClusterAutoscaling() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClusterAutoscaling(ClusterAutoscaling other) : this() {
      enableNodeAutoprovisioning_ = other.enableNodeAutoprovisioning_;
      resourceLimits_ = other.resourceLimits_.Clone();
      autoprovisioningNodePoolDefaults_ = other.autoprovisioningNodePoolDefaults_ != null ? other.autoprovisioningNodePoolDefaults_.Clone() : null;
      autoprovisioningLocations_ = other.autoprovisioningLocations_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClusterAutoscaling Clone() {
      return new ClusterAutoscaling(this);
    }

    /// <summary>Field number for the "enable_node_autoprovisioning" field.</summary>
    public const int EnableNodeAutoprovisioningFieldNumber = 1;
    private bool enableNodeAutoprovisioning_;
    /// <summary>
    /// Enables automatic node pool creation and deletion.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool EnableNodeAutoprovisioning {
      get { return enableNodeAutoprovisioning_; }
      set {
        enableNodeAutoprovisioning_ = value;
      }
    }

    /// <summary>Field number for the "resource_limits" field.</summary>
    public const int ResourceLimitsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Google.Cloud.Container.V1.ResourceLimit> _repeated_resourceLimits_codec
        = pb::FieldCodec.ForMessage(18, global::Google.Cloud.Container.V1.ResourceLimit.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Container.V1.ResourceLimit> resourceLimits_ = new pbc::RepeatedField<global::Google.Cloud.Container.V1.ResourceLimit>();
    /// <summary>
    /// Contains global constraints regarding minimum and maximum
    /// amount of resources in the cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Container.V1.ResourceLimit> ResourceLimits {
      get { return resourceLimits_; }
    }

    /// <summary>Field number for the "autoprovisioning_node_pool_defaults" field.</summary>
    public const int AutoprovisioningNodePoolDefaultsFieldNumber = 4;
    private global::Google.Cloud.Container.V1.AutoprovisioningNodePoolDefaults autoprovisioningNodePoolDefaults_;
    /// <summary>
    /// AutoprovisioningNodePoolDefaults contains defaults for a node pool
    /// created by NAP.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.AutoprovisioningNodePoolDefaults AutoprovisioningNodePoolDefaults {
      get { return autoprovisioningNodePoolDefaults_; }
      set {
        autoprovisioningNodePoolDefaults_ = value;
      }
    }

    /// <summary>Field number for the "autoprovisioning_locations" field.</summary>
    public const int AutoprovisioningLocationsFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _repeated_autoprovisioningLocations_codec
        = pb::FieldCodec.ForString(42);
    private readonly pbc::RepeatedField<string> autoprovisioningLocations_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// The list of Google Compute Engine [zones](https://cloud.google.com/compute/docs/zones#available)
    /// in which the NodePool's nodes can be created by NAP.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> AutoprovisioningLocations {
      get { return autoprovisioningLocations_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClusterAutoscaling);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClusterAutoscaling other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EnableNodeAutoprovisioning != other.EnableNodeAutoprovisioning) return false;
      if(!resourceLimits_.Equals(other.resourceLimits_)) return false;
      if (!object.Equals(AutoprovisioningNodePoolDefaults, other.AutoprovisioningNodePoolDefaults)) return false;
      if(!autoprovisioningLocations_.Equals(other.autoprovisioningLocations_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (EnableNodeAutoprovisioning != false) hash ^= EnableNodeAutoprovisioning.GetHashCode();
      hash ^= resourceLimits_.GetHashCode();
      if (autoprovisioningNodePoolDefaults_ != null) hash ^= AutoprovisioningNodePoolDefaults.GetHashCode();
      hash ^= autoprovisioningLocations_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (EnableNodeAutoprovisioning != false) {
        output.WriteRawTag(8);
        output.WriteBool(EnableNodeAutoprovisioning);
      }
      resourceLimits_.WriteTo(output, _repeated_resourceLimits_codec);
      if (autoprovisioningNodePoolDefaults_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(AutoprovisioningNodePoolDefaults);
      }
      autoprovisioningLocations_.WriteTo(output, _repeated_autoprovisioningLocations_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (EnableNodeAutoprovisioning != false) {
        size += 1 + 1;
      }
      size += resourceLimits_.CalculateSize(_repeated_resourceLimits_codec);
      if (autoprovisioningNodePoolDefaults_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AutoprovisioningNodePoolDefaults);
      }
      size += autoprovisioningLocations_.CalculateSize(_repeated_autoprovisioningLocations_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClusterAutoscaling other) {
      if (other == null) {
        return;
      }
      if (other.EnableNodeAutoprovisioning != false) {
        EnableNodeAutoprovisioning = other.EnableNodeAutoprovisioning;
      }
      resourceLimits_.Add(other.resourceLimits_);
      if (other.autoprovisioningNodePoolDefaults_ != null) {
        if (autoprovisioningNodePoolDefaults_ == null) {
          AutoprovisioningNodePoolDefaults = new global::Google.Cloud.Container.V1.AutoprovisioningNodePoolDefaults();
        }
        AutoprovisioningNodePoolDefaults.MergeFrom(other.AutoprovisioningNodePoolDefaults);
      }
      autoprovisioningLocations_.Add(other.autoprovisioningLocations_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            EnableNodeAutoprovisioning = input.ReadBool();
            break;
          }
          case 18: {
            resourceLimits_.AddEntriesFrom(input, _repeated_resourceLimits_codec);
            break;
          }
          case 34: {
            if (autoprovisioningNodePoolDefaults_ == null) {
              AutoprovisioningNodePoolDefaults = new global::Google.Cloud.Container.V1.AutoprovisioningNodePoolDefaults();
            }
            input.ReadMessage(AutoprovisioningNodePoolDefaults);
            break;
          }
          case 42: {
            autoprovisioningLocations_.AddEntriesFrom(input, _repeated_autoprovisioningLocations_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// AutoprovisioningNodePoolDefaults contains defaults for a node pool created
  /// by NAP.
  /// </summary>
  public sealed partial class AutoprovisioningNodePoolDefaults : pb::IMessage<AutoprovisioningNodePoolDefaults> {
    private static readonly pb::MessageParser<AutoprovisioningNodePoolDefaults> _parser = new pb::MessageParser<AutoprovisioningNodePoolDefaults>(() => new AutoprovisioningNodePoolDefaults());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AutoprovisioningNodePoolDefaults> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[58]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AutoprovisioningNodePoolDefaults() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AutoprovisioningNodePoolDefaults(AutoprovisioningNodePoolDefaults other) : this() {
      oauthScopes_ = other.oauthScopes_.Clone();
      serviceAccount_ = other.serviceAccount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AutoprovisioningNodePoolDefaults Clone() {
      return new AutoprovisioningNodePoolDefaults(this);
    }

    /// <summary>Field number for the "oauth_scopes" field.</summary>
    public const int OauthScopesFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_oauthScopes_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> oauthScopes_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Scopes that are used by NAP when creating node pools. If oauth_scopes are
    /// specified, service_account should be empty.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> OauthScopes {
      get { return oauthScopes_; }
    }

    /// <summary>Field number for the "service_account" field.</summary>
    public const int ServiceAccountFieldNumber = 2;
    private string serviceAccount_ = "";
    /// <summary>
    /// The Google Cloud Platform Service Account to be used by the node VMs. If
    /// service_account is specified, scopes should be empty.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServiceAccount {
      get { return serviceAccount_; }
      set {
        serviceAccount_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AutoprovisioningNodePoolDefaults);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AutoprovisioningNodePoolDefaults other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!oauthScopes_.Equals(other.oauthScopes_)) return false;
      if (ServiceAccount != other.ServiceAccount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= oauthScopes_.GetHashCode();
      if (ServiceAccount.Length != 0) hash ^= ServiceAccount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      oauthScopes_.WriteTo(output, _repeated_oauthScopes_codec);
      if (ServiceAccount.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ServiceAccount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += oauthScopes_.CalculateSize(_repeated_oauthScopes_codec);
      if (ServiceAccount.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServiceAccount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AutoprovisioningNodePoolDefaults other) {
      if (other == null) {
        return;
      }
      oauthScopes_.Add(other.oauthScopes_);
      if (other.ServiceAccount.Length != 0) {
        ServiceAccount = other.ServiceAccount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            oauthScopes_.AddEntriesFrom(input, _repeated_oauthScopes_codec);
            break;
          }
          case 18: {
            ServiceAccount = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Contains information about amount of some resource in the cluster.
  /// For memory, value should be in GB.
  /// </summary>
  public sealed partial class ResourceLimit : pb::IMessage<ResourceLimit> {
    private static readonly pb::MessageParser<ResourceLimit> _parser = new pb::MessageParser<ResourceLimit>(() => new ResourceLimit());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResourceLimit> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[59]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResourceLimit() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResourceLimit(ResourceLimit other) : this() {
      resourceType_ = other.resourceType_;
      minimum_ = other.minimum_;
      maximum_ = other.maximum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResourceLimit Clone() {
      return new ResourceLimit(this);
    }

    /// <summary>Field number for the "resource_type" field.</summary>
    public const int ResourceTypeFieldNumber = 1;
    private string resourceType_ = "";
    /// <summary>
    /// Resource name "cpu", "memory" or gpu-specific string.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ResourceType {
      get { return resourceType_; }
      set {
        resourceType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "minimum" field.</summary>
    public const int MinimumFieldNumber = 2;
    private long minimum_;
    /// <summary>
    /// Minimum amount of the resource in the cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Minimum {
      get { return minimum_; }
      set {
        minimum_ = value;
      }
    }

    /// <summary>Field number for the "maximum" field.</summary>
    public const int MaximumFieldNumber = 3;
    private long maximum_;
    /// <summary>
    /// Maximum amount of the resource in the cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Maximum {
      get { return maximum_; }
      set {
        maximum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResourceLimit);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResourceLimit other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ResourceType != other.ResourceType) return false;
      if (Minimum != other.Minimum) return false;
      if (Maximum != other.Maximum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ResourceType.Length != 0) hash ^= ResourceType.GetHashCode();
      if (Minimum != 0L) hash ^= Minimum.GetHashCode();
      if (Maximum != 0L) hash ^= Maximum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ResourceType.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ResourceType);
      }
      if (Minimum != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Minimum);
      }
      if (Maximum != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Maximum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ResourceType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ResourceType);
      }
      if (Minimum != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Minimum);
      }
      if (Maximum != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Maximum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResourceLimit other) {
      if (other == null) {
        return;
      }
      if (other.ResourceType.Length != 0) {
        ResourceType = other.ResourceType;
      }
      if (other.Minimum != 0L) {
        Minimum = other.Minimum;
      }
      if (other.Maximum != 0L) {
        Maximum = other.Maximum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ResourceType = input.ReadString();
            break;
          }
          case 16: {
            Minimum = input.ReadInt64();
            break;
          }
          case 24: {
            Maximum = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// NodePoolAutoscaling contains information required by cluster autoscaler to
  /// adjust the size of the node pool to the current cluster usage.
  /// </summary>
  public sealed partial class NodePoolAutoscaling : pb::IMessage<NodePoolAutoscaling> {
    private static readonly pb::MessageParser<NodePoolAutoscaling> _parser = new pb::MessageParser<NodePoolAutoscaling>(() => new NodePoolAutoscaling());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NodePoolAutoscaling> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[60]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NodePoolAutoscaling() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NodePoolAutoscaling(NodePoolAutoscaling other) : this() {
      enabled_ = other.enabled_;
      minNodeCount_ = other.minNodeCount_;
      maxNodeCount_ = other.maxNodeCount_;
      autoprovisioned_ = other.autoprovisioned_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NodePoolAutoscaling Clone() {
      return new NodePoolAutoscaling(this);
    }

    /// <summary>Field number for the "enabled" field.</summary>
    public const int EnabledFieldNumber = 1;
    private bool enabled_;
    /// <summary>
    /// Is autoscaling enabled for this node pool.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Enabled {
      get { return enabled_; }
      set {
        enabled_ = value;
      }
    }

    /// <summary>Field number for the "min_node_count" field.</summary>
    public const int MinNodeCountFieldNumber = 2;
    private int minNodeCount_;
    /// <summary>
    /// Minimum number of nodes in the NodePool. Must be >= 1 and &lt;=
    /// max_node_count.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MinNodeCount {
      get { return minNodeCount_; }
      set {
        minNodeCount_ = value;
      }
    }

    /// <summary>Field number for the "max_node_count" field.</summary>
    public const int MaxNodeCountFieldNumber = 3;
    private int maxNodeCount_;
    /// <summary>
    /// Maximum number of nodes in the NodePool. Must be >= min_node_count. There
    /// has to enough quota to scale up the cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxNodeCount {
      get { return maxNodeCount_; }
      set {
        maxNodeCount_ = value;
      }
    }

    /// <summary>Field number for the "autoprovisioned" field.</summary>
    public const int AutoprovisionedFieldNumber = 4;
    private bool autoprovisioned_;
    /// <summary>
    /// Can this node pool be deleted automatically.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Autoprovisioned {
      get { return autoprovisioned_; }
      set {
        autoprovisioned_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NodePoolAutoscaling);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NodePoolAutoscaling other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Enabled != other.Enabled) return false;
      if (MinNodeCount != other.MinNodeCount) return false;
      if (MaxNodeCount != other.MaxNodeCount) return false;
      if (Autoprovisioned != other.Autoprovisioned) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Enabled != false) hash ^= Enabled.GetHashCode();
      if (MinNodeCount != 0) hash ^= MinNodeCount.GetHashCode();
      if (MaxNodeCount != 0) hash ^= MaxNodeCount.GetHashCode();
      if (Autoprovisioned != false) hash ^= Autoprovisioned.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Enabled != false) {
        output.WriteRawTag(8);
        output.WriteBool(Enabled);
      }
      if (MinNodeCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MinNodeCount);
      }
      if (MaxNodeCount != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(MaxNodeCount);
      }
      if (Autoprovisioned != false) {
        output.WriteRawTag(32);
        output.WriteBool(Autoprovisioned);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Enabled != false) {
        size += 1 + 1;
      }
      if (MinNodeCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MinNodeCount);
      }
      if (MaxNodeCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxNodeCount);
      }
      if (Autoprovisioned != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NodePoolAutoscaling other) {
      if (other == null) {
        return;
      }
      if (other.Enabled != false) {
        Enabled = other.Enabled;
      }
      if (other.MinNodeCount != 0) {
        MinNodeCount = other.MinNodeCount;
      }
      if (other.MaxNodeCount != 0) {
        MaxNodeCount = other.MaxNodeCount;
      }
      if (other.Autoprovisioned != false) {
        Autoprovisioned = other.Autoprovisioned;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Enabled = input.ReadBool();
            break;
          }
          case 16: {
            MinNodeCount = input.ReadInt32();
            break;
          }
          case 24: {
            MaxNodeCount = input.ReadInt32();
            break;
          }
          case 32: {
            Autoprovisioned = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// SetLabelsRequest sets the Google Cloud Platform labels on a Google Container
  /// Engine cluster, which will in turn set them for Google Compute Engine
  /// resources used by that cluster
  /// </summary>
  public sealed partial class SetLabelsRequest : pb::IMessage<SetLabelsRequest> {
    private static readonly pb::MessageParser<SetLabelsRequest> _parser = new pb::MessageParser<SetLabelsRequest>(() => new SetLabelsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetLabelsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[61]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetLabelsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetLabelsRequest(SetLabelsRequest other) : this() {
      projectId_ = other.projectId_;
      zone_ = other.zone_;
      clusterId_ = other.clusterId_;
      resourceLabels_ = other.resourceLabels_.Clone();
      labelFingerprint_ = other.labelFingerprint_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetLabelsRequest Clone() {
      return new SetLabelsRequest(this);
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 1;
    private string projectId_ = "";
    /// <summary>
    /// Required. Deprecated. The Google Developers Console [project ID or project
    /// number](https://developers.google.com/console/help/new/#projectnumber).
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "zone" field.</summary>
    public const int ZoneFieldNumber = 2;
    private string zone_ = "";
    /// <summary>
    /// Required. Deprecated. The name of the Google Compute Engine
    /// [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster
    /// resides.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Zone {
      get { return zone_; }
      set {
        zone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cluster_id" field.</summary>
    public const int ClusterIdFieldNumber = 3;
    private string clusterId_ = "";
    /// <summary>
    /// Required. Deprecated. The name of the cluster.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterId {
      get { return clusterId_; }
      set {
        clusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "resource_labels" field.</summary>
    public const int ResourceLabelsFieldNumber = 4;
    private static readonly pbc::MapField<string, string>.Codec _map_resourceLabels_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 34);
    private readonly pbc::MapField<string, string> resourceLabels_ = new pbc::MapField<string, string>();
    /// <summary>
    /// Required. The labels to set for that cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> ResourceLabels {
      get { return resourceLabels_; }
    }

    /// <summary>Field number for the "label_fingerprint" field.</summary>
    public const int LabelFingerprintFieldNumber = 5;
    private string labelFingerprint_ = "";
    /// <summary>
    /// Required. The fingerprint of the previous set of labels for this resource,
    /// used to detect conflicts. The fingerprint is initially generated by
    /// Kubernetes Engine and changes after every request to modify or update
    /// labels. You must always provide an up-to-date fingerprint hash when
    /// updating or changing labels. Make a &lt;code>get()&lt;/code> request to the
    /// resource to get the latest fingerprint.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LabelFingerprint {
      get { return labelFingerprint_; }
      set {
        labelFingerprint_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 7;
    private string name_ = "";
    /// <summary>
    /// The name (project, location, cluster id) of the cluster to set labels.
    /// Specified in the format 'projects/*/locations/*/clusters/*'.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetLabelsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetLabelsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProjectId != other.ProjectId) return false;
      if (Zone != other.Zone) return false;
      if (ClusterId != other.ClusterId) return false;
      if (!ResourceLabels.Equals(other.ResourceLabels)) return false;
      if (LabelFingerprint != other.LabelFingerprint) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (Zone.Length != 0) hash ^= Zone.GetHashCode();
      if (ClusterId.Length != 0) hash ^= ClusterId.GetHashCode();
      hash ^= ResourceLabels.GetHashCode();
      if (LabelFingerprint.Length != 0) hash ^= LabelFingerprint.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (Zone.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Zone);
      }
      if (ClusterId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ClusterId);
      }
      resourceLabels_.WriteTo(output, _map_resourceLabels_codec);
      if (LabelFingerprint.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(LabelFingerprint);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (Zone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Zone);
      }
      if (ClusterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterId);
      }
      size += resourceLabels_.CalculateSize(_map_resourceLabels_codec);
      if (LabelFingerprint.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LabelFingerprint);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetLabelsRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.Zone.Length != 0) {
        Zone = other.Zone;
      }
      if (other.ClusterId.Length != 0) {
        ClusterId = other.ClusterId;
      }
      resourceLabels_.Add(other.resourceLabels_);
      if (other.LabelFingerprint.Length != 0) {
        LabelFingerprint = other.LabelFingerprint;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 18: {
            Zone = input.ReadString();
            break;
          }
          case 26: {
            ClusterId = input.ReadString();
            break;
          }
          case 34: {
            resourceLabels_.AddEntriesFrom(input, _map_resourceLabels_codec);
            break;
          }
          case 42: {
            LabelFingerprint = input.ReadString();
            break;
          }
          case 58: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// SetLegacyAbacRequest enables or disables the ABAC authorization mechanism for
  /// a cluster.
  /// </summary>
  public sealed partial class SetLegacyAbacRequest : pb::IMessage<SetLegacyAbacRequest> {
    private static readonly pb::MessageParser<SetLegacyAbacRequest> _parser = new pb::MessageParser<SetLegacyAbacRequest>(() => new SetLegacyAbacRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetLegacyAbacRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[62]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetLegacyAbacRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetLegacyAbacRequest(SetLegacyAbacRequest other) : this() {
      projectId_ = other.projectId_;
      zone_ = other.zone_;
      clusterId_ = other.clusterId_;
      enabled_ = other.enabled_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetLegacyAbacRequest Clone() {
      return new SetLegacyAbacRequest(this);
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 1;
    private string projectId_ = "";
    /// <summary>
    /// Required. Deprecated. The Google Developers Console [project ID or project
    /// number](https://support.google.com/cloud/answer/6158840).
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "zone" field.</summary>
    public const int ZoneFieldNumber = 2;
    private string zone_ = "";
    /// <summary>
    /// Required. Deprecated. The name of the Google Compute Engine
    /// [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster
    /// resides.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Zone {
      get { return zone_; }
      set {
        zone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cluster_id" field.</summary>
    public const int ClusterIdFieldNumber = 3;
    private string clusterId_ = "";
    /// <summary>
    /// Required. Deprecated. The name of the cluster to update.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterId {
      get { return clusterId_; }
      set {
        clusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "enabled" field.</summary>
    public const int EnabledFieldNumber = 4;
    private bool enabled_;
    /// <summary>
    /// Required. Whether ABAC authorization will be enabled in the cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Enabled {
      get { return enabled_; }
      set {
        enabled_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 6;
    private string name_ = "";
    /// <summary>
    /// The name (project, location, cluster id) of the cluster to set legacy abac.
    /// Specified in the format 'projects/*/locations/*/clusters/*'.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetLegacyAbacRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetLegacyAbacRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProjectId != other.ProjectId) return false;
      if (Zone != other.Zone) return false;
      if (ClusterId != other.ClusterId) return false;
      if (Enabled != other.Enabled) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (Zone.Length != 0) hash ^= Zone.GetHashCode();
      if (ClusterId.Length != 0) hash ^= ClusterId.GetHashCode();
      if (Enabled != false) hash ^= Enabled.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (Zone.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Zone);
      }
      if (ClusterId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ClusterId);
      }
      if (Enabled != false) {
        output.WriteRawTag(32);
        output.WriteBool(Enabled);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (Zone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Zone);
      }
      if (ClusterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterId);
      }
      if (Enabled != false) {
        size += 1 + 1;
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetLegacyAbacRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.Zone.Length != 0) {
        Zone = other.Zone;
      }
      if (other.ClusterId.Length != 0) {
        ClusterId = other.ClusterId;
      }
      if (other.Enabled != false) {
        Enabled = other.Enabled;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 18: {
            Zone = input.ReadString();
            break;
          }
          case 26: {
            ClusterId = input.ReadString();
            break;
          }
          case 32: {
            Enabled = input.ReadBool();
            break;
          }
          case 50: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// StartIPRotationRequest creates a new IP for the cluster and then performs
  /// a node upgrade on each node pool to point to the new IP.
  /// </summary>
  public sealed partial class StartIPRotationRequest : pb::IMessage<StartIPRotationRequest> {
    private static readonly pb::MessageParser<StartIPRotationRequest> _parser = new pb::MessageParser<StartIPRotationRequest>(() => new StartIPRotationRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StartIPRotationRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[63]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartIPRotationRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartIPRotationRequest(StartIPRotationRequest other) : this() {
      projectId_ = other.projectId_;
      zone_ = other.zone_;
      clusterId_ = other.clusterId_;
      name_ = other.name_;
      rotateCredentials_ = other.rotateCredentials_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartIPRotationRequest Clone() {
      return new StartIPRotationRequest(this);
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 1;
    private string projectId_ = "";
    /// <summary>
    /// Required. Deprecated. The Google Developers Console [project ID or project
    /// number](https://developers.google.com/console/help/new/#projectnumber).
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "zone" field.</summary>
    public const int ZoneFieldNumber = 2;
    private string zone_ = "";
    /// <summary>
    /// Required. Deprecated. The name of the Google Compute Engine
    /// [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster
    /// resides.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Zone {
      get { return zone_; }
      set {
        zone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cluster_id" field.</summary>
    public const int ClusterIdFieldNumber = 3;
    private string clusterId_ = "";
    /// <summary>
    /// Required. Deprecated. The name of the cluster.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterId {
      get { return clusterId_; }
      set {
        clusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 6;
    private string name_ = "";
    /// <summary>
    /// The name (project, location, cluster id) of the cluster to start IP
    /// rotation. Specified in the format 'projects/*/locations/*/clusters/*'.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "rotate_credentials" field.</summary>
    public const int RotateCredentialsFieldNumber = 7;
    private bool rotateCredentials_;
    /// <summary>
    /// Whether to rotate credentials during IP rotation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool RotateCredentials {
      get { return rotateCredentials_; }
      set {
        rotateCredentials_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StartIPRotationRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StartIPRotationRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProjectId != other.ProjectId) return false;
      if (Zone != other.Zone) return false;
      if (ClusterId != other.ClusterId) return false;
      if (Name != other.Name) return false;
      if (RotateCredentials != other.RotateCredentials) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (Zone.Length != 0) hash ^= Zone.GetHashCode();
      if (ClusterId.Length != 0) hash ^= ClusterId.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (RotateCredentials != false) hash ^= RotateCredentials.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (Zone.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Zone);
      }
      if (ClusterId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ClusterId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Name);
      }
      if (RotateCredentials != false) {
        output.WriteRawTag(56);
        output.WriteBool(RotateCredentials);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (Zone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Zone);
      }
      if (ClusterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterId);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (RotateCredentials != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StartIPRotationRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.Zone.Length != 0) {
        Zone = other.Zone;
      }
      if (other.ClusterId.Length != 0) {
        ClusterId = other.ClusterId;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.RotateCredentials != false) {
        RotateCredentials = other.RotateCredentials;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 18: {
            Zone = input.ReadString();
            break;
          }
          case 26: {
            ClusterId = input.ReadString();
            break;
          }
          case 50: {
            Name = input.ReadString();
            break;
          }
          case 56: {
            RotateCredentials = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// CompleteIPRotationRequest moves the cluster master back into single-IP mode.
  /// </summary>
  public sealed partial class CompleteIPRotationRequest : pb::IMessage<CompleteIPRotationRequest> {
    private static readonly pb::MessageParser<CompleteIPRotationRequest> _parser = new pb::MessageParser<CompleteIPRotationRequest>(() => new CompleteIPRotationRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CompleteIPRotationRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[64]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompleteIPRotationRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompleteIPRotationRequest(CompleteIPRotationRequest other) : this() {
      projectId_ = other.projectId_;
      zone_ = other.zone_;
      clusterId_ = other.clusterId_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CompleteIPRotationRequest Clone() {
      return new CompleteIPRotationRequest(this);
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 1;
    private string projectId_ = "";
    /// <summary>
    /// Required. Deprecated. The Google Developers Console [project ID or project
    /// number](https://developers.google.com/console/help/new/#projectnumber).
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "zone" field.</summary>
    public const int ZoneFieldNumber = 2;
    private string zone_ = "";
    /// <summary>
    /// Required. Deprecated. The name of the Google Compute Engine
    /// [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster
    /// resides.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Zone {
      get { return zone_; }
      set {
        zone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cluster_id" field.</summary>
    public const int ClusterIdFieldNumber = 3;
    private string clusterId_ = "";
    /// <summary>
    /// Required. Deprecated. The name of the cluster.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterId {
      get { return clusterId_; }
      set {
        clusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 7;
    private string name_ = "";
    /// <summary>
    /// The name (project, location, cluster id) of the cluster to complete IP
    /// rotation. Specified in the format 'projects/*/locations/*/clusters/*'.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CompleteIPRotationRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CompleteIPRotationRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProjectId != other.ProjectId) return false;
      if (Zone != other.Zone) return false;
      if (ClusterId != other.ClusterId) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (Zone.Length != 0) hash ^= Zone.GetHashCode();
      if (ClusterId.Length != 0) hash ^= ClusterId.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (Zone.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Zone);
      }
      if (ClusterId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ClusterId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (Zone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Zone);
      }
      if (ClusterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterId);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CompleteIPRotationRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.Zone.Length != 0) {
        Zone = other.Zone;
      }
      if (other.ClusterId.Length != 0) {
        ClusterId = other.ClusterId;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 18: {
            Zone = input.ReadString();
            break;
          }
          case 26: {
            ClusterId = input.ReadString();
            break;
          }
          case 58: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// AcceleratorConfig represents a Hardware Accelerator request.
  /// </summary>
  public sealed partial class AcceleratorConfig : pb::IMessage<AcceleratorConfig> {
    private static readonly pb::MessageParser<AcceleratorConfig> _parser = new pb::MessageParser<AcceleratorConfig>(() => new AcceleratorConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AcceleratorConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[65]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AcceleratorConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AcceleratorConfig(AcceleratorConfig other) : this() {
      acceleratorCount_ = other.acceleratorCount_;
      acceleratorType_ = other.acceleratorType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AcceleratorConfig Clone() {
      return new AcceleratorConfig(this);
    }

    /// <summary>Field number for the "accelerator_count" field.</summary>
    public const int AcceleratorCountFieldNumber = 1;
    private long acceleratorCount_;
    /// <summary>
    /// The number of the accelerator cards exposed to an instance.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long AcceleratorCount {
      get { return acceleratorCount_; }
      set {
        acceleratorCount_ = value;
      }
    }

    /// <summary>Field number for the "accelerator_type" field.</summary>
    public const int AcceleratorTypeFieldNumber = 2;
    private string acceleratorType_ = "";
    /// <summary>
    /// The accelerator type resource name. List of supported accelerators
    /// [here](https://cloud.google.com/compute/docs/gpus)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AcceleratorType {
      get { return acceleratorType_; }
      set {
        acceleratorType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AcceleratorConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AcceleratorConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AcceleratorCount != other.AcceleratorCount) return false;
      if (AcceleratorType != other.AcceleratorType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AcceleratorCount != 0L) hash ^= AcceleratorCount.GetHashCode();
      if (AcceleratorType.Length != 0) hash ^= AcceleratorType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AcceleratorCount != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(AcceleratorCount);
      }
      if (AcceleratorType.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AcceleratorType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AcceleratorCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(AcceleratorCount);
      }
      if (AcceleratorType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AcceleratorType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AcceleratorConfig other) {
      if (other == null) {
        return;
      }
      if (other.AcceleratorCount != 0L) {
        AcceleratorCount = other.AcceleratorCount;
      }
      if (other.AcceleratorType.Length != 0) {
        AcceleratorType = other.AcceleratorType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AcceleratorCount = input.ReadInt64();
            break;
          }
          case 18: {
            AcceleratorType = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// SetNetworkPolicyRequest enables/disables network policy for a cluster.
  /// </summary>
  public sealed partial class SetNetworkPolicyRequest : pb::IMessage<SetNetworkPolicyRequest> {
    private static readonly pb::MessageParser<SetNetworkPolicyRequest> _parser = new pb::MessageParser<SetNetworkPolicyRequest>(() => new SetNetworkPolicyRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetNetworkPolicyRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[66]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetNetworkPolicyRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetNetworkPolicyRequest(SetNetworkPolicyRequest other) : this() {
      projectId_ = other.projectId_;
      zone_ = other.zone_;
      clusterId_ = other.clusterId_;
      networkPolicy_ = other.networkPolicy_ != null ? other.networkPolicy_.Clone() : null;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetNetworkPolicyRequest Clone() {
      return new SetNetworkPolicyRequest(this);
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 1;
    private string projectId_ = "";
    /// <summary>
    /// Required. Deprecated. The Google Developers Console [project ID or project
    /// number](https://developers.google.com/console/help/new/#projectnumber).
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "zone" field.</summary>
    public const int ZoneFieldNumber = 2;
    private string zone_ = "";
    /// <summary>
    /// Required. Deprecated. The name of the Google Compute Engine
    /// [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster
    /// resides.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Zone {
      get { return zone_; }
      set {
        zone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cluster_id" field.</summary>
    public const int ClusterIdFieldNumber = 3;
    private string clusterId_ = "";
    /// <summary>
    /// Required. Deprecated. The name of the cluster.
    /// This field has been deprecated and replaced by the name field.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterId {
      get { return clusterId_; }
      set {
        clusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "network_policy" field.</summary>
    public const int NetworkPolicyFieldNumber = 4;
    private global::Google.Cloud.Container.V1.NetworkPolicy networkPolicy_;
    /// <summary>
    /// Required. Configuration options for the NetworkPolicy feature.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.NetworkPolicy NetworkPolicy {
      get { return networkPolicy_; }
      set {
        networkPolicy_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 6;
    private string name_ = "";
    /// <summary>
    /// The name (project, location, cluster id) of the cluster to set networking
    /// policy. Specified in the format 'projects/*/locations/*/clusters/*'.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetNetworkPolicyRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetNetworkPolicyRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProjectId != other.ProjectId) return false;
      if (Zone != other.Zone) return false;
      if (ClusterId != other.ClusterId) return false;
      if (!object.Equals(NetworkPolicy, other.NetworkPolicy)) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (Zone.Length != 0) hash ^= Zone.GetHashCode();
      if (ClusterId.Length != 0) hash ^= ClusterId.GetHashCode();
      if (networkPolicy_ != null) hash ^= NetworkPolicy.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (Zone.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Zone);
      }
      if (ClusterId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ClusterId);
      }
      if (networkPolicy_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(NetworkPolicy);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (Zone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Zone);
      }
      if (ClusterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterId);
      }
      if (networkPolicy_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NetworkPolicy);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetNetworkPolicyRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.Zone.Length != 0) {
        Zone = other.Zone;
      }
      if (other.ClusterId.Length != 0) {
        ClusterId = other.ClusterId;
      }
      if (other.networkPolicy_ != null) {
        if (networkPolicy_ == null) {
          NetworkPolicy = new global::Google.Cloud.Container.V1.NetworkPolicy();
        }
        NetworkPolicy.MergeFrom(other.NetworkPolicy);
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 18: {
            Zone = input.ReadString();
            break;
          }
          case 26: {
            ClusterId = input.ReadString();
            break;
          }
          case 34: {
            if (networkPolicy_ == null) {
              NetworkPolicy = new global::Google.Cloud.Container.V1.NetworkPolicy();
            }
            input.ReadMessage(NetworkPolicy);
            break;
          }
          case 50: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// SetMaintenancePolicyRequest sets the maintenance policy for a cluster.
  /// </summary>
  public sealed partial class SetMaintenancePolicyRequest : pb::IMessage<SetMaintenancePolicyRequest> {
    private static readonly pb::MessageParser<SetMaintenancePolicyRequest> _parser = new pb::MessageParser<SetMaintenancePolicyRequest>(() => new SetMaintenancePolicyRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetMaintenancePolicyRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[67]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetMaintenancePolicyRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetMaintenancePolicyRequest(SetMaintenancePolicyRequest other) : this() {
      projectId_ = other.projectId_;
      zone_ = other.zone_;
      clusterId_ = other.clusterId_;
      maintenancePolicy_ = other.maintenancePolicy_ != null ? other.maintenancePolicy_.Clone() : null;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetMaintenancePolicyRequest Clone() {
      return new SetMaintenancePolicyRequest(this);
    }

    /// <summary>Field number for the "project_id" field.</summary>
    public const int ProjectIdFieldNumber = 1;
    private string projectId_ = "";
    /// <summary>
    /// Required. The Google Developers Console [project ID or project
    /// number](https://support.google.com/cloud/answer/6158840).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProjectId {
      get { return projectId_; }
      set {
        projectId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "zone" field.</summary>
    public const int ZoneFieldNumber = 2;
    private string zone_ = "";
    /// <summary>
    /// Required. The name of the Google Compute Engine
    /// [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster
    /// resides.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Zone {
      get { return zone_; }
      set {
        zone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cluster_id" field.</summary>
    public const int ClusterIdFieldNumber = 3;
    private string clusterId_ = "";
    /// <summary>
    /// Required. The name of the cluster to update.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterId {
      get { return clusterId_; }
      set {
        clusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "maintenance_policy" field.</summary>
    public const int MaintenancePolicyFieldNumber = 4;
    private global::Google.Cloud.Container.V1.MaintenancePolicy maintenancePolicy_;
    /// <summary>
    /// Required. The maintenance policy to be set for the cluster. An empty field
    /// clears the existing maintenance policy.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.MaintenancePolicy MaintenancePolicy {
      get { return maintenancePolicy_; }
      set {
        maintenancePolicy_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 5;
    private string name_ = "";
    /// <summary>
    /// The name (project, location, cluster id) of the cluster to set maintenance
    /// policy.
    /// Specified in the format 'projects/*/locations/*/clusters/*'.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetMaintenancePolicyRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetMaintenancePolicyRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProjectId != other.ProjectId) return false;
      if (Zone != other.Zone) return false;
      if (ClusterId != other.ClusterId) return false;
      if (!object.Equals(MaintenancePolicy, other.MaintenancePolicy)) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProjectId.Length != 0) hash ^= ProjectId.GetHashCode();
      if (Zone.Length != 0) hash ^= Zone.GetHashCode();
      if (ClusterId.Length != 0) hash ^= ClusterId.GetHashCode();
      if (maintenancePolicy_ != null) hash ^= MaintenancePolicy.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProjectId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ProjectId);
      }
      if (Zone.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Zone);
      }
      if (ClusterId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ClusterId);
      }
      if (maintenancePolicy_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(MaintenancePolicy);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProjectId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProjectId);
      }
      if (Zone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Zone);
      }
      if (ClusterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterId);
      }
      if (maintenancePolicy_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MaintenancePolicy);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetMaintenancePolicyRequest other) {
      if (other == null) {
        return;
      }
      if (other.ProjectId.Length != 0) {
        ProjectId = other.ProjectId;
      }
      if (other.Zone.Length != 0) {
        Zone = other.Zone;
      }
      if (other.ClusterId.Length != 0) {
        ClusterId = other.ClusterId;
      }
      if (other.maintenancePolicy_ != null) {
        if (maintenancePolicy_ == null) {
          MaintenancePolicy = new global::Google.Cloud.Container.V1.MaintenancePolicy();
        }
        MaintenancePolicy.MergeFrom(other.MaintenancePolicy);
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ProjectId = input.ReadString();
            break;
          }
          case 18: {
            Zone = input.ReadString();
            break;
          }
          case 26: {
            ClusterId = input.ReadString();
            break;
          }
          case 34: {
            if (maintenancePolicy_ == null) {
              MaintenancePolicy = new global::Google.Cloud.Container.V1.MaintenancePolicy();
            }
            input.ReadMessage(MaintenancePolicy);
            break;
          }
          case 42: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// StatusCondition describes why a cluster or a node pool has a certain status
  /// (e.g., ERROR or DEGRADED).
  /// </summary>
  public sealed partial class StatusCondition : pb::IMessage<StatusCondition> {
    private static readonly pb::MessageParser<StatusCondition> _parser = new pb::MessageParser<StatusCondition>(() => new StatusCondition());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StatusCondition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[68]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StatusCondition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StatusCondition(StatusCondition other) : this() {
      code_ = other.code_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StatusCondition Clone() {
      return new StatusCondition(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private global::Google.Cloud.Container.V1.StatusCondition.Types.Code code_ = 0;
    /// <summary>
    /// Machine-friendly representation of the condition
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.StatusCondition.Types.Code Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 2;
    private string message_ = "";
    /// <summary>
    /// Human-friendly representation of the condition
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StatusCondition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StatusCondition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Code != 0) hash ^= Code.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Code != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Code);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Code != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Code);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StatusCondition other) {
      if (other == null) {
        return;
      }
      if (other.Code != 0) {
        Code = other.Code;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = (global::Google.Cloud.Container.V1.StatusCondition.Types.Code) input.ReadEnum();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the StatusCondition message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Code for each condition
      /// </summary>
      public enum Code {
        /// <summary>
        /// UNKNOWN indicates a generic condition.
        /// </summary>
        [pbr::OriginalName("UNKNOWN")] Unknown = 0,
        /// <summary>
        /// GCE_STOCKOUT indicates a Google Compute Engine stockout.
        /// </summary>
        [pbr::OriginalName("GCE_STOCKOUT")] GceStockout = 1,
        /// <summary>
        /// GKE_SERVICE_ACCOUNT_DELETED indicates that the user deleted their robot
        /// service account.
        /// </summary>
        [pbr::OriginalName("GKE_SERVICE_ACCOUNT_DELETED")] GkeServiceAccountDeleted = 2,
        /// <summary>
        /// Google Compute Engine quota was exceeded.
        /// </summary>
        [pbr::OriginalName("GCE_QUOTA_EXCEEDED")] GceQuotaExceeded = 3,
        /// <summary>
        /// Cluster state was manually changed by an SRE due to a system logic error.
        /// </summary>
        [pbr::OriginalName("SET_BY_OPERATOR")] SetByOperator = 4,
        /// <summary>
        /// Unable to perform an encrypt operation against the CloudKMS key used for
        /// etcd level encryption.
        /// More codes TBA
        /// </summary>
        [pbr::OriginalName("CLOUD_KMS_KEY_ERROR")] CloudKmsKeyError = 7,
      }

    }
    #endregion

  }

  /// <summary>
  /// NetworkConfig reports the relative names of network &amp; subnetwork.
  /// </summary>
  public sealed partial class NetworkConfig : pb::IMessage<NetworkConfig> {
    private static readonly pb::MessageParser<NetworkConfig> _parser = new pb::MessageParser<NetworkConfig>(() => new NetworkConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NetworkConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[69]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetworkConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetworkConfig(NetworkConfig other) : this() {
      network_ = other.network_;
      subnetwork_ = other.subnetwork_;
      enableIntraNodeVisibility_ = other.enableIntraNodeVisibility_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetworkConfig Clone() {
      return new NetworkConfig(this);
    }

    /// <summary>Field number for the "network" field.</summary>
    public const int NetworkFieldNumber = 1;
    private string network_ = "";
    /// <summary>
    /// Output only. The relative name of the Google Compute Engine
    /// [network][google.container.v1.NetworkConfig.network](https://cloud.google.com/compute/docs/networks-and-firewalls#networks) to which
    /// the cluster is connected.
    /// Example: projects/my-project/global/networks/my-network
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Network {
      get { return network_; }
      set {
        network_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "subnetwork" field.</summary>
    public const int SubnetworkFieldNumber = 2;
    private string subnetwork_ = "";
    /// <summary>
    /// Output only. The relative name of the Google Compute Engine
    /// [subnetwork](https://cloud.google.com/compute/docs/vpc) to which the cluster is connected.
    /// Example: projects/my-project/regions/us-central1/subnetworks/my-subnet
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Subnetwork {
      get { return subnetwork_; }
      set {
        subnetwork_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "enable_intra_node_visibility" field.</summary>
    public const int EnableIntraNodeVisibilityFieldNumber = 5;
    private bool enableIntraNodeVisibility_;
    /// <summary>
    /// Whether Intra-node visibility is enabled for this cluster.
    /// This makes same node pod to pod traffic visible for VPC network.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool EnableIntraNodeVisibility {
      get { return enableIntraNodeVisibility_; }
      set {
        enableIntraNodeVisibility_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NetworkConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NetworkConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Network != other.Network) return false;
      if (Subnetwork != other.Subnetwork) return false;
      if (EnableIntraNodeVisibility != other.EnableIntraNodeVisibility) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Network.Length != 0) hash ^= Network.GetHashCode();
      if (Subnetwork.Length != 0) hash ^= Subnetwork.GetHashCode();
      if (EnableIntraNodeVisibility != false) hash ^= EnableIntraNodeVisibility.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Network.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Network);
      }
      if (Subnetwork.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Subnetwork);
      }
      if (EnableIntraNodeVisibility != false) {
        output.WriteRawTag(40);
        output.WriteBool(EnableIntraNodeVisibility);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Network.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Network);
      }
      if (Subnetwork.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Subnetwork);
      }
      if (EnableIntraNodeVisibility != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NetworkConfig other) {
      if (other == null) {
        return;
      }
      if (other.Network.Length != 0) {
        Network = other.Network;
      }
      if (other.Subnetwork.Length != 0) {
        Subnetwork = other.Subnetwork;
      }
      if (other.EnableIntraNodeVisibility != false) {
        EnableIntraNodeVisibility = other.EnableIntraNodeVisibility;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Network = input.ReadString();
            break;
          }
          case 18: {
            Subnetwork = input.ReadString();
            break;
          }
          case 40: {
            EnableIntraNodeVisibility = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// IntraNodeVisibilityConfig contains the desired config of the intra-node
  /// visibility on this cluster.
  /// </summary>
  public sealed partial class IntraNodeVisibilityConfig : pb::IMessage<IntraNodeVisibilityConfig> {
    private static readonly pb::MessageParser<IntraNodeVisibilityConfig> _parser = new pb::MessageParser<IntraNodeVisibilityConfig>(() => new IntraNodeVisibilityConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IntraNodeVisibilityConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[70]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IntraNodeVisibilityConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IntraNodeVisibilityConfig(IntraNodeVisibilityConfig other) : this() {
      enabled_ = other.enabled_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IntraNodeVisibilityConfig Clone() {
      return new IntraNodeVisibilityConfig(this);
    }

    /// <summary>Field number for the "enabled" field.</summary>
    public const int EnabledFieldNumber = 1;
    private bool enabled_;
    /// <summary>
    /// Enables intra node visibility for this cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Enabled {
      get { return enabled_; }
      set {
        enabled_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IntraNodeVisibilityConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IntraNodeVisibilityConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Enabled != other.Enabled) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Enabled != false) hash ^= Enabled.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Enabled != false) {
        output.WriteRawTag(8);
        output.WriteBool(Enabled);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Enabled != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IntraNodeVisibilityConfig other) {
      if (other == null) {
        return;
      }
      if (other.Enabled != false) {
        Enabled = other.Enabled;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Enabled = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Constraints applied to pods.
  /// </summary>
  public sealed partial class MaxPodsConstraint : pb::IMessage<MaxPodsConstraint> {
    private static readonly pb::MessageParser<MaxPodsConstraint> _parser = new pb::MessageParser<MaxPodsConstraint>(() => new MaxPodsConstraint());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MaxPodsConstraint> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[71]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MaxPodsConstraint() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MaxPodsConstraint(MaxPodsConstraint other) : this() {
      maxPodsPerNode_ = other.maxPodsPerNode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MaxPodsConstraint Clone() {
      return new MaxPodsConstraint(this);
    }

    /// <summary>Field number for the "max_pods_per_node" field.</summary>
    public const int MaxPodsPerNodeFieldNumber = 1;
    private long maxPodsPerNode_;
    /// <summary>
    /// Constraint enforced on the max num of pods per node.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MaxPodsPerNode {
      get { return maxPodsPerNode_; }
      set {
        maxPodsPerNode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MaxPodsConstraint);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MaxPodsConstraint other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MaxPodsPerNode != other.MaxPodsPerNode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MaxPodsPerNode != 0L) hash ^= MaxPodsPerNode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MaxPodsPerNode != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(MaxPodsPerNode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MaxPodsPerNode != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MaxPodsPerNode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MaxPodsConstraint other) {
      if (other == null) {
        return;
      }
      if (other.MaxPodsPerNode != 0L) {
        MaxPodsPerNode = other.MaxPodsPerNode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MaxPodsPerNode = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Configuration of etcd encryption.
  /// </summary>
  public sealed partial class DatabaseEncryption : pb::IMessage<DatabaseEncryption> {
    private static readonly pb::MessageParser<DatabaseEncryption> _parser = new pb::MessageParser<DatabaseEncryption>(() => new DatabaseEncryption());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatabaseEncryption> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[72]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatabaseEncryption() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatabaseEncryption(DatabaseEncryption other) : this() {
      state_ = other.state_;
      keyName_ = other.keyName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatabaseEncryption Clone() {
      return new DatabaseEncryption(this);
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 2;
    private global::Google.Cloud.Container.V1.DatabaseEncryption.Types.State state_ = 0;
    /// <summary>
    /// Denotes the state of etcd encryption.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.DatabaseEncryption.Types.State State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "key_name" field.</summary>
    public const int KeyNameFieldNumber = 1;
    private string keyName_ = "";
    /// <summary>
    /// Name of CloudKMS key to use for the encryption of secrets in etcd.
    /// Ex. projects/my-project/locations/global/keyRings/my-ring/cryptoKeys/my-key
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string KeyName {
      get { return keyName_; }
      set {
        keyName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatabaseEncryption);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatabaseEncryption other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (State != other.State) return false;
      if (KeyName != other.KeyName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (State != 0) hash ^= State.GetHashCode();
      if (KeyName.Length != 0) hash ^= KeyName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (KeyName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(KeyName);
      }
      if (State != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) State);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (State != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (KeyName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(KeyName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatabaseEncryption other) {
      if (other == null) {
        return;
      }
      if (other.State != 0) {
        State = other.State;
      }
      if (other.KeyName.Length != 0) {
        KeyName = other.KeyName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            KeyName = input.ReadString();
            break;
          }
          case 16: {
            State = (global::Google.Cloud.Container.V1.DatabaseEncryption.Types.State) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the DatabaseEncryption message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// State of etcd encryption.
      /// </summary>
      public enum State {
        /// <summary>
        /// Should never be set
        /// </summary>
        [pbr::OriginalName("UNKNOWN")] Unknown = 0,
        /// <summary>
        /// Secrets in etcd are encrypted.
        /// </summary>
        [pbr::OriginalName("ENCRYPTED")] Encrypted = 1,
        /// <summary>
        /// Secrets in etcd are stored in plain text (at etcd level) - this is
        /// unrelated to GCE level full disk encryption.
        /// </summary>
        [pbr::OriginalName("DECRYPTED")] Decrypted = 2,
      }

    }
    #endregion

  }

  /// <summary>
  /// ListUsableSubnetworksRequest requests the list of usable subnetworks
  /// available to a user for creating clusters.
  /// </summary>
  public sealed partial class ListUsableSubnetworksRequest : pb::IMessage<ListUsableSubnetworksRequest> {
    private static readonly pb::MessageParser<ListUsableSubnetworksRequest> _parser = new pb::MessageParser<ListUsableSubnetworksRequest>(() => new ListUsableSubnetworksRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListUsableSubnetworksRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[73]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListUsableSubnetworksRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListUsableSubnetworksRequest(ListUsableSubnetworksRequest other) : this() {
      parent_ = other.parent_;
      filter_ = other.filter_;
      pageSize_ = other.pageSize_;
      pageToken_ = other.pageToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListUsableSubnetworksRequest Clone() {
      return new ListUsableSubnetworksRequest(this);
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 1;
    private string parent_ = "";
    /// <summary>
    /// The parent project where subnetworks are usable.
    /// Specified in the format 'projects/*'.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 2;
    private string filter_ = "";
    /// <summary>
    /// Filtering currently only supports equality on the networkProjectId and must
    /// be in the form: "networkProjectId=[PROJECTID]", where `networkProjectId`
    /// is the project which owns the listed subnetworks. This defaults to the
    /// parent project ID.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Filter {
      get { return filter_; }
      set {
        filter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "page_size" field.</summary>
    public const int PageSizeFieldNumber = 3;
    private int pageSize_;
    /// <summary>
    /// The max number of results per page that should be returned. If the number
    /// of available results is larger than `page_size`, a `next_page_token` is
    /// returned which can be used to get the next page of results in subsequent
    /// requests. Acceptable values are 0 to 500, inclusive. (Default: 500)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PageSize {
      get { return pageSize_; }
      set {
        pageSize_ = value;
      }
    }

    /// <summary>Field number for the "page_token" field.</summary>
    public const int PageTokenFieldNumber = 4;
    private string pageToken_ = "";
    /// <summary>
    /// Specifies a page token to use. Set this to the nextPageToken returned by
    /// previous list requests to get the next page of results.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PageToken {
      get { return pageToken_; }
      set {
        pageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListUsableSubnetworksRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListUsableSubnetworksRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Parent != other.Parent) return false;
      if (Filter != other.Filter) return false;
      if (PageSize != other.PageSize) return false;
      if (PageToken != other.PageToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (Filter.Length != 0) hash ^= Filter.GetHashCode();
      if (PageSize != 0) hash ^= PageSize.GetHashCode();
      if (PageToken.Length != 0) hash ^= PageToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (Filter.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Filter);
      }
      if (PageSize != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PageSize);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (Filter.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Filter);
      }
      if (PageSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PageSize);
      }
      if (PageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PageToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListUsableSubnetworksRequest other) {
      if (other == null) {
        return;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      if (other.Filter.Length != 0) {
        Filter = other.Filter;
      }
      if (other.PageSize != 0) {
        PageSize = other.PageSize;
      }
      if (other.PageToken.Length != 0) {
        PageToken = other.PageToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            Filter = input.ReadString();
            break;
          }
          case 24: {
            PageSize = input.ReadInt32();
            break;
          }
          case 34: {
            PageToken = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// ListUsableSubnetworksResponse is the response of
  /// ListUsableSubnetworksRequest.
  /// </summary>
  public sealed partial class ListUsableSubnetworksResponse : pb::IMessage<ListUsableSubnetworksResponse> {
    private static readonly pb::MessageParser<ListUsableSubnetworksResponse> _parser = new pb::MessageParser<ListUsableSubnetworksResponse>(() => new ListUsableSubnetworksResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListUsableSubnetworksResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[74]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListUsableSubnetworksResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListUsableSubnetworksResponse(ListUsableSubnetworksResponse other) : this() {
      subnetworks_ = other.subnetworks_.Clone();
      nextPageToken_ = other.nextPageToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListUsableSubnetworksResponse Clone() {
      return new ListUsableSubnetworksResponse(this);
    }

    /// <summary>Field number for the "subnetworks" field.</summary>
    public const int SubnetworksFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.Container.V1.UsableSubnetwork> _repeated_subnetworks_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.Container.V1.UsableSubnetwork.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Container.V1.UsableSubnetwork> subnetworks_ = new pbc::RepeatedField<global::Google.Cloud.Container.V1.UsableSubnetwork>();
    /// <summary>
    /// A list of usable subnetworks in the specified network project.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Container.V1.UsableSubnetwork> Subnetworks {
      get { return subnetworks_; }
    }

    /// <summary>Field number for the "next_page_token" field.</summary>
    public const int NextPageTokenFieldNumber = 2;
    private string nextPageToken_ = "";
    /// <summary>
    /// This token allows you to get the next page of results for list requests.
    /// If the number of results is larger than `page_size`, use the
    /// `next_page_token` as a value for the query parameter `page_token` in the
    /// next request. The value will become empty when there are no more pages.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NextPageToken {
      get { return nextPageToken_; }
      set {
        nextPageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListUsableSubnetworksResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListUsableSubnetworksResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!subnetworks_.Equals(other.subnetworks_)) return false;
      if (NextPageToken != other.NextPageToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= subnetworks_.GetHashCode();
      if (NextPageToken.Length != 0) hash ^= NextPageToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      subnetworks_.WriteTo(output, _repeated_subnetworks_codec);
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextPageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += subnetworks_.CalculateSize(_repeated_subnetworks_codec);
      if (NextPageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextPageToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListUsableSubnetworksResponse other) {
      if (other == null) {
        return;
      }
      subnetworks_.Add(other.subnetworks_);
      if (other.NextPageToken.Length != 0) {
        NextPageToken = other.NextPageToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            subnetworks_.AddEntriesFrom(input, _repeated_subnetworks_codec);
            break;
          }
          case 18: {
            NextPageToken = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Secondary IP range of a usable subnetwork.
  /// </summary>
  public sealed partial class UsableSubnetworkSecondaryRange : pb::IMessage<UsableSubnetworkSecondaryRange> {
    private static readonly pb::MessageParser<UsableSubnetworkSecondaryRange> _parser = new pb::MessageParser<UsableSubnetworkSecondaryRange>(() => new UsableSubnetworkSecondaryRange());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UsableSubnetworkSecondaryRange> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[75]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UsableSubnetworkSecondaryRange() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UsableSubnetworkSecondaryRange(UsableSubnetworkSecondaryRange other) : this() {
      rangeName_ = other.rangeName_;
      ipCidrRange_ = other.ipCidrRange_;
      status_ = other.status_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UsableSubnetworkSecondaryRange Clone() {
      return new UsableSubnetworkSecondaryRange(this);
    }

    /// <summary>Field number for the "range_name" field.</summary>
    public const int RangeNameFieldNumber = 1;
    private string rangeName_ = "";
    /// <summary>
    /// The name associated with this subnetwork secondary range, used when adding
    /// an alias IP range to a VM instance.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RangeName {
      get { return rangeName_; }
      set {
        rangeName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ip_cidr_range" field.</summary>
    public const int IpCidrRangeFieldNumber = 2;
    private string ipCidrRange_ = "";
    /// <summary>
    /// The range of IP addresses belonging to this subnetwork secondary range.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IpCidrRange {
      get { return ipCidrRange_; }
      set {
        ipCidrRange_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 3;
    private global::Google.Cloud.Container.V1.UsableSubnetworkSecondaryRange.Types.Status status_ = 0;
    /// <summary>
    /// This field is to determine the status of the secondary range programmably.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.UsableSubnetworkSecondaryRange.Types.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UsableSubnetworkSecondaryRange);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UsableSubnetworkSecondaryRange other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RangeName != other.RangeName) return false;
      if (IpCidrRange != other.IpCidrRange) return false;
      if (Status != other.Status) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RangeName.Length != 0) hash ^= RangeName.GetHashCode();
      if (IpCidrRange.Length != 0) hash ^= IpCidrRange.GetHashCode();
      if (Status != 0) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RangeName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RangeName);
      }
      if (IpCidrRange.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(IpCidrRange);
      }
      if (Status != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RangeName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RangeName);
      }
      if (IpCidrRange.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IpCidrRange);
      }
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UsableSubnetworkSecondaryRange other) {
      if (other == null) {
        return;
      }
      if (other.RangeName.Length != 0) {
        RangeName = other.RangeName;
      }
      if (other.IpCidrRange.Length != 0) {
        IpCidrRange = other.IpCidrRange;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RangeName = input.ReadString();
            break;
          }
          case 18: {
            IpCidrRange = input.ReadString();
            break;
          }
          case 24: {
            Status = (global::Google.Cloud.Container.V1.UsableSubnetworkSecondaryRange.Types.Status) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the UsableSubnetworkSecondaryRange message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Status shows the current usage of a secondary IP range.
      /// </summary>
      public enum Status {
        /// <summary>
        /// UNKNOWN is the zero value of the Status enum. It's not a valid status.
        /// </summary>
        [pbr::OriginalName("UNKNOWN")] Unknown = 0,
        /// <summary>
        /// UNUSED denotes that this range is unclaimed by any cluster.
        /// </summary>
        [pbr::OriginalName("UNUSED")] Unused = 1,
        /// <summary>
        /// IN_USE_SERVICE denotes that this range is claimed by a cluster for
        /// services. It cannot be used for other clusters.
        /// </summary>
        [pbr::OriginalName("IN_USE_SERVICE")] InUseService = 2,
        /// <summary>
        /// IN_USE_SHAREABLE_POD denotes this range was created by the network admin
        /// and is currently claimed by a cluster for pods. It can only be used by
        /// other clusters as a pod range.
        /// </summary>
        [pbr::OriginalName("IN_USE_SHAREABLE_POD")] InUseShareablePod = 3,
        /// <summary>
        /// IN_USE_MANAGED_POD denotes this range was created by GKE and is claimed
        /// for pods. It cannot be used for other clusters.
        /// </summary>
        [pbr::OriginalName("IN_USE_MANAGED_POD")] InUseManagedPod = 4,
      }

    }
    #endregion

  }

  /// <summary>
  /// UsableSubnetwork resource returns the subnetwork name, its associated network
  /// and the primary CIDR range.
  /// </summary>
  public sealed partial class UsableSubnetwork : pb::IMessage<UsableSubnetwork> {
    private static readonly pb::MessageParser<UsableSubnetwork> _parser = new pb::MessageParser<UsableSubnetwork>(() => new UsableSubnetwork());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UsableSubnetwork> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[76]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UsableSubnetwork() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UsableSubnetwork(UsableSubnetwork other) : this() {
      subnetwork_ = other.subnetwork_;
      network_ = other.network_;
      ipCidrRange_ = other.ipCidrRange_;
      secondaryIpRanges_ = other.secondaryIpRanges_.Clone();
      statusMessage_ = other.statusMessage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UsableSubnetwork Clone() {
      return new UsableSubnetwork(this);
    }

    /// <summary>Field number for the "subnetwork" field.</summary>
    public const int SubnetworkFieldNumber = 1;
    private string subnetwork_ = "";
    /// <summary>
    /// Subnetwork Name.
    /// Example: projects/my-project/regions/us-central1/subnetworks/my-subnet
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Subnetwork {
      get { return subnetwork_; }
      set {
        subnetwork_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "network" field.</summary>
    public const int NetworkFieldNumber = 2;
    private string network_ = "";
    /// <summary>
    /// Network Name.
    /// Example: projects/my-project/global/networks/my-network
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Network {
      get { return network_; }
      set {
        network_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ip_cidr_range" field.</summary>
    public const int IpCidrRangeFieldNumber = 3;
    private string ipCidrRange_ = "";
    /// <summary>
    /// The range of internal addresses that are owned by this subnetwork.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IpCidrRange {
      get { return ipCidrRange_; }
      set {
        ipCidrRange_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "secondary_ip_ranges" field.</summary>
    public const int SecondaryIpRangesFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Google.Cloud.Container.V1.UsableSubnetworkSecondaryRange> _repeated_secondaryIpRanges_codec
        = pb::FieldCodec.ForMessage(34, global::Google.Cloud.Container.V1.UsableSubnetworkSecondaryRange.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Container.V1.UsableSubnetworkSecondaryRange> secondaryIpRanges_ = new pbc::RepeatedField<global::Google.Cloud.Container.V1.UsableSubnetworkSecondaryRange>();
    /// <summary>
    /// Secondary IP ranges.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Container.V1.UsableSubnetworkSecondaryRange> SecondaryIpRanges {
      get { return secondaryIpRanges_; }
    }

    /// <summary>Field number for the "status_message" field.</summary>
    public const int StatusMessageFieldNumber = 5;
    private string statusMessage_ = "";
    /// <summary>
    /// A human readable status message representing the reasons for cases where
    /// the caller cannot use the secondary ranges under the subnet. For example if
    /// the secondary_ip_ranges is empty due to a permission issue, an insufficient
    /// permission message will be given by status_message.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StatusMessage {
      get { return statusMessage_; }
      set {
        statusMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UsableSubnetwork);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UsableSubnetwork other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Subnetwork != other.Subnetwork) return false;
      if (Network != other.Network) return false;
      if (IpCidrRange != other.IpCidrRange) return false;
      if(!secondaryIpRanges_.Equals(other.secondaryIpRanges_)) return false;
      if (StatusMessage != other.StatusMessage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Subnetwork.Length != 0) hash ^= Subnetwork.GetHashCode();
      if (Network.Length != 0) hash ^= Network.GetHashCode();
      if (IpCidrRange.Length != 0) hash ^= IpCidrRange.GetHashCode();
      hash ^= secondaryIpRanges_.GetHashCode();
      if (StatusMessage.Length != 0) hash ^= StatusMessage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Subnetwork.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Subnetwork);
      }
      if (Network.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Network);
      }
      if (IpCidrRange.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(IpCidrRange);
      }
      secondaryIpRanges_.WriteTo(output, _repeated_secondaryIpRanges_codec);
      if (StatusMessage.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(StatusMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Subnetwork.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Subnetwork);
      }
      if (Network.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Network);
      }
      if (IpCidrRange.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IpCidrRange);
      }
      size += secondaryIpRanges_.CalculateSize(_repeated_secondaryIpRanges_codec);
      if (StatusMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StatusMessage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UsableSubnetwork other) {
      if (other == null) {
        return;
      }
      if (other.Subnetwork.Length != 0) {
        Subnetwork = other.Subnetwork;
      }
      if (other.Network.Length != 0) {
        Network = other.Network;
      }
      if (other.IpCidrRange.Length != 0) {
        IpCidrRange = other.IpCidrRange;
      }
      secondaryIpRanges_.Add(other.secondaryIpRanges_);
      if (other.StatusMessage.Length != 0) {
        StatusMessage = other.StatusMessage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Subnetwork = input.ReadString();
            break;
          }
          case 18: {
            Network = input.ReadString();
            break;
          }
          case 26: {
            IpCidrRange = input.ReadString();
            break;
          }
          case 34: {
            secondaryIpRanges_.AddEntriesFrom(input, _repeated_secondaryIpRanges_codec);
            break;
          }
          case 42: {
            StatusMessage = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Configuration for exporting cluster resource usages.
  /// </summary>
  public sealed partial class ResourceUsageExportConfig : pb::IMessage<ResourceUsageExportConfig> {
    private static readonly pb::MessageParser<ResourceUsageExportConfig> _parser = new pb::MessageParser<ResourceUsageExportConfig>(() => new ResourceUsageExportConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResourceUsageExportConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[77]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResourceUsageExportConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResourceUsageExportConfig(ResourceUsageExportConfig other) : this() {
      bigqueryDestination_ = other.bigqueryDestination_ != null ? other.bigqueryDestination_.Clone() : null;
      enableNetworkEgressMetering_ = other.enableNetworkEgressMetering_;
      consumptionMeteringConfig_ = other.consumptionMeteringConfig_ != null ? other.consumptionMeteringConfig_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResourceUsageExportConfig Clone() {
      return new ResourceUsageExportConfig(this);
    }

    /// <summary>Field number for the "bigquery_destination" field.</summary>
    public const int BigqueryDestinationFieldNumber = 1;
    private global::Google.Cloud.Container.V1.ResourceUsageExportConfig.Types.BigQueryDestination bigqueryDestination_;
    /// <summary>
    /// Configuration to use BigQuery as usage export destination.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.ResourceUsageExportConfig.Types.BigQueryDestination BigqueryDestination {
      get { return bigqueryDestination_; }
      set {
        bigqueryDestination_ = value;
      }
    }

    /// <summary>Field number for the "enable_network_egress_metering" field.</summary>
    public const int EnableNetworkEgressMeteringFieldNumber = 2;
    private bool enableNetworkEgressMetering_;
    /// <summary>
    /// Whether to enable network egress metering for this cluster. If enabled, a
    /// daemonset will be created in the cluster to meter network egress traffic.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool EnableNetworkEgressMetering {
      get { return enableNetworkEgressMetering_; }
      set {
        enableNetworkEgressMetering_ = value;
      }
    }

    /// <summary>Field number for the "consumption_metering_config" field.</summary>
    public const int ConsumptionMeteringConfigFieldNumber = 3;
    private global::Google.Cloud.Container.V1.ResourceUsageExportConfig.Types.ConsumptionMeteringConfig consumptionMeteringConfig_;
    /// <summary>
    /// Configuration to enable resource consumption metering.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Container.V1.ResourceUsageExportConfig.Types.ConsumptionMeteringConfig ConsumptionMeteringConfig {
      get { return consumptionMeteringConfig_; }
      set {
        consumptionMeteringConfig_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResourceUsageExportConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResourceUsageExportConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(BigqueryDestination, other.BigqueryDestination)) return false;
      if (EnableNetworkEgressMetering != other.EnableNetworkEgressMetering) return false;
      if (!object.Equals(ConsumptionMeteringConfig, other.ConsumptionMeteringConfig)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (bigqueryDestination_ != null) hash ^= BigqueryDestination.GetHashCode();
      if (EnableNetworkEgressMetering != false) hash ^= EnableNetworkEgressMetering.GetHashCode();
      if (consumptionMeteringConfig_ != null) hash ^= ConsumptionMeteringConfig.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (bigqueryDestination_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(BigqueryDestination);
      }
      if (EnableNetworkEgressMetering != false) {
        output.WriteRawTag(16);
        output.WriteBool(EnableNetworkEgressMetering);
      }
      if (consumptionMeteringConfig_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ConsumptionMeteringConfig);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (bigqueryDestination_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BigqueryDestination);
      }
      if (EnableNetworkEgressMetering != false) {
        size += 1 + 1;
      }
      if (consumptionMeteringConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ConsumptionMeteringConfig);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResourceUsageExportConfig other) {
      if (other == null) {
        return;
      }
      if (other.bigqueryDestination_ != null) {
        if (bigqueryDestination_ == null) {
          BigqueryDestination = new global::Google.Cloud.Container.V1.ResourceUsageExportConfig.Types.BigQueryDestination();
        }
        BigqueryDestination.MergeFrom(other.BigqueryDestination);
      }
      if (other.EnableNetworkEgressMetering != false) {
        EnableNetworkEgressMetering = other.EnableNetworkEgressMetering;
      }
      if (other.consumptionMeteringConfig_ != null) {
        if (consumptionMeteringConfig_ == null) {
          ConsumptionMeteringConfig = new global::Google.Cloud.Container.V1.ResourceUsageExportConfig.Types.ConsumptionMeteringConfig();
        }
        ConsumptionMeteringConfig.MergeFrom(other.ConsumptionMeteringConfig);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (bigqueryDestination_ == null) {
              BigqueryDestination = new global::Google.Cloud.Container.V1.ResourceUsageExportConfig.Types.BigQueryDestination();
            }
            input.ReadMessage(BigqueryDestination);
            break;
          }
          case 16: {
            EnableNetworkEgressMetering = input.ReadBool();
            break;
          }
          case 26: {
            if (consumptionMeteringConfig_ == null) {
              ConsumptionMeteringConfig = new global::Google.Cloud.Container.V1.ResourceUsageExportConfig.Types.ConsumptionMeteringConfig();
            }
            input.ReadMessage(ConsumptionMeteringConfig);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the ResourceUsageExportConfig message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Parameters for using BigQuery as the destination of resource usage export.
      /// </summary>
      public sealed partial class BigQueryDestination : pb::IMessage<BigQueryDestination> {
        private static readonly pb::MessageParser<BigQueryDestination> _parser = new pb::MessageParser<BigQueryDestination>(() => new BigQueryDestination());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<BigQueryDestination> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Container.V1.ResourceUsageExportConfig.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public BigQueryDestination() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public BigQueryDestination(BigQueryDestination other) : this() {
          datasetId_ = other.datasetId_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public BigQueryDestination Clone() {
          return new BigQueryDestination(this);
        }

        /// <summary>Field number for the "dataset_id" field.</summary>
        public const int DatasetIdFieldNumber = 1;
        private string datasetId_ = "";
        /// <summary>
        /// The ID of a BigQuery Dataset.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string DatasetId {
          get { return datasetId_; }
          set {
            datasetId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as BigQueryDestination);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(BigQueryDestination other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (DatasetId != other.DatasetId) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (DatasetId.Length != 0) hash ^= DatasetId.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (DatasetId.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(DatasetId);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (DatasetId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(DatasetId);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(BigQueryDestination other) {
          if (other == null) {
            return;
          }
          if (other.DatasetId.Length != 0) {
            DatasetId = other.DatasetId;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                DatasetId = input.ReadString();
                break;
              }
            }
          }
        }

      }

      /// <summary>
      /// Parameters for controlling consumption metering.
      /// </summary>
      public sealed partial class ConsumptionMeteringConfig : pb::IMessage<ConsumptionMeteringConfig> {
        private static readonly pb::MessageParser<ConsumptionMeteringConfig> _parser = new pb::MessageParser<ConsumptionMeteringConfig>(() => new ConsumptionMeteringConfig());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ConsumptionMeteringConfig> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Cloud.Container.V1.ResourceUsageExportConfig.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ConsumptionMeteringConfig() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ConsumptionMeteringConfig(ConsumptionMeteringConfig other) : this() {
          enabled_ = other.enabled_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ConsumptionMeteringConfig Clone() {
          return new ConsumptionMeteringConfig(this);
        }

        /// <summary>Field number for the "enabled" field.</summary>
        public const int EnabledFieldNumber = 1;
        private bool enabled_;
        /// <summary>
        /// Whether to enable consumption metering for this cluster. If enabled, a
        /// second BigQuery table will be created to hold resource consumption
        /// records.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Enabled {
          get { return enabled_; }
          set {
            enabled_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ConsumptionMeteringConfig);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ConsumptionMeteringConfig other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Enabled != other.Enabled) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Enabled != false) hash ^= Enabled.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Enabled != false) {
            output.WriteRawTag(8);
            output.WriteBool(Enabled);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Enabled != false) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ConsumptionMeteringConfig other) {
          if (other == null) {
            return;
          }
          if (other.Enabled != false) {
            Enabled = other.Enabled;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Enabled = input.ReadBool();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  /// <summary>
  /// VerticalPodAutoscaling contains global, per-cluster information
  /// required by Vertical Pod Autoscaler to automatically adjust
  /// the resources of pods controlled by it.
  /// </summary>
  public sealed partial class VerticalPodAutoscaling : pb::IMessage<VerticalPodAutoscaling> {
    private static readonly pb::MessageParser<VerticalPodAutoscaling> _parser = new pb::MessageParser<VerticalPodAutoscaling>(() => new VerticalPodAutoscaling());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VerticalPodAutoscaling> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Container.V1.ClusterServiceReflection.Descriptor.MessageTypes[78]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerticalPodAutoscaling() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerticalPodAutoscaling(VerticalPodAutoscaling other) : this() {
      enabled_ = other.enabled_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerticalPodAutoscaling Clone() {
      return new VerticalPodAutoscaling(this);
    }

    /// <summary>Field number for the "enabled" field.</summary>
    public const int EnabledFieldNumber = 1;
    private bool enabled_;
    /// <summary>
    /// Enables vertical pod autoscaling.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Enabled {
      get { return enabled_; }
      set {
        enabled_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VerticalPodAutoscaling);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VerticalPodAutoscaling other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Enabled != other.Enabled) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Enabled != false) hash ^= Enabled.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Enabled != false) {
        output.WriteRawTag(8);
        output.WriteBool(Enabled);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Enabled != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VerticalPodAutoscaling other) {
      if (other == null) {
        return;
      }
      if (other.Enabled != false) {
        Enabled = other.Enabled;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Enabled = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
