// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/identity/accesscontextmanager/v1/service_perimeter.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Identity.AccessContextManager.V1 {

  /// <summary>Holder for reflection information generated from google/identity/accesscontextmanager/v1/service_perimeter.proto</summary>
  public static partial class ServicePerimeterReflection {

    #region Descriptor
    /// <summary>File descriptor for google/identity/accesscontextmanager/v1/service_perimeter.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ServicePerimeterReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cj9nb29nbGUvaWRlbnRpdHkvYWNjZXNzY29udGV4dG1hbmFnZXIvdjEvc2Vy",
            "dmljZV9wZXJpbWV0ZXIucHJvdG8SJ2dvb2dsZS5pZGVudGl0eS5hY2Nlc3Nj",
            "b250ZXh0bWFuYWdlci52MRofZ29vZ2xlL3Byb3RvYnVmL3RpbWVzdGFtcC5w",
            "cm90bxocZ29vZ2xlL2FwaS9hbm5vdGF0aW9ucy5wcm90byKSBAoQU2Vydmlj",
            "ZVBlcmltZXRlchIMCgRuYW1lGAEgASgJEg0KBXRpdGxlGAIgASgJEhMKC2Rl",
            "c2NyaXB0aW9uGAMgASgJEi8KC2NyZWF0ZV90aW1lGAQgASgLMhouZ29vZ2xl",
            "LnByb3RvYnVmLlRpbWVzdGFtcBIvCgt1cGRhdGVfdGltZRgFIAEoCzIaLmdv",
            "b2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASXwoOcGVyaW1ldGVyX3R5cGUYBiAB",
            "KA4yRy5nb29nbGUuaWRlbnRpdHkuYWNjZXNzY29udGV4dG1hbmFnZXIudjEu",
            "U2VydmljZVBlcmltZXRlci5QZXJpbWV0ZXJUeXBlEk8KBnN0YXR1cxgHIAEo",
            "CzI/Lmdvb2dsZS5pZGVudGl0eS5hY2Nlc3Njb250ZXh0bWFuYWdlci52MS5T",
            "ZXJ2aWNlUGVyaW1ldGVyQ29uZmlnEk0KBHNwZWMYCCABKAsyPy5nb29nbGUu",
            "aWRlbnRpdHkuYWNjZXNzY29udGV4dG1hbmFnZXIudjEuU2VydmljZVBlcmlt",
            "ZXRlckNvbmZpZxIhChl1c2VfZXhwbGljaXRfZHJ5X3J1bl9zcGVjGAkgASgI",
            "IkYKDVBlcmltZXRlclR5cGUSGgoWUEVSSU1FVEVSX1RZUEVfUkVHVUxBUhAA",
            "EhkKFVBFUklNRVRFUl9UWVBFX0JSSURHRRABIqYCChZTZXJ2aWNlUGVyaW1l",
            "dGVyQ29uZmlnEhEKCXJlc291cmNlcxgBIAMoCRIVCg1hY2Nlc3NfbGV2ZWxz",
            "GAIgAygJEhsKE3Jlc3RyaWN0ZWRfc2VydmljZXMYBCADKAkSdgoXdnBjX2Fj",
            "Y2Vzc2libGVfc2VydmljZXMYCiABKAsyVS5nb29nbGUuaWRlbnRpdHkuYWNj",
            "ZXNzY29udGV4dG1hbmFnZXIudjEuU2VydmljZVBlcmltZXRlckNvbmZpZy5W",
            "cGNBY2Nlc3NpYmxlU2VydmljZXMaTQoVVnBjQWNjZXNzaWJsZVNlcnZpY2Vz",
            "EhoKEmVuYWJsZV9yZXN0cmljdGlvbhgBIAEoCBIYChBhbGxvd2VkX3NlcnZp",
            "Y2VzGAIgAygJQqsCCitjb20uZ29vZ2xlLmlkZW50aXR5LmFjY2Vzc2NvbnRl",
            "eHRtYW5hZ2VyLnYxQhVTZXJ2aWNlUGVyaW1ldGVyUHJvdG9QAVpbZ29vZ2xl",
            "LmdvbGFuZy5vcmcvZ2VucHJvdG8vZ29vZ2xlYXBpcy9pZGVudGl0eS9hY2Nl",
            "c3Njb250ZXh0bWFuYWdlci92MTthY2Nlc3Njb250ZXh0bWFuYWdlcqICBEdB",
            "Q02qAidHb29nbGUuSWRlbnRpdHkuQWNjZXNzQ29udGV4dE1hbmFnZXIuVjHK",
            "AidHb29nbGVcSWRlbnRpdHlcQWNjZXNzQ29udGV4dE1hbmFnZXJcVjHqAipH",
            "b29nbGU6OklkZW50aXR5OjpBY2Nlc3NDb250ZXh0TWFuYWdlcjo6VjFiBnBy",
            "b3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Google.Api.AnnotationsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Identity.AccessContextManager.V1.ServicePerimeter), global::Google.Identity.AccessContextManager.V1.ServicePerimeter.Parser, new[]{ "Name", "Title", "Description", "CreateTime", "UpdateTime", "PerimeterType", "Status", "Spec", "UseExplicitDryRunSpec" }, null, new[]{ typeof(global::Google.Identity.AccessContextManager.V1.ServicePerimeter.Types.PerimeterType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Identity.AccessContextManager.V1.ServicePerimeterConfig), global::Google.Identity.AccessContextManager.V1.ServicePerimeterConfig.Parser, new[]{ "Resources", "AccessLevels", "RestrictedServices", "VpcAccessibleServices" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Google.Identity.AccessContextManager.V1.ServicePerimeterConfig.Types.VpcAccessibleServices), global::Google.Identity.AccessContextManager.V1.ServicePerimeterConfig.Types.VpcAccessibleServices.Parser, new[]{ "EnableRestriction", "AllowedServices" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// `ServicePerimeter` describes a set of Google Cloud resources which can freely
  /// import and export data amongst themselves, but not export outside of the
  /// `ServicePerimeter`. If a request with a source within this `ServicePerimeter`
  /// has a target outside of the `ServicePerimeter`, the request will be blocked.
  /// Otherwise the request is allowed. There are two types of Service Perimeter -
  /// Regular and Bridge. Regular Service Perimeters cannot overlap, a single
  /// Google Cloud project can only belong to a single regular Service Perimeter.
  /// Service Perimeter Bridges can contain only Google Cloud projects as members,
  /// a single Google Cloud project may belong to multiple Service Perimeter
  /// Bridges.
  /// </summary>
  public sealed partial class ServicePerimeter : pb::IMessage<ServicePerimeter>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ServicePerimeter> _parser = new pb::MessageParser<ServicePerimeter>(() => new ServicePerimeter());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ServicePerimeter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Identity.AccessContextManager.V1.ServicePerimeterReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServicePerimeter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServicePerimeter(ServicePerimeter other) : this() {
      name_ = other.name_;
      title_ = other.title_;
      description_ = other.description_;
      createTime_ = other.createTime_ != null ? other.createTime_.Clone() : null;
      updateTime_ = other.updateTime_ != null ? other.updateTime_.Clone() : null;
      perimeterType_ = other.perimeterType_;
      status_ = other.status_ != null ? other.status_.Clone() : null;
      spec_ = other.spec_ != null ? other.spec_.Clone() : null;
      useExplicitDryRunSpec_ = other.useExplicitDryRunSpec_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServicePerimeter Clone() {
      return new ServicePerimeter(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Required. Resource name for the ServicePerimeter.  The `short_name`
    /// component must begin with a letter and only include alphanumeric and '_'.
    /// Format: `accessPolicies/{policy_id}/servicePerimeters/{short_name}`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 2;
    private string title_ = "";
    /// <summary>
    /// Human readable title. Must be unique within the Policy.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 3;
    private string description_ = "";
    /// <summary>
    /// Description of the `ServicePerimeter` and its use. Does not affect
    /// behavior.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "create_time" field.</summary>
    public const int CreateTimeFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createTime_;
    /// <summary>
    /// Output only. Time the `ServicePerimeter` was created in UTC.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "update_time" field.</summary>
    public const int UpdateTimeFieldNumber = 5;
    private global::Google.Protobuf.WellKnownTypes.Timestamp updateTime_;
    /// <summary>
    /// Output only. Time the `ServicePerimeter` was updated in UTC.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp UpdateTime {
      get { return updateTime_; }
      set {
        updateTime_ = value;
      }
    }

    /// <summary>Field number for the "perimeter_type" field.</summary>
    public const int PerimeterTypeFieldNumber = 6;
    private global::Google.Identity.AccessContextManager.V1.ServicePerimeter.Types.PerimeterType perimeterType_ = global::Google.Identity.AccessContextManager.V1.ServicePerimeter.Types.PerimeterType.Regular;
    /// <summary>
    /// Perimeter type indicator. A single project is
    /// allowed to be a member of single regular perimeter, but multiple service
    /// perimeter bridges. A project cannot be a included in a perimeter bridge
    /// without being included in regular perimeter. For perimeter bridges,
    /// the restricted service list as well as access level lists must be
    /// empty.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Identity.AccessContextManager.V1.ServicePerimeter.Types.PerimeterType PerimeterType {
      get { return perimeterType_; }
      set {
        perimeterType_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 7;
    private global::Google.Identity.AccessContextManager.V1.ServicePerimeterConfig status_;
    /// <summary>
    /// Current ServicePerimeter configuration. Specifies sets of resources,
    /// restricted services and access levels that determine perimeter
    /// content and boundaries.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Identity.AccessContextManager.V1.ServicePerimeterConfig Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "spec" field.</summary>
    public const int SpecFieldNumber = 8;
    private global::Google.Identity.AccessContextManager.V1.ServicePerimeterConfig spec_;
    /// <summary>
    /// Proposed (or dry run) ServicePerimeter configuration. This configuration
    /// allows to specify and test ServicePerimeter configuration without enforcing
    /// actual access restrictions. Only allowed to be set when the
    /// "use_explicit_dry_run_spec" flag is set.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Identity.AccessContextManager.V1.ServicePerimeterConfig Spec {
      get { return spec_; }
      set {
        spec_ = value;
      }
    }

    /// <summary>Field number for the "use_explicit_dry_run_spec" field.</summary>
    public const int UseExplicitDryRunSpecFieldNumber = 9;
    private bool useExplicitDryRunSpec_;
    /// <summary>
    /// Use explicit dry run spec flag. Ordinarily, a dry-run spec implicitly
    /// exists  for all Service Perimeters, and that spec is identical to the
    /// status for those Service Perimeters. When this flag is set, it inhibits the
    /// generation of the implicit spec, thereby allowing the user to explicitly
    /// provide a configuration ("spec") to use in a dry-run version of the Service
    /// Perimeter. This allows the user to test changes to the enforced config
    /// ("status") without actually enforcing them. This testing is done through
    /// analyzing the differences between currently enforced and suggested
    /// restrictions. use_explicit_dry_run_spec must bet set to True if any of the
    /// fields in the spec are set to non-default values.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool UseExplicitDryRunSpec {
      get { return useExplicitDryRunSpec_; }
      set {
        useExplicitDryRunSpec_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ServicePerimeter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ServicePerimeter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Title != other.Title) return false;
      if (Description != other.Description) return false;
      if (!object.Equals(CreateTime, other.CreateTime)) return false;
      if (!object.Equals(UpdateTime, other.UpdateTime)) return false;
      if (PerimeterType != other.PerimeterType) return false;
      if (!object.Equals(Status, other.Status)) return false;
      if (!object.Equals(Spec, other.Spec)) return false;
      if (UseExplicitDryRunSpec != other.UseExplicitDryRunSpec) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (createTime_ != null) hash ^= CreateTime.GetHashCode();
      if (updateTime_ != null) hash ^= UpdateTime.GetHashCode();
      if (PerimeterType != global::Google.Identity.AccessContextManager.V1.ServicePerimeter.Types.PerimeterType.Regular) hash ^= PerimeterType.GetHashCode();
      if (status_ != null) hash ^= Status.GetHashCode();
      if (spec_ != null) hash ^= Spec.GetHashCode();
      if (UseExplicitDryRunSpec != false) hash ^= UseExplicitDryRunSpec.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Title);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      if (createTime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(CreateTime);
      }
      if (updateTime_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(UpdateTime);
      }
      if (PerimeterType != global::Google.Identity.AccessContextManager.V1.ServicePerimeter.Types.PerimeterType.Regular) {
        output.WriteRawTag(48);
        output.WriteEnum((int) PerimeterType);
      }
      if (status_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Status);
      }
      if (spec_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Spec);
      }
      if (UseExplicitDryRunSpec != false) {
        output.WriteRawTag(72);
        output.WriteBool(UseExplicitDryRunSpec);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Title);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      if (createTime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(CreateTime);
      }
      if (updateTime_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(UpdateTime);
      }
      if (PerimeterType != global::Google.Identity.AccessContextManager.V1.ServicePerimeter.Types.PerimeterType.Regular) {
        output.WriteRawTag(48);
        output.WriteEnum((int) PerimeterType);
      }
      if (status_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Status);
      }
      if (spec_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Spec);
      }
      if (UseExplicitDryRunSpec != false) {
        output.WriteRawTag(72);
        output.WriteBool(UseExplicitDryRunSpec);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (createTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateTime);
      }
      if (updateTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateTime);
      }
      if (PerimeterType != global::Google.Identity.AccessContextManager.V1.ServicePerimeter.Types.PerimeterType.Regular) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PerimeterType);
      }
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (spec_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Spec);
      }
      if (UseExplicitDryRunSpec != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ServicePerimeter other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.createTime_ != null) {
        if (createTime_ == null) {
          CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreateTime.MergeFrom(other.CreateTime);
      }
      if (other.updateTime_ != null) {
        if (updateTime_ == null) {
          UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        UpdateTime.MergeFrom(other.UpdateTime);
      }
      if (other.PerimeterType != global::Google.Identity.AccessContextManager.V1.ServicePerimeter.Types.PerimeterType.Regular) {
        PerimeterType = other.PerimeterType;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Google.Identity.AccessContextManager.V1.ServicePerimeterConfig();
        }
        Status.MergeFrom(other.Status);
      }
      if (other.spec_ != null) {
        if (spec_ == null) {
          Spec = new global::Google.Identity.AccessContextManager.V1.ServicePerimeterConfig();
        }
        Spec.MergeFrom(other.Spec);
      }
      if (other.UseExplicitDryRunSpec != false) {
        UseExplicitDryRunSpec = other.UseExplicitDryRunSpec;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Title = input.ReadString();
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
          case 34: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 42: {
            if (updateTime_ == null) {
              UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(UpdateTime);
            break;
          }
          case 48: {
            PerimeterType = (global::Google.Identity.AccessContextManager.V1.ServicePerimeter.Types.PerimeterType) input.ReadEnum();
            break;
          }
          case 58: {
            if (status_ == null) {
              Status = new global::Google.Identity.AccessContextManager.V1.ServicePerimeterConfig();
            }
            input.ReadMessage(Status);
            break;
          }
          case 66: {
            if (spec_ == null) {
              Spec = new global::Google.Identity.AccessContextManager.V1.ServicePerimeterConfig();
            }
            input.ReadMessage(Spec);
            break;
          }
          case 72: {
            UseExplicitDryRunSpec = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Title = input.ReadString();
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
          case 34: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 42: {
            if (updateTime_ == null) {
              UpdateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(UpdateTime);
            break;
          }
          case 48: {
            PerimeterType = (global::Google.Identity.AccessContextManager.V1.ServicePerimeter.Types.PerimeterType) input.ReadEnum();
            break;
          }
          case 58: {
            if (status_ == null) {
              Status = new global::Google.Identity.AccessContextManager.V1.ServicePerimeterConfig();
            }
            input.ReadMessage(Status);
            break;
          }
          case 66: {
            if (spec_ == null) {
              Spec = new global::Google.Identity.AccessContextManager.V1.ServicePerimeterConfig();
            }
            input.ReadMessage(Spec);
            break;
          }
          case 72: {
            UseExplicitDryRunSpec = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ServicePerimeter message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Specifies the type of the Perimeter. There are two types: regular and
      /// bridge. Regular Service Perimeter contains resources, access levels, and
      /// restricted services. Every resource can be in at most ONE
      /// regular Service Perimeter.
      ///
      /// In addition to being in a regular service perimeter, a resource can also
      /// be in zero or more perimeter bridges.  A perimeter bridge only contains
      /// resources.  Cross project operations are permitted if all effected
      /// resources share some perimeter (whether bridge or regular). Perimeter
      /// Bridge does not contain access levels or services: those are governed
      /// entirely by the regular perimeter that resource is in.
      ///
      /// Perimeter Bridges are typically useful when building more complex toplogies
      /// with many independent perimeters that need to share some data with a common
      /// perimeter, but should not be able to share data among themselves.
      /// </summary>
      public enum PerimeterType {
        /// <summary>
        /// Regular Perimeter.
        /// </summary>
        [pbr::OriginalName("PERIMETER_TYPE_REGULAR")] Regular = 0,
        /// <summary>
        /// Perimeter Bridge.
        /// </summary>
        [pbr::OriginalName("PERIMETER_TYPE_BRIDGE")] Bridge = 1,
      }

    }
    #endregion

  }

  /// <summary>
  /// `ServicePerimeterConfig` specifies a set of Google Cloud resources that
  /// describe specific Service Perimeter configuration.
  /// </summary>
  public sealed partial class ServicePerimeterConfig : pb::IMessage<ServicePerimeterConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ServicePerimeterConfig> _parser = new pb::MessageParser<ServicePerimeterConfig>(() => new ServicePerimeterConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ServicePerimeterConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Identity.AccessContextManager.V1.ServicePerimeterReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServicePerimeterConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServicePerimeterConfig(ServicePerimeterConfig other) : this() {
      resources_ = other.resources_.Clone();
      accessLevels_ = other.accessLevels_.Clone();
      restrictedServices_ = other.restrictedServices_.Clone();
      vpcAccessibleServices_ = other.vpcAccessibleServices_ != null ? other.vpcAccessibleServices_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServicePerimeterConfig Clone() {
      return new ServicePerimeterConfig(this);
    }

    /// <summary>Field number for the "resources" field.</summary>
    public const int ResourcesFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_resources_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> resources_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// A list of Google Cloud resources that are inside of the service perimeter.
    /// Currently only projects are allowed. Format: `projects/{project_number}`
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Resources {
      get { return resources_; }
    }

    /// <summary>Field number for the "access_levels" field.</summary>
    public const int AccessLevelsFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_accessLevels_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> accessLevels_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// A list of `AccessLevel` resource names that allow resources within the
    /// `ServicePerimeter` to be accessed from the internet. `AccessLevels` listed
    /// must be in the same policy as this `ServicePerimeter`. Referencing a
    /// nonexistent `AccessLevel` is a syntax error. If no `AccessLevel` names are
    /// listed, resources within the perimeter can only be accessed via Google
    /// Cloud calls with request origins within the perimeter. Example:
    /// `"accessPolicies/MY_POLICY/accessLevels/MY_LEVEL"`.
    /// For Service Perimeter Bridge, must be empty.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> AccessLevels {
      get { return accessLevels_; }
    }

    /// <summary>Field number for the "restricted_services" field.</summary>
    public const int RestrictedServicesFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_restrictedServices_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> restrictedServices_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Google Cloud services that are subject to the Service Perimeter
    /// restrictions. For example, if `storage.googleapis.com` is specified, access
    /// to the storage buckets inside the perimeter must meet the perimeter's
    /// access restrictions.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> RestrictedServices {
      get { return restrictedServices_; }
    }

    /// <summary>Field number for the "vpc_accessible_services" field.</summary>
    public const int VpcAccessibleServicesFieldNumber = 10;
    private global::Google.Identity.AccessContextManager.V1.ServicePerimeterConfig.Types.VpcAccessibleServices vpcAccessibleServices_;
    /// <summary>
    /// Configuration for APIs allowed within Perimeter.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Identity.AccessContextManager.V1.ServicePerimeterConfig.Types.VpcAccessibleServices VpcAccessibleServices {
      get { return vpcAccessibleServices_; }
      set {
        vpcAccessibleServices_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ServicePerimeterConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ServicePerimeterConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!resources_.Equals(other.resources_)) return false;
      if(!accessLevels_.Equals(other.accessLevels_)) return false;
      if(!restrictedServices_.Equals(other.restrictedServices_)) return false;
      if (!object.Equals(VpcAccessibleServices, other.VpcAccessibleServices)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= resources_.GetHashCode();
      hash ^= accessLevels_.GetHashCode();
      hash ^= restrictedServices_.GetHashCode();
      if (vpcAccessibleServices_ != null) hash ^= VpcAccessibleServices.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      resources_.WriteTo(output, _repeated_resources_codec);
      accessLevels_.WriteTo(output, _repeated_accessLevels_codec);
      restrictedServices_.WriteTo(output, _repeated_restrictedServices_codec);
      if (vpcAccessibleServices_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(VpcAccessibleServices);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      resources_.WriteTo(ref output, _repeated_resources_codec);
      accessLevels_.WriteTo(ref output, _repeated_accessLevels_codec);
      restrictedServices_.WriteTo(ref output, _repeated_restrictedServices_codec);
      if (vpcAccessibleServices_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(VpcAccessibleServices);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += resources_.CalculateSize(_repeated_resources_codec);
      size += accessLevels_.CalculateSize(_repeated_accessLevels_codec);
      size += restrictedServices_.CalculateSize(_repeated_restrictedServices_codec);
      if (vpcAccessibleServices_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VpcAccessibleServices);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ServicePerimeterConfig other) {
      if (other == null) {
        return;
      }
      resources_.Add(other.resources_);
      accessLevels_.Add(other.accessLevels_);
      restrictedServices_.Add(other.restrictedServices_);
      if (other.vpcAccessibleServices_ != null) {
        if (vpcAccessibleServices_ == null) {
          VpcAccessibleServices = new global::Google.Identity.AccessContextManager.V1.ServicePerimeterConfig.Types.VpcAccessibleServices();
        }
        VpcAccessibleServices.MergeFrom(other.VpcAccessibleServices);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            resources_.AddEntriesFrom(input, _repeated_resources_codec);
            break;
          }
          case 18: {
            accessLevels_.AddEntriesFrom(input, _repeated_accessLevels_codec);
            break;
          }
          case 34: {
            restrictedServices_.AddEntriesFrom(input, _repeated_restrictedServices_codec);
            break;
          }
          case 82: {
            if (vpcAccessibleServices_ == null) {
              VpcAccessibleServices = new global::Google.Identity.AccessContextManager.V1.ServicePerimeterConfig.Types.VpcAccessibleServices();
            }
            input.ReadMessage(VpcAccessibleServices);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            resources_.AddEntriesFrom(ref input, _repeated_resources_codec);
            break;
          }
          case 18: {
            accessLevels_.AddEntriesFrom(ref input, _repeated_accessLevels_codec);
            break;
          }
          case 34: {
            restrictedServices_.AddEntriesFrom(ref input, _repeated_restrictedServices_codec);
            break;
          }
          case 82: {
            if (vpcAccessibleServices_ == null) {
              VpcAccessibleServices = new global::Google.Identity.AccessContextManager.V1.ServicePerimeterConfig.Types.VpcAccessibleServices();
            }
            input.ReadMessage(VpcAccessibleServices);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ServicePerimeterConfig message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Specifies how APIs are allowed to communicate within the Service
      /// Perimeter.
      /// </summary>
      public sealed partial class VpcAccessibleServices : pb::IMessage<VpcAccessibleServices>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<VpcAccessibleServices> _parser = new pb::MessageParser<VpcAccessibleServices>(() => new VpcAccessibleServices());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<VpcAccessibleServices> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Google.Identity.AccessContextManager.V1.ServicePerimeterConfig.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public VpcAccessibleServices() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public VpcAccessibleServices(VpcAccessibleServices other) : this() {
          enableRestriction_ = other.enableRestriction_;
          allowedServices_ = other.allowedServices_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public VpcAccessibleServices Clone() {
          return new VpcAccessibleServices(this);
        }

        /// <summary>Field number for the "enable_restriction" field.</summary>
        public const int EnableRestrictionFieldNumber = 1;
        private bool enableRestriction_;
        /// <summary>
        /// Whether to restrict API calls within the Service Perimeter to the list of
        /// APIs specified in 'allowed_services'.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool EnableRestriction {
          get { return enableRestriction_; }
          set {
            enableRestriction_ = value;
          }
        }

        /// <summary>Field number for the "allowed_services" field.</summary>
        public const int AllowedServicesFieldNumber = 2;
        private static readonly pb::FieldCodec<string> _repeated_allowedServices_codec
            = pb::FieldCodec.ForString(18);
        private readonly pbc::RepeatedField<string> allowedServices_ = new pbc::RepeatedField<string>();
        /// <summary>
        /// The list of APIs usable within the Service Perimeter. Must be empty
        /// unless 'enable_restriction' is True.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<string> AllowedServices {
          get { return allowedServices_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as VpcAccessibleServices);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(VpcAccessibleServices other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (EnableRestriction != other.EnableRestriction) return false;
          if(!allowedServices_.Equals(other.allowedServices_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (EnableRestriction != false) hash ^= EnableRestriction.GetHashCode();
          hash ^= allowedServices_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (EnableRestriction != false) {
            output.WriteRawTag(8);
            output.WriteBool(EnableRestriction);
          }
          allowedServices_.WriteTo(output, _repeated_allowedServices_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (EnableRestriction != false) {
            output.WriteRawTag(8);
            output.WriteBool(EnableRestriction);
          }
          allowedServices_.WriteTo(ref output, _repeated_allowedServices_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (EnableRestriction != false) {
            size += 1 + 1;
          }
          size += allowedServices_.CalculateSize(_repeated_allowedServices_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(VpcAccessibleServices other) {
          if (other == null) {
            return;
          }
          if (other.EnableRestriction != false) {
            EnableRestriction = other.EnableRestriction;
          }
          allowedServices_.Add(other.allowedServices_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                EnableRestriction = input.ReadBool();
                break;
              }
              case 18: {
                allowedServices_.AddEntriesFrom(input, _repeated_allowedServices_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                EnableRestriction = input.ReadBool();
                break;
              }
              case 18: {
                allowedServices_.AddEntriesFrom(ref input, _repeated_allowedServices_codec);
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
